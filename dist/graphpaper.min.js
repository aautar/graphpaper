var GraphPaper = (function (exports) {
    'use strict';

    var MatrixMath={mat4Multiply:function mat4Multiply(a,b){for(var c=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],d=0;4>d;d++)for(var e,f=0;4>f;f++){e=0;for(var g=0;4>g;g++)e+=a[g+4*d]*b[f+4*g];c[f+4*d]=e;}return c},vecMat4Multiply:function vecMat4Multiply(a,b){for(var c=[0,0,0,0],d=0;4>d;d++)c[d]=a[0]*b[4*d+0]+a[1]*b[4*d+1]+a[2]*b[4*d+2]+a[3]*b[4*d+3];return c}};

    function Point(a,b){this.__x=a,this.__y=b;}Point.prototype.getX=function(){return this.__x},Point.prototype.getY=function(){return this.__y},Point.prototype.isEqual=function(a){return !(this.__x!==a.getX()||this.__y!==a.getY())},Point.prototype.getCartesianPoint=function(a,b){return new Point(this.__x-.5*a,-this.__y+.5*b)},Point.prototype.toString=function(){return this.__x+" "+this.__y},Point.prototype.toArray=function(){return [this.__x,this.__y]},Point.fromArray=function(a){return new Point(a[0],a[1])};

    var LINE_INTERSECTION_TYPE=Object.freeze({PARALLEL:"parallel",COINCIDENT:"coincident",LINE:"line",LINESEG:"lineseg"});function LineIntersection(a,b){this.__type=a,this.__intersectionPoint=b;}LineIntersection.prototype.getType=function(){return this.__type},LineIntersection.prototype.getIntersectionPoint=function(){return this.__intersectionPoint};

    function Line(a,b){if("undefined"==typeof a||null===a)throw "Line missing _startPoint";if("undefined"==typeof b||null===b)throw "Line missing _endPoint";this.__startPoint=a,this.__endPoint=b;}Line.prototype.getStartPoint=function(){return this.__startPoint},Line.prototype.getEndPoint=function(){return this.__endPoint},Line.prototype.isEqual=function(a){return !!(this.getStartPoint().isEqual(a.getStartPoint())&&this.getEndPoint().isEqual(a.getEndPoint()))},Line.prototype.getLength=function(){return Math.sqrt(Math.pow(this.__endPoint.getX()-this.__startPoint.getX(),2)+Math.pow(this.__endPoint.getY()-this.__startPoint.getY(),2))},Line.prototype.getMinX=function(){return Math.min(this.getStartPoint().getX(),this.getEndPoint().getX())},Line.prototype.getMaxX=function(){return Math.max(this.getStartPoint().getX(),this.getEndPoint().getX())},Line.prototype.getMinY=function(){return Math.min(this.getStartPoint().getY(),this.getEndPoint().getY())},Line.prototype.getMaxY=function(){return Math.max(this.getStartPoint().getY(),this.getEndPoint().getY())},Line.prototype.getDirection=function(){var a=this.__endPoint.getX()-this.__startPoint.getX(),b=this.__endPoint.getY()-this.__startPoint.getY(),c=Math.sqrt(a*a+b*b);return new Point(a/c,b/c)},Line.prototype.createShortenedLine=function(a,b){var c=this.__endPoint.getX()-this.__startPoint.getX(),d=this.__endPoint.getY()-this.__startPoint.getY(),e=this.getDirection();return new Line(new Point(this.__startPoint.getX()+a*e.getX(),this.__startPoint.getY()+a*e.getY()),new Point(this.__startPoint.getX()+c-b*e.getX(),this.__startPoint.getY()+d-b*e.getY()))},Line.prototype.computeIntersectionType=function(a){var b=this.__startPoint.getX(),c=this.__startPoint.getY(),d=this.__endPoint.getX(),e=this.__endPoint.getY(),f=a.getStartPoint().getX(),g=a.getStartPoint().getY(),h=a.getEndPoint().getX(),i=a.getEndPoint().getY(),j=(i-g)*(d-b)-(h-f)*(e-c),k=(h-f)*(c-g)-(i-g)*(b-f),l=(d-b)*(c-g)-(e-c)*(b-f);if(0==j)return 0==j&&0==k&&0==l?LINE_INTERSECTION_TYPE.COINCIDENT:LINE_INTERSECTION_TYPE.PARALLEL;var m=k/j,n=l/j;return 1<m||0>m||1<n||0>n?LINE_INTERSECTION_TYPE.LINE:LINE_INTERSECTION_TYPE.LINESEG},Line.prototype.computeIntersection=function(a){var b=this.__startPoint.getX(),c=this.__startPoint.getY(),d=this.__endPoint.getX(),e=this.__endPoint.getY(),f=a.getStartPoint().getX(),g=a.getStartPoint().getY(),h=a.getEndPoint().getX(),i=a.getEndPoint().getY(),j=(i-g)*(d-b)-(h-f)*(e-c),k=(h-f)*(c-g)-(i-g)*(b-f),l=(d-b)*(c-g)-(e-c)*(b-f);if(0==j)return 0==j&&0==k&&0==l?new LineIntersection(LINE_INTERSECTION_TYPE.COINCIDENT,null):new LineIntersection(LINE_INTERSECTION_TYPE.PARALLEL,null);var m=k/j,n=l/j,o=this.__startPoint.getX()+m*(this.__endPoint.getX()-this.__startPoint.getX()),p=this.__startPoint.getY()+m*(this.__endPoint.getY()-this.__startPoint.getY());return 1<m||0>m||1<n||0>n?new LineIntersection(LINE_INTERSECTION_TYPE.LINE,new Point(o,p)):new LineIntersection(LINE_INTERSECTION_TYPE.LINESEG,new Point(o,p))};

    var SvgPathBuilder={pointToLineTo:function pointToLineTo(a,b){return 0===b?"M"+a.getX()+" "+a.getY():"L"+a.getX()+" "+a.getY()},pointTripletToTesselatedCurvePoints:function pointTripletToTesselatedCurvePoints(a,b){if(3!==a.length)throw new Error("_points must be array of exactly 3 points");var c=a[1],d=new Line(a[0],a[1]),e=new Line(a[1],a[2]),f=d.createShortenedLine(0,.5*b),g=e.createShortenedLine(.5*b,0);return [f.getStartPoint(),f.getEndPoint(),g.getStartPoint(),g.getEndPoint()]},pointsToPath:function pointsToPath(a,b){b=b||0;var c=[],d=0;if(0<b){for(;3<=a.length;){var e=a.shift(),f=a.shift(),g=a.shift(),h=SvgPathBuilder.pointTripletToTesselatedCurvePoints([e,f,g],b);a.unshift(h[3]),a.unshift(h[2]);for(var k=0;k<h.length-2;k++)c.push(SvgPathBuilder.pointToLineTo(h[k],d++));}for(;0<a.length;){var j=a.shift();c.push(SvgPathBuilder.pointToLineTo(j,d++));}}else for(var l,m=0;m<a.length;m++)l=a[m],c.push(SvgPathBuilder.pointToLineTo(l,m));return c.join(" ")}};

    function Dimensions(a,b){this.getWidth=function(){return a},this.getHeight=function(){return b};}

    function Rectangle(a,b,c,d){this.__left=a,this.__top=b,this.__right=c,this.__bottom=d;}Rectangle.prototype.getLeft=function(){return this.__left},Rectangle.prototype.getTop=function(){return this.__top},Rectangle.prototype.getRight=function(){return this.__right},Rectangle.prototype.getBottom=function(){return this.__bottom},Rectangle.prototype.getWidth=function(){return this.__right-this.__left},Rectangle.prototype.getHeight=function(){return this.__bottom-this.__top},Rectangle.prototype.getPoints=function(){return [new Point(this.__left,this.__top),new Point(this.__right,this.__top),new Point(this.__right,this.__bottom),new Point(this.__left,this.__bottom)]},Rectangle.prototype.getLines=function(){return [new Line(new Point(this.__left,this.__top),new Point(this.__right,this.__top)),new Line(new Point(this.__right,this.__top),new Point(this.__right,this.__bottom)),new Line(new Point(this.__right,this.__bottom),new Point(this.__left,this.__bottom)),new Line(new Point(this.__left,this.__bottom),new Point(this.__left,this.__top))]},Rectangle.prototype.getUniformlyResizedCopy=function(a){return new Rectangle(this.__left-a,this.__top-a,this.__right+a,this.__bottom+a)},Rectangle.prototype.getPointsScaledToGrid=function(a){var b=new Point(this.__left+.5*(this.__right-this.__left),this.__top+.5*(this.__bottom-this.__top)),c=(this.__right-b.getX()+a)/(this.__right-b.getX()),d=(this.__bottom-b.getY()+a)/(this.__bottom-b.getY()),e=[new Point((this.__left-b.getX())*c+b.getX(),(this.__top-b.getY())*d+b.getY()),new Point((this.__right-b.getX())*c+b.getX(),(this.__top-b.getY())*d+b.getY()),new Point((this.__right-b.getX())*c+b.getX(),(this.__bottom-b.getY())*d+b.getY()),new Point((this.__left-b.getX())*c+b.getX(),(this.__bottom-b.getY())*d+b.getY())];return e},Rectangle.prototype.checkIntersect=function(a){return !(this.__bottom<a.getTop())&&!(this.__top>a.getBottom())&&!(this.__right<a.getLeft())&&!(this.__left>a.getRight())},Rectangle.prototype.checkIsPointWithin=function(a){return !!(a.getX()>=this.__left&&a.getX()<=this.__right&&a.getY()>=this.__top&&a.getY()<=this.__bottom)},Rectangle.prototype.checkIsWithin=function(a){return !!(this.__bottom<=a.getBottom()&&this.__top>=a.getTop()&&this.__right<=a.getRight()&&this.__left>=a.getLeft())};

    var GroupTransformationContainerEvent=Object.freeze({TRANSLATE_START:"group-transformation-container-translate-start"});

    var EntityEvent=Object.freeze({TRANSLATE_START:"obj-translate-start",TRANSLATE:"obj-translate",RESIZE_START:"obj-resize-start",RESIZE:"obj-resize"});

    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
    }

    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
    }

    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) {
        for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

        return arr2;
      }
    }

    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }

    function _iterableToArray(iter) {
      if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
    }

    function _iterableToArrayLimit(arr, i) {
      if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
        return;
      }

      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    }

    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }

    function PointSet(a){var b=this,c=[];this.push=function(a){for(var b=0;b<c.length;b++)if(a.isEqual(c[b]))return !1;return c.push(a),!0},this.pushPointSet=function(a){for(var c=a.toArray(),d=0;d<c.length;d++)b.push(c[d]);},this.findPointClosestTo=function(a){var b=null,d=Number.MAX_SAFE_INTEGER;return c.forEach(function(c){var e=new Line(a,c);e.getLength()<d&&(b=c,d=e.getLength());}),b},this.findDistanceToPointClosestTo=function(a){var b=Number.MAX_SAFE_INTEGER;return c.forEach(function(c){var d=new Line(a,c);d.getLength()<b&&(b=d.getLength());}),b},this.findPointsCloseTo=function(a,b){var d=new PointSet;return c.forEach(function(c){var e=new Line(a,c);e.getLength()<=b&&d.push(c);}),d},this.toArray=function(){return c},this.toFloat64Array=function(){for(var a=new Float64Array(2*c.length),b=0;b<c.length;b++)a[0+2*b]=c[b].getX(),a[1+2*b]=c[b].getY();return a};var d=function fromFloat64Array(a){c.length=0;for(var b=0;b<a.length;b+=2)c.push(new Point(a[b],a[b+1]));};this.count=function(){return c.length},a&&Array.isArray(a)?a.forEach(b.push):a&&"[object Float64Array]"===Object.prototype.toString.call(a)&&d(a);}

    var AccessibleRoutingPointsFinder={find:function find(a,b,c){var d=new Map,e=[],f=new PointSet;return a.forEach(function(a){var b=a.connectorAnchors;b.forEach(function(a){{var c=new PointSet(a.routingPointsFloat64Arr).toArray();c.forEach(function(b){e.push({routingPoint:b,parentAnchorId:a.id});}),d.set(a.id,c.length);}});}),e.forEach(function(a){for(var c=!1,e=0;e<b.length;e++){var g=b[e],h=new Rectangle(g.x,g.y,g.x+g.width,g.y+g.height);if(h.checkIsPointWithin(a.routingPoint)){c=!0;var j=d.get(a.parentAnchorId)||0;d.set(a.parentAnchorId,j-1);}}c||f.push(a.routingPoint);}),{connectorAnchorToNumValidRoutingPoints:d,accessibleRoutingPoints:f}}};

    var SheetEvent=Object.freeze({DBLCLICK:"dblclick",CLICK:"click",CONNECTOR_UPDATED:"connector-updated",ENTITY_ADDED:"entity-added",ENTITY_REMOVED:"entity-removed",ENTITY_RESIZED:"entity-resized",ENTITY_TRANSLATED:"entity-translated",MULTIPLE_ENTITY_SELECTION_STARTED:"multiple-object-selection-started",MULTIPLE_ENTITIES_SELECTED:"multiple-objects-selected"});

    function ConnectorAnchor(a,b,c){var d=this,e=function getDimensions(){var a=c.transformDomRectToPageSpaceRect(b.getBoundingClientRect());return new Point(a.getWidth(),a.getHeight())};this.getId=function(){return a},this.getX=function(){return d.getCentroid().getX()},this.getY=function(){return d.getCentroid().getY()},this.getWidth=function(){var a=c.transformDomRectToPageSpaceRect(b.getBoundingClientRect());return a.getWidth()},this.getHeight=function(){var a=c.transformDomRectToPageSpaceRect(b.getBoundingClientRect());return a.getHeight()},this.getCentroid=function(){var a=c.getSheetOffset(),d=c.transformDomRectToPageSpaceRect(b.getBoundingClientRect()),e=.5*d.getWidth(),f=.5*d.getHeight();return new Point(d.getLeft()+e-a.getX(),d.getTop()+f-a.getY())},this.getRoutingPoints=function(a){var b=e(),c=d.getCentroid(),f=.5*b.getX(),g=.5*b.getY();return [new Point(c.getX()+f+a,c.getY()),new Point(c.getX()-f-a,c.getY()),new Point(c.getX(),c.getY()+g+a),new Point(c.getX(),c.getY()-g-a)]},this.getBoundingRectange=function(){var a=e(),b=d.getCentroid(),c=.5*a.getX(),f=.5*a.getY();return new Rectangle(b.getX()-c,b.getY()-f,b.getX()+c,b.getY()+f)};}

    var ClosestPairFinder={findClosestPairBetweenObjects:function findClosestPairBetweenObjects(a,b,c){for(var e=a.getConnectorAnchors(),f=b.getConnectorAnchors(),g=0,h=0,i=Number.MAX_VALUE,j=0;j<e.length;j++){var k=e[j].getCentroid(),l=c.get(e[j].getId())||0;if(0!==l)for(var o=0;o<f.length;o++){var m=f[o].getCentroid(),n=Math.sqrt(Math.pow(m.getX()-k.getX(),2)+Math.pow(m.getY()-k.getY(),2)),d=c.get(f[o].getId())||0;n<i&&0<d&&(g=j,h=o,i=n);}}return {objectAAnchorIndex:g,objectAAnchor:e[g],objectBAnchorIndex:h,objectBAnchor:f[h]}}};

    var DebugMetricsPanel=function DebugMetricsPanel(a){var b=null,c=!1;this.init=function(){b=a.document.createElement("div"),b.classList.add("graphpaper-debug-panel"),b.style.display="none",b.style.position="fixed",b.style.right="0px",b.style.top="0px",b.style.width="450px",b.style.height="200px",b.style.color="#fff",b.style.padding="15px",b.style.backgroundColor="rgba(0,0,0,0.75)",a.document.body.appendChild(b);},this.show=function(){c=!0,b.style.display="block";},this.hide=function(){c=!1,b.style.display="none";},this.refresh=function(a){!1===c||(b.innerHTML=`
            <p>refreshAllConnectorsInternal.executionTime = ${a.refreshAllConnectorsInternal.executionTime}</p>
            <p>connectorRoutingWorker.executionTime = ${a.connectorRoutingWorker.executionTime}</p>            
            <p>-- connectorRoutingWorker.msgDecodeTime = ${a.connectorRoutingWorker.msgDecodeTime}</p>
            <p>-- connectorRoutingWorker.pointVisibilityMapCreationTime = ${a.connectorRoutingWorker.pointVisibilityMapCreationTime}</p>
            <p>-- connectorRoutingWorker.allPathsComputationTime = ${a.connectorRoutingWorker.allPathsComputationTime}</p>
            <p>-- connectorRoutingWorker.numRoutingPoints = ${a.connectorRoutingWorker.numRoutingPoints}</p>
            <p>-- connectorRoutingWorker.numBoundaryLines = ${a.connectorRoutingWorker.numBoundaryLines}</p>
            <p>connectorsRefreshTime = ${a.connectorsRefreshTime}</p>
        `);};};

    function DoubleTapDetector(a,b){var c={lastTouchX:null,lastTouchY:null,lastTouchTime:null},d=a||300,e=b||24;this.processTap=function(a,b,f){if(0===a.changedTouches.length)return {doubleTapDetected:!1,touchX:null,touchY:null};var g=MatrixMath.vecMat4Multiply([a.changedTouches[0].pageX-b.getX(),a.changedTouches[0].pageY-b.getY(),0,1],f),h=!1,i=g[0],j=g[1],k=new Date().getTime();if(null!==c.lastTouchTime){var l=c.lastTouchTime,m=k-l,n=c.lastTouchX,o=c.lastTouchY,p=Math.sqrt(Math.pow(i-n,2)+Math.pow(j-o,2));m<=d&&p<=e&&(c.lastTouchTime=null,c.lastTouchX=null,c.lastTouchY=null,h=!0);}return h||(c.lastTouchTime=k,c.lastTouchX=i,c.lastTouchY=j),{doubleTapDetected:h,touchX:i,touchY:j}};}

    function LineSet(a){var b=this,c=[];this.push=function(a){for(var b=0;b<c.length;b++)if(a.isEqual(c[b]))return !1;return c.push(a),!0},this.toArray=function(){return c},this.count=function(){return c.length},this.toFloat64Array=function(){for(var a=new Float64Array(4*c.length),b=0;b<c.length;b++)a[0+4*b]=c[b].getStartPoint().getX(),a[1+4*b]=c[b].getStartPoint().getY(),a[2+4*b]=c[b].getEndPoint().getX(),a[3+4*b]=c[b].getEndPoint().getY();return a};var d=function fromFloat64Array(a){c.length=0;for(var b=0;b<a.length;b+=4)c.push(new Line(new Point(a[b],a[b+1]),new Point(a[b+2],a[b+3])));};a&&Array.isArray(a)?a.forEach(b.push):a&&"[object Float64Array]"===Object.prototype.toString.call(a)&&d(a);}

    var ConnectorEvent=Object.freeze({CLICK:"connector-click",MOUSE_ENTER:"connector-mouse-enter",MOUSE_LEAVE:"connector-mouse-leave"});

    var ConnectorRoutingAlgorithm=Object.freeze({STRAIGHT_LINE:0,STRAIGHT_LINE_BETWEEN_ANCHORS:1,STRAIGHT_LINE_BETWEEN_ANCHORS_AVOID_SELF_INTERSECTION:2,ASTAR:3,ASTAR_WITH_ROUTE_OPTIMIZATION:4});

    function Connector(a,b,c,d,e,f,g){var h=this,j=new Map,k=0,l=0;"undefined"==typeof d&&(d="#000"),"undefined"==typeof e&&(e="2px"),"undefined"==typeof f&&(f=0),"undefined"==typeof g&&(g=ConnectorRoutingAlgorithm.ASTAR_WITH_ROUTE_OPTIMIZATION);var m=null,n=window.document.createElementNS("http://www.w3.org/2000/svg","path");n.setAttribute("d","M0 0 L0 0"),n.style.stroke=d,n.style.strokeWidth=e,n.addEventListener("click",function(a){h.dispatchEvent(ConnectorEvent.CLICK,{connector:h,clickedAtX:a.pageX,clickedAtY:a.pageY});}),n.addEventListener("mouseenter",function(a){h.dispatchEvent(ConnectorEvent.MOUSE_ENTER,{connector:h,pointerAtX:a.pageX,pointerAtY:a.pageY});}),n.addEventListener("mouseleave",function(a){h.dispatchEvent(ConnectorEvent.MOUSE_LEAVE,{connector:h});});var o=null;this.appendPathToContainerDomElement=function(){o=c.appendChild(n);},this.setMarkerStart=function(a,b){n.setAttribute(`marker-start`,`url(${a})`),k=b;},this.unsetMarkerStart=function(){n.removeAttribute(`marker-start`),k=0;},this.setMarkerEnd=function(a,b){n.setAttribute(`marker-end`,`url(${a})`),l=b;},this.unsetMarkerEnd=function(){n.removeAttribute(`marker-end`),l=0;},this.getPathPoints=function(){return m},this.getPathLines=function(){if(null===m||2>m.length)return [];for(var a=[],b=0;b<m.length-1;b++)a.push(new Line(m[b],m[b+1]));return a},this.getLength=function(){for(var a=0,b=h.getPathLines(),c=0;c<b.length;c++)a+=b[c].getLength();return a},this.getMidpoint=function(){for(var a=h.getLength(),b=h.getPathLines(),c=0,d=null,e=0;e<b.length;e++){d=b[e];var k=b[e].getLength();if(c+=k,c>=a/2)break}var f=c-d.getLength(),g=a/2-f,j=g/d.getLength();return new Point(d.getStartPoint().getX()+j*(d.getEndPoint().getX()-d.getStartPoint().getX()),d.getStartPoint().getY()+j*(d.getEndPoint().getY()-d.getStartPoint().getY()))},this.getMidpointDirection=function(){for(var a=h.getLength(),b=h.getPathLines(),c=0,d=null,e=0;e<b.length;e++){d=b[e];var f=b[e].getLength();if(c+=f,c>=a/2)break}return null===d?b[0].getDirection():d.getDirection()},this.refresh=function(a,b){m=b,n.setAttribute("d",a);},this.getId=function(){var c=[a.getId(),b.getId()].sort();return c.join(":")},this.getAnchorStart=function(){return a},this.getAnchorEnd=function(){return b},this.removePathElement=function(){n.remove();},this.addClassToDomElement=function(a){n.classList.add(a);},this.removeClassFromDomElement=function(a){n.classList.remove(a);},this.getDescriptor=function(){return {id:h.getId(),anchor_start_centroid_arr:a.getCentroid().toArray(),anchor_end_centroid_arr:b.getCentroid().toArray(),marker_start_size:k,marker_end_size:l,curvature_px:f,routing_algorithm:g}},this.on=function(a,b){var c=j.get(a)||[];c.push(b),j.set(a,c);},this.off=function(a,b){for(var c=j.get(a)||[],d=0;d<c.length;d++)if(c[d]===b){c.splice(d,1);break}j.set(a,c);},this.dispatchEvent=function(a,b){var c=j.get(a)||[];c.forEach(function(a){a(b);});};}

    var PointVisibilityMapRouteOptimizer={optimize:function optimize(a,b){for(var c=0,d=a.length-1;!(1>=d-c&&(c++,d=a.length-1,c>=a.length-2));)b(a[c],a[d])?(a.splice(c+1,d-c-1),d=a.length-1):d--;}};

    var PointInfo={point:null,visiblePoints:null};function PointVisibilityMap(){var a=this,b=new Map,c=new Map,d=new Map,e=0,f=0,g=function doesLineIntersectAnyBoundaryLines(a){var b=!0,e=!1,f=void 0;try{for(var g,h=c[Symbol.iterator]();!(b=(g=h.next()).done);b=!0){var j=_slicedToArray(g.value,2),k=j[0],l=j[1],m=d.get(k);if(!(a.getMinX()>m.outerBoundingRect.maxX)&&!(a.getMaxX()<m.outerBoundingRect.minX)&&!(a.getMinY()>m.outerBoundingRect.maxY)&&!(a.getMaxY()<m.outerBoundingRect.minY))for(var n,o=l.toArray(),p=0;p<o.length;p++)if(n=o[p].computeIntersectionType(a),n===LINE_INTERSECTION_TYPE.LINESEG)return !0}}catch(a){e=!0,f=a;}finally{try{b||null==h.return||h.return();}finally{if(e)throw f}}return !1},h=function computePointsVisibilityForPoint(a){a.visiblePoints.points.length=0;var c=!0,d=!1,e=void 0;try{for(var f,h=b[Symbol.iterator]();!(c=(f=h.next()).done);c=!0){var i=_slicedToArray(f.value,2),j=i[0],k=i[1],l=!0,m=!1,n=void 0;try{for(var o,p=k[Symbol.iterator]();!(l=(o=p.next()).done);l=!0){var q=_slicedToArray(o.value,2),r=q[0],s=q[1],t=new Line(a.point,r);0<t.getLength()&&!g(t)&&a.visiblePoints.points.push(r);}}catch(a){m=!0,n=a;}finally{try{l||null==p.return||p.return();}finally{if(m)throw n}}}}catch(a){d=!0,e=a;}finally{try{c||null==h.return||h.return();}finally{if(d)throw e}}a.visiblePoints.isValid=!0;},i=function arePointsVisibleToEachOther(a,b){for(var c=o(a),d=j(c),e=0;e<d.length;e++)if(d[e].isEqual(b))return !0;return !1},j=function getVisiblePointsRelativeTo(a){return a.visiblePoints.isValid||h(a),a.visiblePoints.points},k=function isPointInArray(a,b){for(var c=0;c<b.length;c++)if(a.isEqual(b[c]))return !0;return !1},l=function routeToEndpoint(a,b,c,d){for(var e,f=c.point,g=j(c),h=Number.MAX_SAFE_INTEGER,l=null,m=0;m<g.length;m++)if(e=g[m],!k(e,b)){var n=new Line(f,e).getLength()+a,o=new Line(e,d).getLength();n+o<h&&(h=n+o,l=e);}return h===Number.MAX_SAFE_INTEGER?null:{cost:h,point:l}},m=function getBoundaryLinesFromEntityDescriptor(a){var b=new LineSet,c=new Rectangle(a.x,a.y,a.x+a.width,a.y+a.height),d=c.getLines();d.forEach(function(a){b.push(a);});var e=a.connectorAnchors;return e.forEach(function(a){var c=new Rectangle(a.x,a.y,a.x+a.width,a.y+a.height),d=c.getLines();d.forEach(function(a){b.push(a);});}),b},n=function hasEntityMutated(a,b){return !(a.x===b.x&&a.y===b.y&&a.width===b.width&&a.height===b.height)},o=function fetchPointInfoForPoint(a){var c=!0,d=!1,e=void 0;try{for(var f,g=b[Symbol.iterator]();!(c=(f=g.next()).done);c=!0){var h=_slicedToArray(f.value,2),i=h[0],j=h[1],k=!0,l=!1,m=void 0;try{for(var n,o=j[Symbol.iterator]();!(k=(n=o.next()).done);k=!0){var q=_slicedToArray(n.value,2),r=q[0],s=q[1];if(r===a)return p(r,s)}}catch(a){l=!0,m=a;}finally{try{k||null==o.return||o.return();}finally{if(l)throw m}}}}catch(a){d=!0,e=a;}finally{try{c||null==g.return||g.return();}finally{if(d)throw e}}return null},p=function buildPointInfo(a,b){var c=Object.create(PointInfo);return c.point=a,c.visiblePoints=b,c},q=function buildEmptyRoutingPointToVisibleSetMap(a,b,c){for(var d=new Rectangle(a.x,a.y,a.x+a.width,a.y+a.height),e=AccessibleRoutingPointsFinder.find([a],b,c),f=e.accessibleRoutingPoints.toArray(),g=new Map,h=0;h<f.length;h++)g.set(f[h],{isValid:!1,points:[]});var i=d.getPointsScaledToGrid(c);return i.forEach(function(a){g.set(a,{isValid:!1,points:[]});}),g};this.updateRoutingPointsAndBoundaryLinesFromEntityDescriptors=function(a,g){e=0,f=0;for(var h,j=[],k=[],l=[],o=0;o<a.length;o++){h=a[o].id,j.push(h);var p=c.get(h),r=d.get(h);if(p&&!n(r,a[o])){f+=p.count();continue}var C=m(a[o]);c.set(h,C),f+=C.count();}for(var D=0;D<a.length;D++){var s=a[D].id,t=d.get(s);!t||n(t,a[D]);var E=q(a[D],a,g);b.set(s,E),d.set(s,a[D]),k.push(s),e+=E.size;}var u=!0,v=!1,w=void 0;try{for(var x,y=d[Symbol.iterator]();!(u=(x=y.next()).done);u=!0){var z=_slicedToArray(x.value,2),A=z[0],B=z[1];j.includes(A)||(k.push(A),l.push(A));}}catch(a){v=!0,w=a;}finally{try{u||null==y.return||y.return();}finally{if(v)throw w}}return l.forEach(function(a){d.delete(_eid),c.delete(_eid),b.delete(_eid);}),k.length},this.getCurrentNumRoutingPoints=function(){return e},this.getCurrentNumBoundaryLines=function(){return f},this.findVisiblePointInfoClosestTo=function(a){var c=null,d=Number.MAX_SAFE_INTEGER,e=!0,f=!1,h=void 0;try{for(var i,j=b[Symbol.iterator]();!(e=(i=j.next()).done);e=!0){var k=_slicedToArray(i.value,2),l=k[0],m=k[1],n=!0,o=!1,q=void 0;try{for(var r,s=m[Symbol.iterator]();!(n=(r=s.next()).done);n=!0){var t=_slicedToArray(r.value,2),u=t[0],v=t[1],w=new Line(a,u),x=w.getLength();x<d&&!g(w)&&(c=p(u,v),d=x);;}}catch(a){o=!0,q=a;}finally{try{n||null==s.return||s.return();}finally{if(o)throw q}}}}catch(a){f=!0,h=a;}finally{try{e||null==j.return||j.return();}finally{if(f)throw h}}return c},this.computeRoute=function(b,c,d){if(null===b||null===c)return new PointSet;var e=a.findVisiblePointInfoClosestTo(b);if(null===e)return new PointSet;for(var f,h=0,j=[e.point],k=e;!0;){if(f=l(h,j,k,c),null===f){var m=new Line(j[j.length-1],c);if(g(m))return new PointSet;break}if(h+=new Line(k.point,f.point).getLength(),j.push(f.point),k=o(f.point),1>new Line(k.point,c).getLength())break}return d&&PointVisibilityMapRouteOptimizer.optimize(j,i),new PointSet(j)};}

    var GRID_STYLE={LINE:"line",DOT:"dot"};function Grid(a,b,c){this.getSize=function(){return a},this.getStyle=function(){return c},this.getSvgImageTile=function(){return c===GRID_STYLE.LINE?`<svg xmlns="http://www.w3.org/2000/svg" width="${a}" height="${a}"><rect width="${a}" height="1" x="0" y="${a-1}" style="fill:${b}" /><rect width="1" height="${a}" x="${a-1}" y="0" style="fill:${b}" /></svg>`:`<svg xmlns="http://www.w3.org/2000/svg" width="${a}" height="${a}"><rect width="1" height="1" x="${a-1}" y="${a-1}" style="fill:${b}" /></svg>`};}

    var ConnectorRoutingWorkerJsString=`(function () {
  'use strict';

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

      return arr2;
    }
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  function _iterableToArrayLimit(arr, i) {
    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
      return;
    }

    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  function Point(a,b){this.__x=a,this.__y=b;}Point.prototype.getX=function(){return this.__x},Point.prototype.getY=function(){return this.__y},Point.prototype.isEqual=function(a){return !(this.__x!==a.getX()||this.__y!==a.getY())},Point.prototype.getCartesianPoint=function(a,b){return new Point(this.__x-.5*a,-this.__y+.5*b)},Point.prototype.toString=function(){return this.__x+" "+this.__y},Point.prototype.toArray=function(){return [this.__x,this.__y]},Point.fromArray=function(a){return new Point(a[0],a[1])};

  var LINE_INTERSECTION_TYPE=Object.freeze({PARALLEL:"parallel",COINCIDENT:"coincident",LINE:"line",LINESEG:"lineseg"});function LineIntersection(a,b){this.__type=a,this.__intersectionPoint=b;}LineIntersection.prototype.getType=function(){return this.__type},LineIntersection.prototype.getIntersectionPoint=function(){return this.__intersectionPoint};

  function Line(a,b){if("undefined"==typeof a||null===a)throw "Line missing _startPoint";if("undefined"==typeof b||null===b)throw "Line missing _endPoint";this.__startPoint=a,this.__endPoint=b;}Line.prototype.getStartPoint=function(){return this.__startPoint},Line.prototype.getEndPoint=function(){return this.__endPoint},Line.prototype.isEqual=function(a){return !!(this.getStartPoint().isEqual(a.getStartPoint())&&this.getEndPoint().isEqual(a.getEndPoint()))},Line.prototype.getLength=function(){return Math.sqrt(Math.pow(this.__endPoint.getX()-this.__startPoint.getX(),2)+Math.pow(this.__endPoint.getY()-this.__startPoint.getY(),2))},Line.prototype.getMinX=function(){return Math.min(this.getStartPoint().getX(),this.getEndPoint().getX())},Line.prototype.getMaxX=function(){return Math.max(this.getStartPoint().getX(),this.getEndPoint().getX())},Line.prototype.getMinY=function(){return Math.min(this.getStartPoint().getY(),this.getEndPoint().getY())},Line.prototype.getMaxY=function(){return Math.max(this.getStartPoint().getY(),this.getEndPoint().getY())},Line.prototype.getDirection=function(){var a=this.__endPoint.getX()-this.__startPoint.getX(),b=this.__endPoint.getY()-this.__startPoint.getY(),c=Math.sqrt(a*a+b*b);return new Point(a/c,b/c)},Line.prototype.createShortenedLine=function(a,b){var c=this.__endPoint.getX()-this.__startPoint.getX(),d=this.__endPoint.getY()-this.__startPoint.getY(),e=this.getDirection();return new Line(new Point(this.__startPoint.getX()+a*e.getX(),this.__startPoint.getY()+a*e.getY()),new Point(this.__startPoint.getX()+c-b*e.getX(),this.__startPoint.getY()+d-b*e.getY()))},Line.prototype.computeIntersectionType=function(a){var b=this.__startPoint.getX(),c=this.__startPoint.getY(),d=this.__endPoint.getX(),e=this.__endPoint.getY(),f=a.getStartPoint().getX(),g=a.getStartPoint().getY(),h=a.getEndPoint().getX(),i=a.getEndPoint().getY(),j=(i-g)*(d-b)-(h-f)*(e-c),k=(h-f)*(c-g)-(i-g)*(b-f),l=(d-b)*(c-g)-(e-c)*(b-f);if(0==j)return 0==j&&0==k&&0==l?LINE_INTERSECTION_TYPE.COINCIDENT:LINE_INTERSECTION_TYPE.PARALLEL;var m=k/j,n=l/j;return 1<m||0>m||1<n||0>n?LINE_INTERSECTION_TYPE.LINE:LINE_INTERSECTION_TYPE.LINESEG},Line.prototype.computeIntersection=function(a){var b=this.__startPoint.getX(),c=this.__startPoint.getY(),d=this.__endPoint.getX(),e=this.__endPoint.getY(),f=a.getStartPoint().getX(),g=a.getStartPoint().getY(),h=a.getEndPoint().getX(),i=a.getEndPoint().getY(),j=(i-g)*(d-b)-(h-f)*(e-c),k=(h-f)*(c-g)-(i-g)*(b-f),l=(d-b)*(c-g)-(e-c)*(b-f);if(0==j)return 0==j&&0==k&&0==l?new LineIntersection(LINE_INTERSECTION_TYPE.COINCIDENT,null):new LineIntersection(LINE_INTERSECTION_TYPE.PARALLEL,null);var m=k/j,n=l/j,o=this.__startPoint.getX()+m*(this.__endPoint.getX()-this.__startPoint.getX()),p=this.__startPoint.getY()+m*(this.__endPoint.getY()-this.__startPoint.getY());return 1<m||0>m||1<n||0>n?new LineIntersection(LINE_INTERSECTION_TYPE.LINE,new Point(o,p)):new LineIntersection(LINE_INTERSECTION_TYPE.LINESEG,new Point(o,p))};

  function PointSet(a){var b=this,c=[];this.push=function(a){for(var b=0;b<c.length;b++)if(a.isEqual(c[b]))return !1;return c.push(a),!0},this.pushPointSet=function(a){for(var c=a.toArray(),d=0;d<c.length;d++)b.push(c[d]);},this.findPointClosestTo=function(a){var b=null,d=Number.MAX_SAFE_INTEGER;return c.forEach(function(c){var e=new Line(a,c);e.getLength()<d&&(b=c,d=e.getLength());}),b},this.findDistanceToPointClosestTo=function(a){var b=Number.MAX_SAFE_INTEGER;return c.forEach(function(c){var d=new Line(a,c);d.getLength()<b&&(b=d.getLength());}),b},this.findPointsCloseTo=function(a,b){var d=new PointSet;return c.forEach(function(c){var e=new Line(a,c);e.getLength()<=b&&d.push(c);}),d},this.toArray=function(){return c},this.toFloat64Array=function(){for(var a=new Float64Array(2*c.length),b=0;b<c.length;b++)a[0+2*b]=c[b].getX(),a[1+2*b]=c[b].getY();return a};var d=function fromFloat64Array(a){c.length=0;for(var b=0;b<a.length;b+=2)c.push(new Point(a[b],a[b+1]));};this.count=function(){return c.length},a&&Array.isArray(a)?a.forEach(b.push):a&&"[object Float64Array]"===Object.prototype.toString.call(a)&&d(a);}

  function Rectangle(a,b,c,d){this.__left=a,this.__top=b,this.__right=c,this.__bottom=d;}Rectangle.prototype.getLeft=function(){return this.__left},Rectangle.prototype.getTop=function(){return this.__top},Rectangle.prototype.getRight=function(){return this.__right},Rectangle.prototype.getBottom=function(){return this.__bottom},Rectangle.prototype.getWidth=function(){return this.__right-this.__left},Rectangle.prototype.getHeight=function(){return this.__bottom-this.__top},Rectangle.prototype.getPoints=function(){return [new Point(this.__left,this.__top),new Point(this.__right,this.__top),new Point(this.__right,this.__bottom),new Point(this.__left,this.__bottom)]},Rectangle.prototype.getLines=function(){return [new Line(new Point(this.__left,this.__top),new Point(this.__right,this.__top)),new Line(new Point(this.__right,this.__top),new Point(this.__right,this.__bottom)),new Line(new Point(this.__right,this.__bottom),new Point(this.__left,this.__bottom)),new Line(new Point(this.__left,this.__bottom),new Point(this.__left,this.__top))]},Rectangle.prototype.getUniformlyResizedCopy=function(a){return new Rectangle(this.__left-a,this.__top-a,this.__right+a,this.__bottom+a)},Rectangle.prototype.getPointsScaledToGrid=function(a){var b=new Point(this.__left+.5*(this.__right-this.__left),this.__top+.5*(this.__bottom-this.__top)),c=(this.__right-b.getX()+a)/(this.__right-b.getX()),d=(this.__bottom-b.getY()+a)/(this.__bottom-b.getY()),e=[new Point((this.__left-b.getX())*c+b.getX(),(this.__top-b.getY())*d+b.getY()),new Point((this.__right-b.getX())*c+b.getX(),(this.__top-b.getY())*d+b.getY()),new Point((this.__right-b.getX())*c+b.getX(),(this.__bottom-b.getY())*d+b.getY()),new Point((this.__left-b.getX())*c+b.getX(),(this.__bottom-b.getY())*d+b.getY())];return e},Rectangle.prototype.checkIntersect=function(a){return !(this.__bottom<a.getTop())&&!(this.__top>a.getBottom())&&!(this.__right<a.getLeft())&&!(this.__left>a.getRight())},Rectangle.prototype.checkIsPointWithin=function(a){return !!(a.getX()>=this.__left&&a.getX()<=this.__right&&a.getY()>=this.__top&&a.getY()<=this.__bottom)},Rectangle.prototype.checkIsWithin=function(a){return !!(this.__bottom<=a.getBottom()&&this.__top>=a.getTop()&&this.__right<=a.getRight()&&this.__left>=a.getLeft())};

  var AccessibleRoutingPointsFinder={find:function find(a,b,c){var d=new Map,e=[],f=new PointSet;return a.forEach(function(a){var b=a.connectorAnchors;b.forEach(function(a){{var c=new PointSet(a.routingPointsFloat64Arr).toArray();c.forEach(function(b){e.push({routingPoint:b,parentAnchorId:a.id});}),d.set(a.id,c.length);}});}),e.forEach(function(a){for(var c=!1,e=0;e<b.length;e++){var g=b[e],h=new Rectangle(g.x,g.y,g.x+g.width,g.y+g.height);if(h.checkIsPointWithin(a.routingPoint)){c=!0;var j=d.get(a.parentAnchorId)||0;d.set(a.parentAnchorId,j-1);}}c||f.push(a.routingPoint);}),{connectorAnchorToNumValidRoutingPoints:d,accessibleRoutingPoints:f}}};

  function LineSet(a){var b=this,c=[];this.push=function(a){for(var b=0;b<c.length;b++)if(a.isEqual(c[b]))return !1;return c.push(a),!0},this.toArray=function(){return c},this.count=function(){return c.length},this.toFloat64Array=function(){for(var a=new Float64Array(4*c.length),b=0;b<c.length;b++)a[0+4*b]=c[b].getStartPoint().getX(),a[1+4*b]=c[b].getStartPoint().getY(),a[2+4*b]=c[b].getEndPoint().getX(),a[3+4*b]=c[b].getEndPoint().getY();return a};var d=function fromFloat64Array(a){c.length=0;for(var b=0;b<a.length;b+=4)c.push(new Line(new Point(a[b],a[b+1]),new Point(a[b+2],a[b+3])));};a&&Array.isArray(a)?a.forEach(b.push):a&&"[object Float64Array]"===Object.prototype.toString.call(a)&&d(a);}

  var PointVisibilityMapRouteOptimizer={optimize:function optimize(a,b){for(var c=0,d=a.length-1;!(1>=d-c&&(c++,d=a.length-1,c>=a.length-2));)b(a[c],a[d])?(a.splice(c+1,d-c-1),d=a.length-1):d--;}};

  var PointInfo={point:null,visiblePoints:null};function PointVisibilityMap(){var a=this,b=new Map,c=new Map,d=new Map,e=0,f=0,g=function doesLineIntersectAnyBoundaryLines(a){var b=!0,e=!1,f=void 0;try{for(var g,h=c[Symbol.iterator]();!(b=(g=h.next()).done);b=!0){var j=_slicedToArray(g.value,2),k=j[0],l=j[1],m=d.get(k);if(!(a.getMinX()>m.outerBoundingRect.maxX)&&!(a.getMaxX()<m.outerBoundingRect.minX)&&!(a.getMinY()>m.outerBoundingRect.maxY)&&!(a.getMaxY()<m.outerBoundingRect.minY))for(var n,o=l.toArray(),p=0;p<o.length;p++)if(n=o[p].computeIntersectionType(a),n===LINE_INTERSECTION_TYPE.LINESEG)return !0}}catch(a){e=!0,f=a;}finally{try{b||null==h.return||h.return();}finally{if(e)throw f}}return !1},h=function computePointsVisibilityForPoint(a){a.visiblePoints.points.length=0;var c=!0,d=!1,e=void 0;try{for(var f,h=b[Symbol.iterator]();!(c=(f=h.next()).done);c=!0){var i=_slicedToArray(f.value,2),j=i[0],k=i[1],l=!0,m=!1,n=void 0;try{for(var o,p=k[Symbol.iterator]();!(l=(o=p.next()).done);l=!0){var q=_slicedToArray(o.value,2),r=q[0],s=q[1],t=new Line(a.point,r);0<t.getLength()&&!g(t)&&a.visiblePoints.points.push(r);}}catch(a){m=!0,n=a;}finally{try{l||null==p.return||p.return();}finally{if(m)throw n}}}}catch(a){d=!0,e=a;}finally{try{c||null==h.return||h.return();}finally{if(d)throw e}}a.visiblePoints.isValid=!0;},i=function arePointsVisibleToEachOther(a,b){for(var c=o(a),d=j(c),e=0;e<d.length;e++)if(d[e].isEqual(b))return !0;return !1},j=function getVisiblePointsRelativeTo(a){return a.visiblePoints.isValid||h(a),a.visiblePoints.points},k=function isPointInArray(a,b){for(var c=0;c<b.length;c++)if(a.isEqual(b[c]))return !0;return !1},l=function routeToEndpoint(a,b,c,d){for(var e,f=c.point,g=j(c),h=Number.MAX_SAFE_INTEGER,l=null,m=0;m<g.length;m++)if(e=g[m],!k(e,b)){var n=new Line(f,e).getLength()+a,o=new Line(e,d).getLength();n+o<h&&(h=n+o,l=e);}return h===Number.MAX_SAFE_INTEGER?null:{cost:h,point:l}},m=function getBoundaryLinesFromEntityDescriptor(a){var b=new LineSet,c=new Rectangle(a.x,a.y,a.x+a.width,a.y+a.height),d=c.getLines();d.forEach(function(a){b.push(a);});var e=a.connectorAnchors;return e.forEach(function(a){var c=new Rectangle(a.x,a.y,a.x+a.width,a.y+a.height),d=c.getLines();d.forEach(function(a){b.push(a);});}),b},n=function hasEntityMutated(a,b){return !(a.x===b.x&&a.y===b.y&&a.width===b.width&&a.height===b.height)},o=function fetchPointInfoForPoint(a){var c=!0,d=!1,e=void 0;try{for(var f,g=b[Symbol.iterator]();!(c=(f=g.next()).done);c=!0){var h=_slicedToArray(f.value,2),i=h[0],j=h[1],k=!0,l=!1,m=void 0;try{for(var n,o=j[Symbol.iterator]();!(k=(n=o.next()).done);k=!0){var q=_slicedToArray(n.value,2),r=q[0],s=q[1];if(r===a)return p(r,s)}}catch(a){l=!0,m=a;}finally{try{k||null==o.return||o.return();}finally{if(l)throw m}}}}catch(a){d=!0,e=a;}finally{try{c||null==g.return||g.return();}finally{if(d)throw e}}return null},p=function buildPointInfo(a,b){var c=Object.create(PointInfo);return c.point=a,c.visiblePoints=b,c},q=function buildEmptyRoutingPointToVisibleSetMap(a,b,c){for(var d=new Rectangle(a.x,a.y,a.x+a.width,a.y+a.height),e=AccessibleRoutingPointsFinder.find([a],b,c),f=e.accessibleRoutingPoints.toArray(),g=new Map,h=0;h<f.length;h++)g.set(f[h],{isValid:!1,points:[]});var i=d.getPointsScaledToGrid(c);return i.forEach(function(a){g.set(a,{isValid:!1,points:[]});}),g};this.updateRoutingPointsAndBoundaryLinesFromEntityDescriptors=function(a,g){e=0,f=0;for(var h,j=[],k=[],l=[],o=0;o<a.length;o++){h=a[o].id,j.push(h);var p=c.get(h),r=d.get(h);if(p&&!n(r,a[o])){f+=p.count();continue}var C=m(a[o]);c.set(h,C),f+=C.count();}for(var D=0;D<a.length;D++){var s=a[D].id,t=d.get(s);!t||n(t,a[D]);var E=q(a[D],a,g);b.set(s,E),d.set(s,a[D]),k.push(s),e+=E.size;}var u=!0,v=!1,w=void 0;try{for(var x,y=d[Symbol.iterator]();!(u=(x=y.next()).done);u=!0){var z=_slicedToArray(x.value,2),A=z[0],B=z[1];j.includes(A)||(k.push(A),l.push(A));}}catch(a){v=!0,w=a;}finally{try{u||null==y.return||y.return();}finally{if(v)throw w}}return l.forEach(function(a){d.delete(_eid),c.delete(_eid),b.delete(_eid);}),k.length},this.getCurrentNumRoutingPoints=function(){return e},this.getCurrentNumBoundaryLines=function(){return f},this.findVisiblePointInfoClosestTo=function(a){var c=null,d=Number.MAX_SAFE_INTEGER,e=!0,f=!1,h=void 0;try{for(var i,j=b[Symbol.iterator]();!(e=(i=j.next()).done);e=!0){var k=_slicedToArray(i.value,2),l=k[0],m=k[1],n=!0,o=!1,q=void 0;try{for(var r,s=m[Symbol.iterator]();!(n=(r=s.next()).done);n=!0){var t=_slicedToArray(r.value,2),u=t[0],v=t[1],w=new Line(a,u),x=w.getLength();x<d&&!g(w)&&(c=p(u,v),d=x);;}}catch(a){o=!0,q=a;}finally{try{n||null==s.return||s.return();}finally{if(o)throw q}}}}catch(a){f=!0,h=a;}finally{try{e||null==j.return||j.return();}finally{if(f)throw h}}return c},this.computeRoute=function(b,c,d){if(null===b||null===c)return new PointSet;var e=a.findVisiblePointInfoClosestTo(b);if(null===e)return new PointSet;for(var f,h=0,j=[e.point],k=e;!0;){if(f=l(h,j,k,c),null===f){var m=new Line(j[j.length-1],c);if(g(m))return new PointSet;break}if(h+=new Line(k.point,f.point).getLength(),j.push(f.point),k=o(f.point),1>new Line(k.point,c).getLength())break}return d&&PointVisibilityMapRouteOptimizer.optimize(j,i),new PointSet(j)};}

  var SvgPathBuilder={pointToLineTo:function pointToLineTo(a,b){return 0===b?"M"+a.getX()+" "+a.getY():"L"+a.getX()+" "+a.getY()},pointTripletToTesselatedCurvePoints:function pointTripletToTesselatedCurvePoints(a,b){if(3!==a.length)throw new Error("_points must be array of exactly 3 points");var c=a[1],d=new Line(a[0],a[1]),e=new Line(a[1],a[2]),f=d.createShortenedLine(0,.5*b),g=e.createShortenedLine(.5*b,0);return [f.getStartPoint(),f.getEndPoint(),g.getStartPoint(),g.getEndPoint()]},pointsToPath:function pointsToPath(a,b){b=b||0;var c=[],d=0;if(0<b){for(;3<=a.length;){var e=a.shift(),f=a.shift(),g=a.shift(),h=SvgPathBuilder.pointTripletToTesselatedCurvePoints([e,f,g],b);a.unshift(h[3]),a.unshift(h[2]);for(var k=0;k<h.length-2;k++)c.push(SvgPathBuilder.pointToLineTo(h[k],d++));}for(;0<a.length;){var j=a.shift();c.push(SvgPathBuilder.pointToLineTo(j,d++));}}else for(var l,m=0;m<a.length;m++)l=a[m],c.push(SvgPathBuilder.pointToLineTo(l,m));return c.join(" ")}};

  var ConnectorRoutingAlgorithm=Object.freeze({STRAIGHT_LINE:0,STRAIGHT_LINE_BETWEEN_ANCHORS:1,STRAIGHT_LINE_BETWEEN_ANCHORS_AVOID_SELF_INTERSECTION:2,ASTAR:3,ASTAR_WITH_ROUTE_OPTIMIZATION:4});

  var workerData={pointVisibilityMap:new PointVisibilityMap,requestQueue:[]},computeConnectorPath=function computeConnectorPath(a,b,c){var d=Point.fromArray(a.anchor_start_centroid_arr),e=Point.fromArray(a.anchor_end_centroid_arr),f=a.marker_start_size,g=a.marker_end_size,h=a.curvature_px,i=a.routing_algorithm,j=b.findDistanceToPointClosestTo(d),k=b.findPointsCloseTo(d,j).findPointClosestTo(e),l=b.findPointsCloseTo(e,j).findPointClosestTo(d),m=new PointSet;if(i==ConnectorRoutingAlgorithm.STRAIGHT_LINE_BETWEEN_ANCHORS)m=new PointSet([k,l]);else if(i===ConnectorRoutingAlgorithm.ASTAR||i===ConnectorRoutingAlgorithm.ASTAR_WITH_ROUTE_OPTIMIZATION){var r=!(i!==ConnectorRoutingAlgorithm.ASTAR_WITH_ROUTE_OPTIMIZATION);m=c.computeRoute(k,l,r);}else throw "Invalid routing algorithm";var n=m.toArray(),o=d,p=e;if(0<f&&1<=n.length){var s=new Line(n[0],d).createShortenedLine(0,f);o=s.getEndPoint();}if(0<g&&1<=n.length){var t=new Line(n[n.length-1],e).createShortenedLine(0,g);p=t.getEndPoint();}var q=[o].concat(_toConsumableArray(n),[p]);return {svgPath:SvgPathBuilder.pointsToPath(q,h),pointsInPath:q}},getConnectorRoutingPointsAroundAnchor=function getConnectorRoutingPointsAroundAnchor(a,b){var c=AccessibleRoutingPointsFinder.find(a,a,b);return c.accessibleRoutingPoints},processRequestQueue=function processRequestQueue(){if(0!==workerData.requestQueue.length){var a=workerData.requestQueue.pop();workerData.requestQueue.length=0;var b={overallTime:null},c=new Date,d=a.gridSize,e=a.connectorDescriptors,f=a.entityDescriptors,g=new Date,h=getConnectorRoutingPointsAroundAnchor(f,d);b.msgDecodeTime=new Date-g;var i=new Date;workerData.pointVisibilityMap.updateRoutingPointsAndBoundaryLinesFromEntityDescriptors(f,d),b.pointVisibilityMapCreationTime=new Date-i;var j=new Date;e.forEach(function(a){var b=computeConnectorPath(a,h,workerData.pointVisibilityMap),c=new PointSet(b.pointsInPath);a.svgPath=b.svgPath,a.pointsInPath=c.toFloat64Array().buffer;}),b.allPathsComputationTime=new Date-j,b.numRoutingPoints=workerData.pointVisibilityMap.getCurrentNumRoutingPoints(),b.numBoundaryLines=workerData.pointVisibilityMap.getCurrentNumBoundaryLines(),b.overallTime=new Date-c,postMessage({connectorDescriptors:e,metrics:b});}};setInterval(processRequestQueue,6),onmessage=function onmessage(a){workerData.requestQueue.push(a.data);};

}());
`;

    function Sheet(a,b){var c=this,d=b.document.createElementNS("http://www.w3.org/2000/svg","svg");d.style.width="100%",d.style.height="100%";var e=a.appendChild(d),f=null,g=[],h=null,i=null,j="transform 0.55s ease-in-out, transform-origin 0.55s ease-in-out",k=0,l=0,m=0,n=0,o=0,p=0,q=1,r=1,s=[],t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],u=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],v=6.94,x=[],y=[],z=null,A=null,B="default",C=0,D=0,E=0,F=0,G=null,H=new DebugMetricsPanel(b),I={connectorRoutingWorker:{executionTime:null,numRoutingPoints:null,numBoundaryLines:null,msgDecodeTime:null,pointVisibilityMapCreationTime:null,allPathsComputationTime:null},refreshAllConnectorsInternal:{executionTime:null},connectorsRefreshTime:null},J=750,K=null,L=0,M=0,N=0,O=0,P=!1,Q=[],R=!1,S=null,T=null,U=null,V=null,W=new Map,X=null,Y=null,Z=URL.createObjectURL(new Blob([ConnectorRoutingWorkerJsString])),$=new Worker(Z);$.onmessage=function(a){var b=new Date,c=a.data.connectorDescriptors,d=function getConnectorDescriptorById(a){for(var b=0;b<c.length;b++)if(c[b].id===a)return c[b];return null};y.forEach(function(a){var b=d(a.getId());if(b){var c=new PointSet(new Float64Array(b.pointsInPath));a.refresh(b.svgPath,c.toArray()),sa(SheetEvent.CONNECTOR_UPDATED,{connector:a});}}),I.connectorsRefreshTime=new Date-b,I.connectorRoutingWorker.executionTime=a.data.metrics.overallTime,I.connectorRoutingWorker.numBoundaryLines=a.data.metrics.numBoundaryLines,I.connectorRoutingWorker.numRoutingPoints=a.data.metrics.numRoutingPoints,I.connectorRoutingWorker.msgDecodeTime=a.data.metrics.msgDecodeTime,I.connectorRoutingWorker.pointVisibilityMapCreationTime=a.data.metrics.pointVisibilityMapCreationTime,I.connectorRoutingWorker.allPathsComputationTime=a.data.metrics.allPathsComputationTime,H.refresh(I);},this.setGrid=function(c){i=c,a.style.backgroundImage="url('data:image/svg+xml;base64,"+b.btoa(i.getSvgImageTile())+"')",a.style.backgroundRepeat="repeat",a.style.backgroundColor="#fff";},this.getGrid=function(){return i},this.getGridSize=function(){return i.getSize()};var aa=function lockDomMetrics(){S=a.offsetLeft,T=a.offsetTop,U=b.pageXOffset,V=b.pageYOffset,R=!0;},ba=function unlockDomMetrics(){R=!1;};this.hasDomMetricsLock=function(){return R};var fa=function refreshAllConnectorsInternal(){aa();var a=new Date,b=[];y.forEach(function(a){b.push(a.getDescriptor());});var d=[];x.forEach(function(a){d.push(a.getDescriptor(c.getGridSize()));}),$.postMessage({gridSize:c.getGridSize(),connectorDescriptors:b,entityDescriptors:d},[]),I.refreshAllConnectorsInternal.executionTime=new Date-a,ba();};this.setConnectorRefreshBufferTime=function(a){v=a;},this.refreshAllConnectors=function(){if(null!==X){var a=new Date-X;if(a<v)return}X=new Date,Y=setTimeout(function(){Y=null,X=null,fa();},v);};var ga=function makeNewConnector(a,b,c){return new Connector(a,b,c)};this.setConnectorFactory=function(a){ga=a;},this.getTransitionCss=function(){return j},this.setTransitionCss=function(b){j=b,a.style.transition=j;},this.getTransformOriginX=function(){return k},this.getTransformOriginY=function(){return l},this.getScaleFactor=function(){return q},this.getTranslateX=function(){return o},this.getTranslateY=function(){return p},this.setTransformOrigin=function(b,c){k=b,l=c,a.style.transformOrigin=`${k}px ${l}px`;},this.scale=function(a,b){if(b=b||!1,b){var d=c.getGridSize()*a,e=Math.round(d);a=e/c.getGridSize();}q=a,r=1/q;var f=[q,0,0,0,0,q,0,0,0,0,q,1,0,0,0,1];return u=MatrixMath.mat4Multiply(u,f),s.push([r,0,0,0,0,r,0,0,0,0,r,1,0,0,0,1]),c},this.translate=function(a,b){o=a,p=b;var d=[1,0,0,0,0,1,0,0,0,0,1,0,o,p,0,1];return u=MatrixMath.mat4Multiply(u,d),s.push([1,0,0,-o,0,1,0,-p,0,0,1,0,0,0,0,1]),c},this.applyTransform=function(){a.style.transform=c.getTransformMatrixCss(),t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];for(var b=0;b<s.length;b++)t=MatrixMath.mat4Multiply(t,s[b]);},this.getTransformMatrix=function(){return u},this.getTransformMatrixCss=function(){var a=u.join(",");return `matrix3d(${a})`},this.transformDomRectToPageSpaceRect=function(a){var b=c.getPageOffset(),d=c.getSheetOffset(),e=a.left-d.getX()+b.getX(),f=a.top-d.getY()+b.getY(),g=a.right-d.getX()+b.getX(),h=a.bottom-d.getY()+b.getY(),i=MatrixMath.vecMat4Multiply([e,f,0,1],t),j=MatrixMath.vecMat4Multiply([g,h,0,1],t);return new Rectangle(i[0]+d.getX(),i[1]+d.getY(),j[0]+d.getX(),j[1]+d.getY())},this.resetTransform=function(){q=1,r=1,o=0,p=0,u=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],s.length=0,a.style.transform="none";},this.getPageOffset=function(){return c.hasDomMetricsLock()?new Point(U,V):new Point(b.pageXOffset,b.pageYOffset)},this.snapToGrid=function(a){var b=Math.round(a/c.getGridSize())*c.getGridSize();return Math.max(0,b-1)},this.getSheetOffset=function(){return c.hasDomMetricsLock()?new Point(S,T):new Point(a.offsetLeft,a.offsetTop)},this.getOffsetLeft=function(){return a.offsetLeft},this.getOffsetTop=function(){return a.offsetTop},this.getWidth=function(){return a.offsetWidth},this.getHeight=function(){return a.offsetHeight},this.calcBoundingRectForEntities=function(a){var b=null,c=null,d=null,e=null;return a.forEach(function(a,f,g){var h=a.getBoundingRectange(),i=h.getLeft(),j=h.getTop(),k=h.getRight(),l=h.getBottom();(null===c||i<c)&&(c=i),(null===b||j<b)&&(b=j),(null===d||l>d)&&(d=l),(null===e||k>e)&&(e=k);}),(null===b||null===c||null===d||null===e)&&(b=0,c=0,d=0,e=0),new Rectangle(c,b,e,d)},this.calcBoundingBox=function(){return 0===x.length?new Rectangle(0,0,c.getWidth(),c.getHeight()):c.calcBoundingRectForEntities(x)},this.getEntitiesAroundPoint=function(a,b,c){c=c||1;var d=[],e=new Rectangle(a-c,b-c,a+c,b+c);return x.forEach(function(a){e.checkIntersect(a.getBoundingRectange())&&d.push(a);}),d},this.getEntitiesWithinRect=function(a){var b=[];return x.forEach(function(c){c.getBoundingRectange().checkIsWithin(a)&&b.push(c);}),b},this.getAllEntities=function(){return x},this.publishSiblingObjectChange=function(a,b){x.forEach(function(c){c.handleSiblingObjectChange(a,b);});},this.getEntityById=function(a){var b=null;return x.forEach(function(c,d,e){null===b&&c.getId()===a&&(b=c);}),b},this.addEntity=function(a){a.on(EntityEvent.RESIZE_START,ma),a.on(EntityEvent.RESIZE,function(a){sa(SheetEvent.ENTITY_RESIZED,{object:a.obj}),c.refreshAllConnectors();}),a.on(EntityEvent.TRANSLATE_START,ja),a.on(EntityEvent.TRANSLATE,function(a){sa(SheetEvent.ENTITY_TRANSLATED,{object:a.obj}),c.refreshAllConnectors();}),x.push(a),c.refreshAllConnectors(),sa(SheetEvent.ENTITY_ADDED,{object:a});},this.removeEntity=function(a){for(var b=0;b<x.length;b++)if(x[b].getId()===a)return x.splice(b,1),c.refreshAllConnectors(),sa(SheetEvent.ENTITY_REMOVED,{object:x[b]}),!0;return !1},this.getConnector=function(a){for(var b=0;b<y.length;b++)if(y[b].getId()===a)return y[b];return null},this.getAllConnectors=function(){return y},this.getConnectorsBetweenEntities=function(a,b){var c=[];return y.forEach(function(d){var e=d.getAnchorStart(),f=d.getAnchorEnd();a.hasConnectorAnchor(e)&&b.hasConnectorAnchor(f)&&c.push(d),a.hasConnectorAnchor(f)&&b.hasConnectorAnchor(e)&&c.push(d);}),c},this.getConnectorsInEntitySet=function(a){for(var b=[],d=0;d<a.length;d++)for(var e,f=d+1;f<a.length;f++)e=c.getConnectorsBetweenEntities(a[d],a[f]),b.push.apply(b,_toConsumableArray(e));return b},this.getEntitiesConnectedViaConnector=function(a){var b=[],d=c.getAllEntities();return y.forEach(function(c){if(c.getId()===a){var e=c.getAnchorStart(),f=c.getAnchorEnd();d.forEach(function(a){(a.hasConnectorAnchor(e)||a.hasConnectorAnchor(f))&&b.push(a);});}}),b},this.getConnectorsConnectedToEntity=function(a){var b=[];return y.forEach(function(c){var d=c.getAnchorStart(),e=c.getAnchorEnd();(a.hasConnectorAnchor(d)||a.hasConnectorAnchor(e))&&b.push(c);}),b},this.getEntityWithConnectorAnchor=function(a){for(var b,d=c.getAllEntities(),e=0;e<d.length;e++){b=d[e].getConnectorAnchors();for(var f=0;f<b.length;f++)if(b[f].getId()===a)return d[e]}return null},this.removeAllConnectors=function(){y.forEach(function(a){a.removePathElement();}),y.splice(0,y.length);},this.removeConnector=function(a){for(var b=0;b<y.length;b++)if(y[b]===a)return a.removePathElement(),y.splice(b,1),!0;return !1},this.makeNewConnectorFromAnchors=function(a,b){var d=ga(a,b,e),f=c.getConnector(d.getId());return null===f?(y.push(d),d.appendPathToContainerDomElement(),c.refreshAllConnectors(),d):f},this.findBestConnectorAnchorsToConnectEntities=function(a,b,d){var e=function searchFunc(d){var e=AccessibleRoutingPointsFinder.find([a.getDescriptor(c.getGridSize()),b.getDescriptor(c.getGridSize())],x,c.getGridSize()),f=ClosestPairFinder.findClosestPairBetweenObjects(d.objectA,d.objectB,e.connectorAnchorToNumValidRoutingPoints);d.cb(f);};setTimeout(function(){e({objectA:a,objectB:b,entityA:a,entityB:b,cb:d});},v);},this.addConnectionAnchorToSelectionStack=function(a){Q.push(a),2===Q.length&&(c.makeNewConnectorFromAnchors(Q[0],Q[1]),Q.length=0);};var ha=function dblClickTapHandler(a,b){var d=c.getEntitiesAroundPoint(a,b),e={targetPoint:new Point(a,b),objectsAroundPoint:d,entitiesAroundPoint:d};sa(SheetEvent.DBLCLICK,e);};this.initDebugMetricsPanel=function(){H.init(),H.show();},this.initInteractionHandlers=function(b,d){G=new DoubleTapDetector(b,d),a.addEventListener("dblclick",function(a){var b=MatrixMath.vecMat4Multiply([a.pageX-c.getOffsetLeft(),a.pageY-c.getOffsetTop(),0,1],t);ha(b[0],b[1]);}),a.addEventListener("click",function(b){var d=!1;b.target!==a&&(d=!0);var e=MatrixMath.vecMat4Multiply([b.pageX-c.getOffsetLeft(),b.pageY-c.getOffsetTop(),0,1],t),f={targetPoint:new Point(e[0],e[1]),entityClicked:d,canvasObjectClicked:d};sa(SheetEvent.CLICK,f);}),a.addEventListener("touchend",function(a){var b=G.processTap(a,new Point(c.getOffsetLeft(),c.getOffsetTop()),t);b.doubleTapDetected&&ha(b.touchX,b.touchY);});},this.attachGroupTransformationContainer=function(b){a.appendChild(b.getContainerDomElement()),g.push(b),b.on(GroupTransformationContainerEvent.TRANSLATE_START,function(a){h=a.container;});},this.detachGroupTransformationContainer=function(b){for(var c=0;c<g.length;c++)if(g[c]===b)return a.removeChild(b.getContainerDomElement()),g.splice(c,1),!0;return !1};var ia=function handleGroupTransformationContainerMove(a,b){var c=h;c.translateByOffset(a,b);},ja=function handleMoveStart(a){z=a.obj.getId(),C=a.x,D=a.y,E=a.x,F=a.y;},ka=function handleMove(a,b){var d=c.getEntityById(z),e=d.getTranslateHandleOffset(),f=c.snapToGrid(a+e.getX()),g=c.snapToGrid(b+e.getY());C=f,D=g,d.translate(f,g);},la=function handleMoveEnd(a,b){var d=c.getEntityById(z),e=d.getTranslateHandleOffset(),f=c.snapToGrid(a+e.getX()),g=c.snapToGrid(b+e.getY());d.translate(f,g);},ma=function handleResizeStart(b){A=b.obj.getId(),B=b.resizeCursor,a.style.cursor=B;},na=function handleResize(a,b){var d=c.getEntityById(A),e=c.snapToGrid(a),f=c.snapToGrid(b),g=d.getY(),h=d.getX(),i=e-h+1,j=f-g+1;d.resize(i,j);},oa=function handleResizeEnd(){A=null,a.style.cursor="";},pa=function handleMultiEntitySelectionStart(a,b,c){if(P)return !1;if(c!==d)return !1;if(null!==z)return !1;if(null!==A)return !1;var e=MatrixMath.vecMat4Multiply([a,b,0,1],t);return L=e[0],M=e[1],N=e[0],O=e[1],P=!0,f.style.left=`${L}px`,f.style.top=`${M}px`,f.style.width=`0px`,f.style.height=`0px`,f.style.display="block",sa(SheetEvent.MULTIPLE_ENTITY_SELECTION_STARTED,{x:e[0],y:e[1]}),!0},qa=function handleMultiEntitySelectionEnd(){P=!1;var a=new Rectangle(Math.min(L,N),Math.min(M,O),Math.max(L,N),Math.max(M,O)),b=c.getEntitiesWithinRect(a),d=c.calcBoundingRectForEntities(b);f.style.left=`${d.getLeft()}px`,f.style.top=`${d.getTop()}px`,f.style.width=`${d.getWidth()}px`,f.style.height=`${d.getHeight()}px`,f.style.display="none",sa(SheetEvent.MULTIPLE_ENTITIES_SELECTED,{selectedObjects:b,selectedEntities:b,boundingRect:d});},ra=function updateSelectionBoxEndPoint(a,b){var c=MatrixMath.vecMat4Multiply([a,b,0,1],t);N=c[0],O=c[1];var d=N-L,e=O-M;0<=d?f.style.width=`${d}px`:(f.style.left=`${c[0]}px`,f.style.width=`${Math.abs(d)}px`),0<=e?f.style.height=`${e}px`:(f.style.top=`${c[1]}px`,f.style.height=`${Math.abs(e)}px`);};this.initMultiEntitySelectionHandler=function(d){var e=b.document.createElement("div");e.classList.add("ia-selection-box"),e.style.display="none",e.style.position="absolute",e.style.left="0px",e.style.top="0px","undefined"==typeof d||0===d.length?(e.style.border="1px solid rgb(158, 158, 158)",e.style.background="rgba(153, 153, 153, 0.5)"):d.forEach(function(a){e.classList.add(a);}),f=a.appendChild(e);var g=function handleTouchSelectionStart(a){var b=pa(a.touches[0].pageX-c.getOffsetLeft(),a.touches[0].pageY-c.getOffsetTop(),a.target);};a.addEventListener("mousedown",function(a){if(1===a.which){var b=pa(a.pageX-c.getOffsetLeft(),a.pageY-c.getOffsetTop(),a.target);b&&a.preventDefault();}}),a.addEventListener("touchstart",function(a){K=setInterval(function(){g(a);},J);}),a.addEventListener("touchend",function(a){clearInterval(K);}),a.addEventListener("touchmove",function(a){clearInterval(K);});},this.initTransformationHandlers=function(){a.addEventListener("touchstart",function(a){m=a.touches[0].pageX-c.getOffsetLeft(),n=a.touches[0].pageY-c.getOffsetTop();}),a.addEventListener("touchmove",function(a){if(null!==z){var f=MatrixMath.vecMat4Multiply([a.touches[0].pageX-c.getOffsetLeft(),a.touches[0].pageY-c.getOffsetTop(),0,1],t);ka(f[0],f[1]),a.preventDefault();}if(null!==A){var g=MatrixMath.vecMat4Multiply([a.touches[0].pageX-c.getOffsetLeft(),a.touches[0].pageY-c.getOffsetTop(),0,1],t);na(g[0],g[1]),a.preventDefault();}if(null!==h){var b=a.touches[0].pageX-c.getOffsetLeft()-m,d=a.touches[0].pageY-c.getOffsetTop()-n,e=MatrixMath.vecMat4Multiply([b,d,0,1],t);ia(e[0],e[1]),a.preventDefault();}P&&(ra(a.touches[0].pageX-c.getOffsetLeft(),a.touches[0].pageY-c.getOffsetTop()),a.preventDefault()),m=a.touches[0].pageX-c.getOffsetLeft(),n=a.touches[0].pageY-c.getOffsetTop();}),a.addEventListener("mousemove",function(a){if(null!==z){var b=MatrixMath.vecMat4Multiply([a.pageX-c.getOffsetLeft(),a.pageY-c.getOffsetTop(),0,1],t);ka(b[0],b[1]);}if(null!==A){var d=MatrixMath.vecMat4Multiply([a.pageX-c.getOffsetLeft(),a.pageY-c.getOffsetTop(),0,1],t);na(d[0],d[1]);}if(null!==h){var e=MatrixMath.vecMat4Multiply([a.movementX,a.movementY,0,1],t);ia(e[0],e[1]);}P&&ra(a.pageX-c.getOffsetLeft(),a.pageY-c.getOffsetTop());}),a.addEventListener("touchend",function(a){null!==z&&(z=null),null!==A&&oa(),null!==h&&(h.endTranslate(),h=null),P&&qa();}),a.addEventListener("mouseup",function(a){if(1===a.which){if(null!==z){var b=MatrixMath.vecMat4Multiply([a.pageX-c.getOffsetLeft(),a.pageY-c.getOffsetTop(),0,1],t);la(b[0],b[1]);}null!==A&&oa(),null!==h&&(h.endTranslate(),h=null),P&&qa(),z=null,A=null;}}),a.addEventListener("mousedown",function(a){(null!==h||null!==z||null!==A)&&(a.preventDefault(),a.stopPropagation());});};var sa=function emitEvent(a,b){for(var c,d=W.get(a)||[],e=0;e<d.length;e++)c=d[e],c(b);};this.off=function(a,b){for(var c=W.get(a)||[],d=0;d<c.length;d++)if(c[d]===b){c.splice(d,1);break}W.set(a,c);},this.on=function(a,b){var c=W.get(a)||[];c.push(b),W.set(a,c);},c.setGrid(new Grid(12,"#424242",GRID_STYLE.DOT)),c.resetTransform(),c.setTransformOrigin(0,0),c.setTransitionCss(j);}

    function Entity(a,b,c,d,e,f,g,h,i){var j=this,k=1,l=[],m=1e3,n=null,p=new Map,q=null,r=null,s=null,t=null;this.addNonInteractableConnectorAnchor=function(b){var c=new ConnectorAnchor(a+`-${m}`,b,f);return l.push(c),m++,c},this.addInteractableConnectorAnchor=function(b){var c=new ConnectorAnchor(a+`-${m}`,b,f);return b.addEventListener("click",function(a){f.addConnectionAnchorToSelectionStack(c);}),l.push(c),m++,c},this.getConnectorAnchorRoutingPoints=function(a){var b=[];return l.forEach(function(c){var d=c.getRoutingPoints(a);d.forEach(function(a){b.push(a);});}),b},this.getConnectorAnchors=function(){return l},this.hasConnectorAnchor=function(a){for(var b=j.getConnectorAnchors(),c=0;c<b.length;c++)if(b[c]===a)return !0;return !1},this.getTranslateHandleOffset=function(){return n?new Point(-(n.offsetLeft+.5*n.offsetWidth),-(n.offsetTop+.5*n.offsetHeight)):null},this.getId=function(){return a},this.getX=function(){return q},this.getY=function(){return r},this.getPositionOnPage=function(){var a=g.ownerDocument.defaultView,b=g.getBoundingClientRect();return new Point(b.left+a.scrollX,b.top+a.scrollY)},this.translate=function(a,b){if(a!==q||b!==r){q=a,r=b,g.style.left=q+"px",g.style.top=r+"px";var c=p.get(EntityEvent.TRANSLATE)||[];c.forEach(function(c){c({obj:j,x:a,y:b});});}},this.getWidth=function(){return s},this.getHeight=function(){return t},this.resize=function(a,b,c){s=a,t=b,c?c(g):(g.style.width=s+"px",g.style.height=t+"px");var d=p.get(EntityEvent.RESIZE)||[];d.forEach(function(c){c({obj:j,width:a,height:b});});},this.getDomElement=function(){return g},this.handleSiblingObjectChange=function(a,b){},this.getBoundingRectange=function(){var a=q,b=r,c=a+s,d=b+t;return new Rectangle(a,b,c,d)},this.getBoundingRectangeInPageSpace=function(){var a=j.getPositionOnPage(),b=a.getX(),c=a.getY(),d=b+s,e=c+t;return new Rectangle(b,c,d,e)},this.computePageToEntitySpaceTransformedRectangle=function(a){var b=j.getBoundingRectangeInPageSpace(),c=new GraphPaper.Rectangle(a.getLeft()-b.getLeft(),a.getTop()-b.getTop(),a.getRight()-b.getRight(),a.getBottom()-b.getBottom());return c},this.getBoundingPoints=function(){var a=new Point(j.getX(),j.getY()),b=new Point(j.getX()+j.getWidth(),j.getY()),c=new Point(j.getX(),j.getY()+j.getWidth()),d=new Point(j.getX()+j.getWidth(),j.getY()+j.getWidth());return [a,b,c,d]},this.getDescriptor=function(a){for(var b=j.getX(),c=j.getY(),d=j.getX()+j.getWidth(),e=j.getY()+j.getHeight(),f=[],g=0;g<l.length;g++){var h=l[g].getBoundingRectange(),k=new PointSet(j.getConnectorAnchorRoutingPoints(a));f.push({id:l[g].getId(),x:h.getLeft(),y:h.getTop(),width:h.getWidth(),height:h.getHeight(),routingPointsFloat64Arr:k.toFloat64Array()}),h.getLeft()<b&&(b=h.getLeft()),h.getTop()<c&&(c=h.getTop()),h.getLeft()+h.getWidth()>d&&(d=h.getLeft()+h.getWidth()),h.getTop()+h.getHeight()>e&&(e=h.getTop()+h.getHeight());}return {id:j.getId(),x:j.getX(),y:j.getY(),width:j.getWidth(),height:j.getHeight(),connectorAnchors:f,outerBoundingRect:{minX:b,minY:c,maxX:d,maxY:e}}},this.on=function(a,b){var c=p.get(a)||[];c.push(b),p.set(a,c);},this.off=function(a,b){for(var c=p.get(a)||[],d=0;d<c.length;d++)if(c[d]===b){c.splice(d,1);break}p.set(a,c);},this.suspendTranslateInteractions=function(){w();},this.resumeTranslateInteractions=function(){z();};var u=function translateTouchStartHandler(a){n=a.target;var b=p.get(EntityEvent.TRANSLATE_START)||[];b.forEach(function(b){b({obj:j,x:a.touches[0].pageX,y:a.touches[0].pageY,isTouch:!0});});},v=function translateMouseDownHandler(a){n=a.target;var b=p.get(EntityEvent.TRANSLATE_START)||[];b.forEach(function(b){b({obj:j,x:a.pageX,y:a.pageY,isTouch:!1});});},w=function unbindTranslateHandleElements(){h.forEach(function(a){a.removeEventListener("touchstart",u),a.removeEventListener("mousedown",v);});},z=function bindTranslateHandleElements(){h.forEach(function(a){a.addEventListener("touchstart",u),a.addEventListener("mousedown",v);});},A=function resizeMouseDownHandler(a,b,c){if(a.which===k){var d=p.get(EntityEvent.RESIZE_START)||[];d.forEach(function(b){b({obj:j,x:a.pageX,y:a.pageY,resizeCursor:c,isTouch:!1});});}},B=function resizeTouchStartHandler(a,b,c){var d=p.get(EntityEvent.RESIZE_START)||[];d.forEach(function(b){b({obj:j,x:a.touches[0].pageX,y:a.touches[0].pageY,resizeCursor:c,isTouch:!0});});},C=function bindResizeHandleElements(){i.forEach(function(a){var b=window.getComputedStyle(a).cursor;a.addEventListener("touchstart",function(c){B(c,a,b);}),a.addEventListener("mousedown",function(c){A(c,a,b);});});};z(),C(),j.translate(b,c),j.resize(d,e);}

    function GroupTransformationContainer(a,b,c,d){var f=this,g=new Map,h=function calculateBoundingRect(){var c=a.calcBoundingRectForEntities(b);return d&&(c=c.getUniformlyResizedCopy(d)),c},j=h(),k=0,l=0,m=j.getLeft(),n=j.getTop(),o=[];b.forEach(function(a){var b={x:a.getX()-m,y:a.getY()-n};o.push(b);});var p=window.document.createElement("div");p.classList.add("ia-group-transformation-container"),p.style.display="none",p.style.position="absolute",p.style.left=`${m}px`,p.style.top=`${n}px`,p.style.width=`${j.getWidth()}px`,p.style.height=`${j.getHeight()}px`,0<b.length&&(p.style.display="block"),"undefined"==typeof c||0===c.length?(p.style.border="1px solid rgb(158, 158, 158)",p.style.backgroundColor="rgba(153, 153, 153, 0.5)"):c.forEach(function(a){p.classList.add(a);}),this.getContainerDomElement=function(){return p},this.getEntities=function(){return b},this.translateByOffset=function(c,d){k+=c,l+=d,m=a.snapToGrid(j.getLeft()+k),n=a.snapToGrid(j.getTop()+l),p.style.left=`${m}px`,p.style.top=`${n}px`;for(var g=0;g<b.length;g++){var e=b[g],f=o[g];e.translate(a.snapToGrid(m+f.x),a.snapToGrid(n+f.y));}},this.endTranslate=function(){k=0,l=0,j=h();},this.initTranslateInteractionHandler=function(){p.addEventListener("touchstart",q),p.addEventListener("mousedown",r);},this.on=function(a,b){var c=g.get(a)||[];c.push(b),g.set(a,c);},this.off=function(a,b){for(var c=g.get(a)||[],d=0;d<c.length;d++)if(c[d]===b){c.splice(d,1);break}g.set(a,c);};var q=function translateTouchStartHandler(a){var b=g.get(GroupTransformationContainerEvent.TRANSLATE_START)||[];b.forEach(function(b){b({container:f,x:a.touches[0].pageX,y:a.touches[0].pageY,isTouch:!0});});},r=function translateMouseDownHandler(a){var b=g.get(GroupTransformationContainerEvent.TRANSLATE_START)||[];b.forEach(function(b){b({container:f,x:a.pageX,y:a.pageY,isTouch:!1});});};}

    function Cluster(a){var b=this,c=[];this.getId=function(){return a},this.getEntityIndex=function(a){return b.getEntityIndexById(a.getId())},this.getEntityIndexById=function(a){for(var b=0;b<c.length;b++)if(c[b].getId()===a)return b;return null},this.addEntity=function(a){return !(null!==b.getEntityIndex(a))&&(c.push(a),!0)},this.getEntities=function(){return c},this.getEntityIds=function(){var a=[];return c.forEach(function(b){a.push(b.getId());}),a},this.removeEntityById=function(a){var d=b.getEntityIndexById(a);return null!==d&&(c.splice(d,1),!0)},this.removeAllEntities=function(){c.length=0;};}

    function BoxClusterDetector(a){var b=this,c=function getEntityIndexFromArray(a,b){for(var c=0;c<b.length;c++)if(b[c].getId()===a.getId())return c;return -1},d=function removeEntitiesFromArray(a,b){for(var d,e=0;e<a.length;e++)d=c(a[e],b),-1!==d&&b.splice(d,1);return b},e=function getClusterWithMostEntitiesFromClusterMap(a){var b=0,c=null;return a.forEach(function(a,d,e){a>b&&(b=a,c=d);}),c};this.areEntitiesClose=function(b,c){var d=new Rectangle(b.getX()-a,b.getY()-a,b.getX()+b.getWidth()+a,b.getY()+b.getHeight()+a),e=new Rectangle(c.getX()-a,c.getY()-a,c.getX()+c.getWidth()+a,c.getY()+c.getHeight()+a);return d.checkIntersect(e)},this.getAllEntitiesCloseTo=function(a,c){for(var d=[],e=0;e<c.length;e++)a.getId()!==c[e].getId()&&b.areEntitiesClose(a,c[e])&&d.push(c[e]);return d},this.getClusterEntitiesFromSeed=function(a,c,e){var f=b.getAllEntitiesCloseTo(a,c);return 0===f.length?[]:void(d(f.concat([a]),c),f.forEach(function(a){e.push(a),b.getClusterEntitiesFromSeed(a,c,e);}))},this.findIntersectingClustersForEntities=function(a,b){var c=new Map;return b.forEach(function(b){for(var d=b.getEntities(),e=0;e<d.length;e++)for(var f=0;f<a.length;f++)if(d[e].getId()===a[f].getId())if(c.has(b)){var g=c.get(b);c.set(b,g+1);}else c.set(b,1);}),c},this.removeEntityFromClusters=function(a,b){b.forEach(function(b){b.removeEntityById(a.getId());});},this.computeClusters=function(a,c,f){for(var g=c.map(function(a){return a}),h=a.map(function(a){return a});0<h.length;){var i=h.pop(),j=[i];if(b.getClusterEntitiesFromSeed(i,h,j),1<j.length){var l=b.findIntersectingClustersForEntities(j,g);0===l.size?function(){var a=new Cluster(f());j.forEach(function(b){a.addEntity(b);}),g.push(a);}():function(){var a=e(l);a.removeAllEntities(),j.forEach(function(c){b.removeEntityFromClusters(c,g),a.addEntity(c);});}(),d(j,h);}else b.removeEntityFromClusters(i,g);}var k=g.filter(function(a){return !!(2<=a.getEntities().length)});return k};}

    exports.BoxClusterDetector = BoxClusterDetector;
    exports.Cluster = Cluster;
    exports.Connector = Connector;
    exports.ConnectorAnchor = ConnectorAnchor;
    exports.ConnectorEvent = ConnectorEvent;
    exports.ConnectorRoutingAlgorithm = ConnectorRoutingAlgorithm;
    exports.Dimensions = Dimensions;
    exports.Entity = Entity;
    exports.EntityEvent = EntityEvent;
    exports.GRID_STYLE = GRID_STYLE;
    exports.Grid = Grid;
    exports.GroupTransformationContainer = GroupTransformationContainer;
    exports.GroupTransformationContainerEvent = GroupTransformationContainerEvent;
    exports.LINE_INTERSECTION_TYPE = LINE_INTERSECTION_TYPE;
    exports.Line = Line;
    exports.LineIntersection = LineIntersection;
    exports.MatrixMath = MatrixMath;
    exports.Point = Point;
    exports.PointVisibilityMap = PointVisibilityMap;
    exports.Rectangle = Rectangle;
    exports.Sheet = Sheet;
    exports.SheetEvent = SheetEvent;
    exports.SvgPathBuilder = SvgPathBuilder;

    return exports;

}({}));
//# sourceMappingURL=graphpaper.min.js.map
