var GraphPaper = (function (exports) {
    'use strict';

    var MatrixMath={mat4Multiply:function mat4Multiply(a,b){for(var c=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],d=0;4>d;d++)for(var e,f=0;4>f;f++){e=0;for(var g=0;4>g;g++)e+=a[g+4*d]*b[f+4*g];c[f+4*d]=e;}return c},vecMat4Multiply:function vecMat4Multiply(a,b){for(var c=[0,0,0,0],d=0;4>d;d++)c[d]=a[0]*b[4*d+0]+a[1]*b[4*d+1]+a[2]*b[4*d+2]+a[3]*b[4*d+3];return c}};

    function Point(a,b){this.__x=a,this.__y=b;}Point.prototype.getX=function(){return this.__x},Point.prototype.getY=function(){return this.__y},Point.prototype.isEqual=function(a){return !(this.__x!==a.getX()||this.__y!==a.getY())},Point.prototype.getCartesianPoint=function(a,b){return new Point(this.__x-.5*a,-this.__y+.5*b)},Point.prototype.toString=function(){return this.__x+" "+this.__y},Point.prototype.toArray=function(){return [this.__x,this.__y]},Point.fromArray=function(a){return new Point(a[0],a[1])};

    var LINE_INTERSECTION_TYPE=Object.freeze({PARALLEL:"parallel",COINCIDENT:"coincident",LINE:"line",LINESEG:"lineseg"});function LineIntersection(a,b){this.getType=function(){return a},this.getIntersectionPoint=function(){return b};}

    function Line(a,b){if("undefined"==typeof a||null===a)throw "Line missing _startPoint";if("undefined"==typeof b||null===b)throw "Line missing _endPoint";this.__startPoint=a,this.__endPoint=b;}Line.prototype.getStartPoint=function(){return this.__startPoint},Line.prototype.getEndPoint=function(){return this.__endPoint},Line.prototype.isEqual=function(a){return !!(this.getStartPoint().isEqual(a.getStartPoint())&&this.getEndPoint().isEqual(a.getEndPoint()))},Line.prototype.getLength=function(){return Math.sqrt(Math.pow(this.__endPoint.getX()-this.__startPoint.getX(),2)+Math.pow(this.__endPoint.getY()-this.__startPoint.getY(),2))},Line.prototype.getDirection=function(){var a=this.__endPoint.getX()-this.__startPoint.getX(),b=this.__endPoint.getY()-this.__startPoint.getY(),c=Math.sqrt(a*a+b*b);return new Point(a/c,b/c)},Line.prototype.createShortenedLine=function(a,b){var c=this.__endPoint.getX()-this.__startPoint.getX(),d=this.__endPoint.getY()-this.__startPoint.getY(),e=this.getDirection();return new Line(new Point(this.__startPoint.getX()+a*e.getX(),this.__startPoint.getY()+a*e.getY()),new Point(this.__startPoint.getX()+c-b*e.getX(),this.__startPoint.getY()+d-b*e.getY()))},Line.prototype.computeIntersectionType=function(a){var b=this.__startPoint.getX(),c=this.__startPoint.getY(),d=this.__endPoint.getX(),e=this.__endPoint.getY(),f=a.getStartPoint().getX(),g=a.getStartPoint().getY(),h=a.getEndPoint().getX(),i=a.getEndPoint().getY(),j=(i-g)*(d-b)-(h-f)*(e-c),k=(h-f)*(c-g)-(i-g)*(b-f),l=(d-b)*(c-g)-(e-c)*(b-f);if(0==j)return 0==j&&0==k&&0==l?LINE_INTERSECTION_TYPE.COINCIDENT:LINE_INTERSECTION_TYPE.PARALLEL;var m=k/j,n=l/j;return 1<m||0>m||1<n||0>n?LINE_INTERSECTION_TYPE.LINE:LINE_INTERSECTION_TYPE.LINESEG},Line.prototype.computeIntersection=function(a){var b=this.__startPoint.getX(),c=this.__startPoint.getY(),d=this.__endPoint.getX(),e=this.__endPoint.getY(),f=a.getStartPoint().getX(),g=a.getStartPoint().getY(),h=a.getEndPoint().getX(),i=a.getEndPoint().getY(),j=(i-g)*(d-b)-(h-f)*(e-c),k=(h-f)*(c-g)-(i-g)*(b-f),l=(d-b)*(c-g)-(e-c)*(b-f);if(0==j)return 0==j&&0==k&&0==l?new LineIntersection(LINE_INTERSECTION_TYPE.COINCIDENT,null):new LineIntersection(LINE_INTERSECTION_TYPE.PARALLEL,null);var m=k/j,n=l/j,o=this.__startPoint.getX()+m*(this.__endPoint.getX()-this.__startPoint.getX()),p=this.__startPoint.getY()+m*(this.__endPoint.getY()-this.__startPoint.getY());return 1<m||0>m||1<n||0>n?new LineIntersection(LINE_INTERSECTION_TYPE.LINE,new Point(o,p)):new LineIntersection(LINE_INTERSECTION_TYPE.LINESEG,new Point(o,p))};

    var SvgPathBuilder={pointToLineTo:function pointToLineTo(a,b){return 0===b?"M"+a.getX()+" "+a.getY():"L"+a.getX()+" "+a.getY()},pointTripletToTesselatedCurvePoints:function pointTripletToTesselatedCurvePoints(a,b){if(3!==a.length)throw new Error("_points must be array of exactly 3 points");var c=a[1],d=new Line(a[0],a[1]),e=new Line(a[1],a[2]),f=d.createShortenedLine(0,.5*b),g=e.createShortenedLine(.5*b,0);return [f.getStartPoint(),f.getEndPoint(),g.getStartPoint(),g.getEndPoint()]},pointsToPath:function pointsToPath(a,b){b=b||0;var c=[];if(0<b){for(var h=0;3<=a.length;){var d=a.shift(),e=a.shift(),f=a.shift(),g=SvgPathBuilder.pointTripletToTesselatedCurvePoints([d,e,f],b);a.unshift(g[3]),a.unshift(g[2]);for(var k=0;k<g.length-2;k++)c.push(SvgPathBuilder.pointToLineTo(g[k],h++));}for(;0<a.length;){var j=a.shift();c.push(SvgPathBuilder.pointToLineTo(j,ptIdx++));}}else for(var l,m=0;m<a.length;m++)l=a[m],c.push(SvgPathBuilder.pointToLineTo(l,m));return c.join(" ")}};

    function Dimensions(a,b){this.getWidth=function(){return a},this.getHeight=function(){return b};}

    function Rectangle(a,b,c,d){this.getLeft=function(){return a},this.getTop=function(){return b},this.getRight=function(){return c},this.getBottom=function(){return d},this.getWidth=function(){return c-a},this.getHeight=function(){return d-b},this.getPoints=function(){return [new Point(a,b),new Point(c,b),new Point(c,d),new Point(a,d)]},this.getLines=function(){return [new Line(new Point(a,b),new Point(c,b)),new Line(new Point(c,b),new Point(c,d)),new Line(new Point(c,d),new Point(a,d)),new Line(new Point(a,d),new Point(a,b))]},this.getUniformlyResizedCopy=function(e){return new Rectangle(a-e,b-e,c+e,d+e)},this.getPointsScaledToGrid=function(e){var f=new Point(a+.5*(c-a),b+.5*(d-b)),g=(c-f.getX()+e)/(c-f.getX()),h=(d-f.getY()+e)/(d-f.getY()),i=[new Point((a-f.getX())*g+f.getX(),(b-f.getY())*h+f.getY()),new Point((c-f.getX())*g+f.getX(),(b-f.getY())*h+f.getY()),new Point((c-f.getX())*g+f.getX(),(d-f.getY())*h+f.getY()),new Point((a-f.getX())*g+f.getX(),(d-f.getY())*h+f.getY())];return i},this.checkIntersect=function(e){return !(d<e.getTop())&&!(b>e.getBottom())&&!(c<e.getLeft())&&!(a>e.getRight())},this.checkIsPointWithin=function(e){return !!(e.getX()>=a&&e.getX()<=c&&e.getY()>=b&&e.getY()<=d)},this.checkIsWithin=function(e){return !!(d<=e.getBottom()&&b>=e.getTop()&&c<=e.getRight()&&a>=e.getLeft())};}

    var GroupTransformationContainerEvent=Object.freeze({TRANSLATE_START:"group-transformation-container-translate-start"});

    var AccessibleRoutingPointsFinder={find:function find(a,b,c){var d=new Map,e=[],f=[];return a.forEach(function(a){var f=a.getConnectorAnchors();f.forEach(function(a){for(var f,g=!1,h=0;h<b.length;h++)if(f=b[h].getBoundingRectange(),f.checkIsPointWithin(a.getCentroid())){d.set(a.getId(),0),g=!0;break}if(!g){var j=a.getRoutingPoints(c);j.forEach(function(b){e.push({routingPoint:b,parentAnchor:a});}),d.set(a.getId(),j.length);}});}),e.forEach(function(a){for(var c=!1,e=0;e<b.length;e++){var g=b[e],h=g.getBoundingRectange();if(h.checkIsPointWithin(a.routingPoint)){c=!0;var j=d.get(a.parentAnchor.getId())||0;d.set(a.parentAnchor.getId(),j-1);}}c||f.push(a.routingPoint);}),{connectorAnchorToNumValidRoutingPoints:d,accessibleRoutingPoints:f}}};

    var CanvasEvent=Object.freeze({DBLCLICK:"dblclick",CLICK:"click",CONNECTOR_UPDATED:"connector-updated",OBJECT_ADDED:"object-added",OBJECT_REMOVED:"object-removed",OBJECT_RESIZED:"object-resized",OBJECT_TRANSLATED:"object-translated",MULTIPLE_OBJECT_SELECTION_STARTED:"multiple-object-selection-started",MULTIPLE_OBJECTS_SELECTED:"multiple-objects-selected"});

    function ConnectorAnchor(a,b,c){var d=this;this.getId=function(){return a},this.getX=function(){return d.getCentroid().getX()},this.getY=function(){return d.getCentroid().getY()},this.getWidth=function(){var a=b.getBoundingClientRect();return a.right-a.left},this.getHeight=function(){var a=b.getBoundingClientRect();return a.bottom-a.top},this.getCentroid=function(){var a=b.getBoundingClientRect(),e=c.getPageOffset();return new Point(a.left+e.getX()+.5*d.getWidth(),a.top+e.getY()+.5*d.getHeight())},this.getRoutingPoints=function(a){var b=d.getCentroid(),c=.5*d.getWidth(),e=.5*d.getHeight();return [new Point(b.getX()+c+a,b.getY()),new Point(b.getX()-c-a,b.getY()),new Point(b.getX(),b.getY()+e+a),new Point(b.getX(),b.getY()-e-a)]},this.getBoundingRectange=function(){var a=d.getCentroid(),b=.5*d.getWidth(),c=.5*d.getHeight();return new Rectangle(a.getX()-b,a.getY()-c,a.getX()+b,a.getY()+c)};}

    var ClosestPairFinder={findClosestPairBetweenObjects:function findClosestPairBetweenObjects(a,b,c){for(var e=a.getConnectorAnchors(),f=b.getConnectorAnchors(),g=0,h=0,i=Number.MAX_VALUE,j=0;j<e.length;j++){var k=e[j].getCentroid(),l=c.get(e[j].getId())||0;if(0!==l)for(var o=0;o<f.length;o++){var m=f[o].getCentroid(),n=Math.sqrt(Math.pow(m.getX()-k.getX(),2)+Math.pow(m.getY()-k.getY(),2)),d=c.get(f[o].getId())||0;n<i&&0<d&&(g=j,h=o,i=n);}}return {objectAAnchorIndex:g,objectAAnchor:e[g],objectBAnchorIndex:h,objectBAnchor:f[h]}}};

    var DebugMetricsPanel=function DebugMetricsPanel(a){var b=null,c=!1;this.init=function(){b=a.document.createElement("div"),b.classList.add("graphpaper-debug-panel"),b.style.display="none",b.style.position="fixed",b.style.right="0px",b.style.top="0px",b.style.width="450px",b.style.height="200px",b.style.color="#fff",b.style.padding="15px",b.style.backgroundColor="rgba(0,0,0,0.75)",a.document.body.appendChild(b);},this.show=function(){c=!0,b.style.display="block";},this.hide=function(){c=!1,b.style.display="none";},this.refresh=function(a){!1===c||(b.innerHTML=`
            <p>refreshAllConnectorsInternal.executionTime = ${a.refreshAllConnectorsInternal.executionTime}</p>
            <p>connectorRoutingWorker.executionTime = ${a.connectorRoutingWorker.executionTime}</p>            
            <p>-- connectorRoutingWorker.msgDecodeTime = ${a.connectorRoutingWorker.msgDecodeTime}</p>
            <p>-- connectorRoutingWorker.pointVisibilityMapCreationTime = ${a.connectorRoutingWorker.pointVisibilityMapCreationTime}</p>
            <p>-- connectorRoutingWorker.numRoutingPoints = ${a.connectorRoutingWorker.numRoutingPoints}</p>
            <p>-- connectorRoutingWorker.numBoundaryLines = ${a.connectorRoutingWorker.numBoundaryLines}</p>
            <p>connectorsRefreshTime = ${a.connectorsRefreshTime}</p>
        `);};};

    function DoubleTapDetector(a,b){var c={lastTouchX:null,lastTouchY:null,lastTouchTime:null},d=a||300,e=b||24;this.processTap=function(a,b){if(0===a.changedTouches.length)return {doubleTapDetected:!1,touchX:null,touchY:null};var f=MatrixMath.vecMat4Multiply([a.changedTouches[0].pageX,a.changedTouches[0].pageY,0,1],b),g=!1,h=f[0],i=f[1],j=new Date().getTime();if(null!==c.lastTouchTime){var k=c.lastTouchTime,l=j-k,m=c.lastTouchX,n=c.lastTouchY,o=Math.sqrt(Math.pow(h-m,2)+Math.pow(i-n,2));l<=d&&o<=e&&(c.lastTouchTime=null,c.lastTouchX=null,c.lastTouchY=null,g=!0);}return g||(c.lastTouchTime=j,c.lastTouchX=h,c.lastTouchY=i),{doubleTapDetected:g,touchX:h,touchY:i}};}

    function PointSet(a){var b=this,c=[];this.push=function(a){for(var b=0;b<c.length;b++)if(a.isEqual(c[b]))return !1;return c.push(a),!0},this.pushPointSet=function(a){for(var c=a.toArray(),d=0;d<c.length;d++)b.push(c[d]);},this.findPointClosestTo=function(a){var b=null,d=Number.MAX_SAFE_INTEGER;return c.forEach(function(c){var e=new Line(a,c);e.getLength()<d&&(b=c,d=e.getLength());}),b},this.findDistanceToPointClosestTo=function(a){var b=Number.MAX_SAFE_INTEGER;return c.forEach(function(c){var d=new Line(a,c);d.getLength()<b&&(b=d.getLength());}),b},this.findPointsCloseTo=function(a,b){var d=new PointSet;return c.forEach(function(c){var e=new Line(a,c);e.getLength()<=b&&d.push(c);}),d},this.toArray=function(){return c},this.toFloat64Array=function(){for(var a=new Float64Array(2*c.length),b=0;b<c.length;b++)a[0+2*b]=c[b].getX(),a[1+2*b]=c[b].getY();return a};var d=function fromFloat64Array(a){c.length=0;for(var b=0;b<a.length;b+=2)c.push(new Point(a[b],a[b+1]));};this.count=function(){return c.length},a&&Array.isArray(a)?a.forEach(b.push):a&&"[object Float64Array]"===Object.prototype.toString.call(a)&&d(a);}

    function LineSet(a){var b=this,c=[];this.push=function(a){var b=!1;return (c.forEach(function(c){a.isEqual(c)&&(b=!0);}),!b)&&(c.push(a),!0)},this.toArray=function(){return c},this.count=function(){return c.length},this.toFloat64Array=function(){for(var a=new Float64Array(4*c.length),b=0;b<c.length;b++)a[0+4*b]=c[b].getStartPoint().getX(),a[1+4*b]=c[b].getStartPoint().getY(),a[2+4*b]=c[b].getEndPoint().getX(),a[3+4*b]=c[b].getEndPoint().getY();return a};var d=function fromFloat64Array(a){c.length=0;for(var b=0;b<a.length;b+=4)c.push(new Line(new Point(a[b],a[b+1]),new Point(a[b+2],a[b+3])));};a&&Array.isArray(a)?a.forEach(b.push):a&&"[object Float64Array]"===Object.prototype.toString.call(a)&&d(a);}

    var ConnectorEvent=Object.freeze({CLICK:"connector-click",MOUSE_ENTER:"connector-mouse-enter",MOUSE_LEAVE:"connector-mouse-leave"});

    function Connector(a,b,c,d,e,f){var g=this,h=new Map,i=0,j=0;"undefined"==typeof d&&(d="#000"),"undefined"==typeof e&&(e="2px"),"undefined"==typeof f&&(f=0);var k=null,l=window.document.createElementNS("http://www.w3.org/2000/svg","path");l.setAttribute("d","M0 0 L0 0"),l.style.stroke=d,l.style.strokeWidth=e,l.addEventListener("click",function(a){g.dispatchEvent(ConnectorEvent.CLICK,{connector:g,clickedAtX:a.pageX,clickedAtY:a.pageY});}),l.addEventListener("mouseenter",function(a){g.dispatchEvent(ConnectorEvent.MOUSE_ENTER,{connector:g,pointerAtX:a.pageX,pointerAtY:a.pageY});}),l.addEventListener("mouseleave",function(a){g.dispatchEvent(ConnectorEvent.MOUSE_LEAVE,{connector:g});});var m=null;this.appendPathToContainerDomElement=function(){m=c.appendChild(l);},this.setMarkerStart=function(a,b){l.setAttribute(`marker-start`,`url(${a})`),i=b;},this.unsetMarkerStart=function(){l.removeAttribute(`marker-start`),i=0;},this.setMarkerEnd=function(a,b){l.setAttribute(`marker-end`,`url(${a})`),j=b;},this.unsetMarkerEnd=function(){l.removeAttribute(`marker-end`),j=0;},this.getPathPoints=function(){return k},this.getPathLines=function(){if(null===k||2>k.length)return [];for(var a=[],b=0;b<k.length-1;b++)a.push(new Line(k[b],k[b+1]));return a},this.getLength=function(){for(var a=0,b=g.getPathLines(),c=0;c<b.length;c++)a+=b[c].getLength();return a},this.getMidpoint=function(){for(var a=g.getLength(),b=g.getPathLines(),c=0,d=null,e=0;e<b.length;e++){d=b[e];var k=b[e].getLength();if(c+=k,c>=a/2)break}var f=c-d.getLength(),h=a/2-f,j=h/d.getLength();return new Point(d.getStartPoint().getX()+j*(d.getEndPoint().getX()-d.getStartPoint().getX()),d.getStartPoint().getY()+j*(d.getEndPoint().getY()-d.getStartPoint().getY()))},this.getMidpointDirection=function(){for(var a=g.getLength(),b=g.getPathLines(),c=0,d=null,e=0;e<b.length;e++){d=b[e];var f=b[e].getLength();if(c+=f,c>=a/2)break}return null===d?b[0].getDirection():d.getDirection()},this.refresh=function(a,b){k=b,l.setAttribute("d",a);},this.getId=function(){var c=[a.getId(),b.getId()].sort();return c.join(":")},this.getAnchorStart=function(){return a},this.getAnchorEnd=function(){return b},this.removePathElement=function(){l.remove();},this.addClassToDomElement=function(a){l.classList.add(a);},this.removeClassFromDomElement=function(a){l.classList.remove(a);},this.getDescriptor=function(){return {id:g.getId(),anchor_start_centroid_arr:a.getCentroid().toArray(),anchor_end_centroid_arr:b.getCentroid().toArray(),marker_start_size:i,marker_end_size:j,curvature_px:f}},this.on=function(a,b){var c=h.get(a)||[];c.push(b),h.set(a,c);},this.off=function(a,b){for(var c=h.get(a)||[],d=0;d<c.length;d++)if(c[d]===b){c.splice(d,1);break}h.set(a,c);},this.dispatchEvent=function(a,b){var c=h.get(a)||[];c.forEach(function(a){a(b);});};}

    function PointVisibilityMap(a,b){var c=this,d=b.toArray(),e=a.toArray(),f=Array(a.count()),g=function doesLineIntersectAnyBoundaryLines(a){for(var c,e=0;e<d.length;e++)if(c=d[e].computeIntersectionType(a),c===LINE_INTERSECTION_TYPE.LINESEG)return !0;return !1},h=function computePointsVisibility(){for(var a=0;a<e.length;a++)f[a]=[];for(var b=0;b<e.length;b++)for(var c,d=b+1;d<e.length;d++)c=new Line(e[b],e[d]),g(c)||(f[b].push(d),f[d].push(b));},i=function getVisiblePointsFrom(a){for(var c=0;c<e.length;c++)if(e[c].isEqual(a)){var b=function(){var a=f[c],b=[];return a.forEach(function(a){b.push(e[a]);}),{v:b}}();if("object"==typeof b)return b.v}return []},j=function routeToEndpoint(a,b,c,d){var e=i(c),f=Number.MAX_SAFE_INTEGER,g=null;return e.forEach(function(e){for(var k=0;k<b.length;k++)if(e.isEqual(b[k]))return;var h=new Line(c,e).getLength()+a,j=new Line(e,d).getLength();h+j<f&&(f=h+j,g=e);}),f===Number.MAX_SAFE_INTEGER?null:{cost:f,point:g}},k=function optimizeRoute(a){for(var b=0;!(b+2>=a.length);){var c=new Line(a[b],a[b+2]);g(c)?b++:a.splice(b+1,1);}};this.getPointToVisibleSetData=function(){return f},this.findPointClosestTo=function(a){var b=null,c=Number.MAX_SAFE_INTEGER;return e.forEach(function(d){var e=new Line(a,d);e.getLength()<c&&(b=d,c=e.getLength());}),b},this.findVisiblePointClosestTo=function(a){var b=null,c=Number.MAX_SAFE_INTEGER;return e.forEach(function(d){var e=new Line(a,d),f=e.getLength();f<c&&!g(e)&&(b=d,c=f);}),b},this.computeRoute=function(a,b){if(null===a||null===b)return new PointSet;var d=c.findVisiblePointClosestTo(a);if(null===d)return new PointSet;for(var e,f=0,h=[d],i=d;!0;){if(e=j(f,h,i,b),null===e){var l=new Line(h[h.length-1],b);if(g(l))return new PointSet;break}if(f+=new Line(i,e.point).getLength(),h.push(e.point),i=e.point,1>new Line(i,b).getLength())break}return k(h),new PointSet(h)},h();}

    var GRID_STYLE={LINE:"line",DOT:"dot"};function Grid(a,b,c){this.getSize=function(){return a},this.getStyle=function(){return c},this.getSvgImageTile=function(){return c===GRID_STYLE.LINE?"<svg xmlns=\"http://www.w3.org/2000/svg\" width=\""+a+"\" height=\""+a+"\"><rect width=\""+a+"\" height=\"1\" x=\"0\" y=\""+(a-1)+"\" style=\"fill:"+b+"\" /><rect width=\"1\" height=\""+a+"\" x=\""+(a-1)+"\" y=\"0\" style=\"fill:"+b+"\" /></svg>":"<svg xmlns=\"http://www.w3.org/2000/svg\" width=\""+a+"\" height=\""+a+"\"><rect width=\"1\" height=\"1\" x=\""+(a-1)+"\" y=\""+(a-1)+"\" style=\"fill:"+b+"\" /></svg>"};}

    var ConnectorRoutingWorkerJsString=`(function () {
  'use strict';

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

      return arr2;
    }
  }

  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  function Point(a,b){this.__x=a,this.__y=b;}Point.prototype.getX=function(){return this.__x},Point.prototype.getY=function(){return this.__y},Point.prototype.isEqual=function(a){return !(this.__x!==a.getX()||this.__y!==a.getY())},Point.prototype.getCartesianPoint=function(a,b){return new Point(this.__x-.5*a,-this.__y+.5*b)},Point.prototype.toString=function(){return this.__x+" "+this.__y},Point.prototype.toArray=function(){return [this.__x,this.__y]},Point.fromArray=function(a){return new Point(a[0],a[1])};

  var LINE_INTERSECTION_TYPE=Object.freeze({PARALLEL:"parallel",COINCIDENT:"coincident",LINE:"line",LINESEG:"lineseg"});function LineIntersection(a,b){this.getType=function(){return a},this.getIntersectionPoint=function(){return b};}

  function Line(a,b){if("undefined"==typeof a||null===a)throw "Line missing _startPoint";if("undefined"==typeof b||null===b)throw "Line missing _endPoint";this.__startPoint=a,this.__endPoint=b;}Line.prototype.getStartPoint=function(){return this.__startPoint},Line.prototype.getEndPoint=function(){return this.__endPoint},Line.prototype.isEqual=function(a){return !!(this.getStartPoint().isEqual(a.getStartPoint())&&this.getEndPoint().isEqual(a.getEndPoint()))},Line.prototype.getLength=function(){return Math.sqrt(Math.pow(this.__endPoint.getX()-this.__startPoint.getX(),2)+Math.pow(this.__endPoint.getY()-this.__startPoint.getY(),2))},Line.prototype.getDirection=function(){var a=this.__endPoint.getX()-this.__startPoint.getX(),b=this.__endPoint.getY()-this.__startPoint.getY(),c=Math.sqrt(a*a+b*b);return new Point(a/c,b/c)},Line.prototype.createShortenedLine=function(a,b){var c=this.__endPoint.getX()-this.__startPoint.getX(),d=this.__endPoint.getY()-this.__startPoint.getY(),e=this.getDirection();return new Line(new Point(this.__startPoint.getX()+a*e.getX(),this.__startPoint.getY()+a*e.getY()),new Point(this.__startPoint.getX()+c-b*e.getX(),this.__startPoint.getY()+d-b*e.getY()))},Line.prototype.computeIntersectionType=function(a){var b=this.__startPoint.getX(),c=this.__startPoint.getY(),d=this.__endPoint.getX(),e=this.__endPoint.getY(),f=a.getStartPoint().getX(),g=a.getStartPoint().getY(),h=a.getEndPoint().getX(),i=a.getEndPoint().getY(),j=(i-g)*(d-b)-(h-f)*(e-c),k=(h-f)*(c-g)-(i-g)*(b-f),l=(d-b)*(c-g)-(e-c)*(b-f);if(0==j)return 0==j&&0==k&&0==l?LINE_INTERSECTION_TYPE.COINCIDENT:LINE_INTERSECTION_TYPE.PARALLEL;var m=k/j,n=l/j;return 1<m||0>m||1<n||0>n?LINE_INTERSECTION_TYPE.LINE:LINE_INTERSECTION_TYPE.LINESEG},Line.prototype.computeIntersection=function(a){var b=this.__startPoint.getX(),c=this.__startPoint.getY(),d=this.__endPoint.getX(),e=this.__endPoint.getY(),f=a.getStartPoint().getX(),g=a.getStartPoint().getY(),h=a.getEndPoint().getX(),i=a.getEndPoint().getY(),j=(i-g)*(d-b)-(h-f)*(e-c),k=(h-f)*(c-g)-(i-g)*(b-f),l=(d-b)*(c-g)-(e-c)*(b-f);if(0==j)return 0==j&&0==k&&0==l?new LineIntersection(LINE_INTERSECTION_TYPE.COINCIDENT,null):new LineIntersection(LINE_INTERSECTION_TYPE.PARALLEL,null);var m=k/j,n=l/j,o=this.__startPoint.getX()+m*(this.__endPoint.getX()-this.__startPoint.getX()),p=this.__startPoint.getY()+m*(this.__endPoint.getY()-this.__startPoint.getY());return 1<m||0>m||1<n||0>n?new LineIntersection(LINE_INTERSECTION_TYPE.LINE,new Point(o,p)):new LineIntersection(LINE_INTERSECTION_TYPE.LINESEG,new Point(o,p))};

  function PointSet(a){var b=this,c=[];this.push=function(a){for(var b=0;b<c.length;b++)if(a.isEqual(c[b]))return !1;return c.push(a),!0},this.pushPointSet=function(a){for(var c=a.toArray(),d=0;d<c.length;d++)b.push(c[d]);},this.findPointClosestTo=function(a){var b=null,d=Number.MAX_SAFE_INTEGER;return c.forEach(function(c){var e=new Line(a,c);e.getLength()<d&&(b=c,d=e.getLength());}),b},this.findDistanceToPointClosestTo=function(a){var b=Number.MAX_SAFE_INTEGER;return c.forEach(function(c){var d=new Line(a,c);d.getLength()<b&&(b=d.getLength());}),b},this.findPointsCloseTo=function(a,b){var d=new PointSet;return c.forEach(function(c){var e=new Line(a,c);e.getLength()<=b&&d.push(c);}),d},this.toArray=function(){return c},this.toFloat64Array=function(){for(var a=new Float64Array(2*c.length),b=0;b<c.length;b++)a[0+2*b]=c[b].getX(),a[1+2*b]=c[b].getY();return a};var d=function fromFloat64Array(a){c.length=0;for(var b=0;b<a.length;b+=2)c.push(new Point(a[b],a[b+1]));};this.count=function(){return c.length},a&&Array.isArray(a)?a.forEach(b.push):a&&"[object Float64Array]"===Object.prototype.toString.call(a)&&d(a);}

  function LineSet(a){var b=this,c=[];this.push=function(a){var b=!1;return (c.forEach(function(c){a.isEqual(c)&&(b=!0);}),!b)&&(c.push(a),!0)},this.toArray=function(){return c},this.count=function(){return c.length},this.toFloat64Array=function(){for(var a=new Float64Array(4*c.length),b=0;b<c.length;b++)a[0+4*b]=c[b].getStartPoint().getX(),a[1+4*b]=c[b].getStartPoint().getY(),a[2+4*b]=c[b].getEndPoint().getX(),a[3+4*b]=c[b].getEndPoint().getY();return a};var d=function fromFloat64Array(a){c.length=0;for(var b=0;b<a.length;b+=4)c.push(new Line(new Point(a[b],a[b+1]),new Point(a[b+2],a[b+3])));};a&&Array.isArray(a)?a.forEach(b.push):a&&"[object Float64Array]"===Object.prototype.toString.call(a)&&d(a);}

  function PointVisibilityMap(a,b){var c=this,d=b.toArray(),e=a.toArray(),f=Array(a.count()),g=function doesLineIntersectAnyBoundaryLines(a){for(var c,e=0;e<d.length;e++)if(c=d[e].computeIntersectionType(a),c===LINE_INTERSECTION_TYPE.LINESEG)return !0;return !1},h=function computePointsVisibility(){for(var a=0;a<e.length;a++)f[a]=[];for(var b=0;b<e.length;b++)for(var c,d=b+1;d<e.length;d++)c=new Line(e[b],e[d]),g(c)||(f[b].push(d),f[d].push(b));},i=function getVisiblePointsFrom(a){for(var c=0;c<e.length;c++)if(e[c].isEqual(a)){var b=function(){var a=f[c],b=[];return a.forEach(function(a){b.push(e[a]);}),{v:b}}();if("object"==typeof b)return b.v}return []},j=function routeToEndpoint(a,b,c,d){var e=i(c),f=Number.MAX_SAFE_INTEGER,g=null;return e.forEach(function(e){for(var k=0;k<b.length;k++)if(e.isEqual(b[k]))return;var h=new Line(c,e).getLength()+a,j=new Line(e,d).getLength();h+j<f&&(f=h+j,g=e);}),f===Number.MAX_SAFE_INTEGER?null:{cost:f,point:g}},k=function optimizeRoute(a){for(var b=0;!(b+2>=a.length);){var c=new Line(a[b],a[b+2]);g(c)?b++:a.splice(b+1,1);}};this.getPointToVisibleSetData=function(){return f},this.findPointClosestTo=function(a){var b=null,c=Number.MAX_SAFE_INTEGER;return e.forEach(function(d){var e=new Line(a,d);e.getLength()<c&&(b=d,c=e.getLength());}),b},this.findVisiblePointClosestTo=function(a){var b=null,c=Number.MAX_SAFE_INTEGER;return e.forEach(function(d){var e=new Line(a,d),f=e.getLength();f<c&&!g(e)&&(b=d,c=f);}),b},this.computeRoute=function(a,b){if(null===a||null===b)return new PointSet;var d=c.findVisiblePointClosestTo(a);if(null===d)return new PointSet;for(var e,f=0,h=[d],i=d;!0;){if(e=j(f,h,i,b),null===e){var l=new Line(h[h.length-1],b);if(g(l))return new PointSet;break}if(f+=new Line(i,e.point).getLength(),h.push(e.point),i=e.point,1>new Line(i,b).getLength())break}return k(h),new PointSet(h)},h();}

  var SvgPathBuilder={pointToLineTo:function pointToLineTo(a,b){return 0===b?"M"+a.getX()+" "+a.getY():"L"+a.getX()+" "+a.getY()},pointTripletToTesselatedCurvePoints:function pointTripletToTesselatedCurvePoints(a,b){if(3!==a.length)throw new Error("_points must be array of exactly 3 points");var c=a[1],d=new Line(a[0],a[1]),e=new Line(a[1],a[2]),f=d.createShortenedLine(0,.5*b),g=e.createShortenedLine(.5*b,0);return [f.getStartPoint(),f.getEndPoint(),g.getStartPoint(),g.getEndPoint()]},pointsToPath:function pointsToPath(a,b){b=b||0;var c=[];if(0<b){for(var h=0;3<=a.length;){var d=a.shift(),e=a.shift(),f=a.shift(),g=SvgPathBuilder.pointTripletToTesselatedCurvePoints([d,e,f],b);a.unshift(g[3]),a.unshift(g[2]);for(var k=0;k<g.length-2;k++)c.push(SvgPathBuilder.pointToLineTo(g[k],h++));}for(;0<a.length;){var j=a.shift();c.push(SvgPathBuilder.pointToLineTo(j,ptIdx++));}}else for(var l,m=0;m<a.length;m++)l=a[m],c.push(SvgPathBuilder.pointToLineTo(l,m));return c.join(" ")}};

  var computeConnectorPath=function computeConnectorPath(a,b,c){var d=Point.fromArray(a.anchor_start_centroid_arr),e=Point.fromArray(a.anchor_end_centroid_arr),f=a.marker_start_size,g=a.marker_end_size,h=a.curvature_px,i=b.findDistanceToPointClosestTo(d),j=b.findPointsCloseTo(d,i).findPointClosestTo(e),k=b.findPointsCloseTo(e,i).findPointClosestTo(d),l=c.computeRoute(j,k),m=l.toArray(),n=d,o=e;if(0<f&&1<=m.length){var q=new Line(m[0],d).createShortenedLine(0,f);n=q.getEndPoint();}if(0<g&&1<=m.length){var r=new Line(m[m.length-1],e).createShortenedLine(0,g);o=r.getEndPoint();}var p=[n].concat(_toConsumableArray(m),[o]);return {svgPath:SvgPathBuilder.pointsToPath(p,h),pointsInPath:p}},convertArrayBufferToFloat64Array=function convertArrayBufferToFloat64Array(a){return new Float64Array(a)},requestQueue=[],processRequestQueue=function processRequestQueue(){if(0!==requestQueue.length){var a=requestQueue.pop();requestQueue.length=0;var b={overallTime:null},c=new Date,d=a.gridSize,e=a.connectorDescriptors,f=new Date,g=new PointSet(convertArrayBufferToFloat64Array(a.routingPoints)),h=new LineSet(convertArrayBufferToFloat64Array(a.boundaryLines)),i=new PointSet(convertArrayBufferToFloat64Array(a.routingPointsAroundAnchor));b.msgDecodeTime=new Date-f;var j=new Date,k=new PointVisibilityMap(g,h);b.pointVisibilityMapCreationTime=new Date-j,e.forEach(function(a){var b=computeConnectorPath(a,i,k),c=new PointSet(b.pointsInPath);a.svgPath=b.svgPath,a.pointsInPath=c.toFloat64Array().buffer;}),b.numRoutingPoints=g.count(),b.numBoundaryLines=h.count(),b.overallTime=new Date-c,postMessage({pointVisibilityMapData:k.getPointToVisibleSetData(),connectorDescriptors:e,metrics:b});}};setInterval(processRequestQueue,6),onmessage=function onmessage(a){requestQueue.push(a.data);};

}());
`;

    function Canvas(a,b){var c=this,d=b.document.createElementNS("http://www.w3.org/2000/svg","svg");d.style.width="100%",d.style.height="100%";var e=a.appendChild(d),f=null,g=[],h=null,i=null,j="transform 0.55s ease-in-out, transform-origin 0.55s ease-in-out",k=0,l=0,m=0,n=0,o=0,p=0,q=1,r=1,s=[],t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],u=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],v=null,w=6.94,y=[],z=[],A=null,B=null,C=0,D=0,E=0,F=0,G=null,H=new DebugMetricsPanel(b),I={connectorRoutingWorker:{executionTime:null,numRoutingPoints:null,numBoundaryLines:null,msgDecodeTime:null,pointVisibilityMapCreationTime:null},refreshAllConnectorsInternal:{executionTime:null},connectorsRefreshTime:null},J=750,K=null,L=0,M=0,N=0,O=0,P=!1,Q=[],R=new Map,S=null,T=null,U=URL.createObjectURL(new Blob([ConnectorRoutingWorkerJsString])),V=new Worker(U);V.onmessage=function(a){var b=new Date,c=a.data.connectorDescriptors,d=function getConnectorDescriptorById(a){for(var b=0;b<c.length;b++)if(c[b].id===a)return c[b];return null};z.forEach(function(a){var b=d(a.getId());if(b){var c=new PointSet(new Float64Array(b.pointsInPath));a.refresh(b.svgPath,c.toArray()),ja(CanvasEvent.CONNECTOR_UPDATED,{connector:a});}}),I.connectorsRefreshTime=new Date-b,I.connectorRoutingWorker.executionTime=a.data.metrics.overallTime,I.connectorRoutingWorker.numBoundaryLines=a.data.metrics.numBoundaryLines,I.connectorRoutingWorker.numRoutingPoints=a.data.metrics.numRoutingPoints,I.connectorRoutingWorker.msgDecodeTime=a.data.metrics.msgDecodeTime,I.connectorRoutingWorker.pointVisibilityMapCreationTime=a.data.metrics.pointVisibilityMapCreationTime,H.refresh(I);},this.getCurrentPointVisibilityMap=function(){return v},this.setGrid=function(c){i=c,a.style.backgroundImage="url('data:image/svg+xml;base64,"+b.btoa(i.getSvgImageTile())+"')",a.style.backgroundRepeat="repeat",a.style.backgroundColor="#fff";},this.getGrid=function(){return i},this.getGridSize=function(){return i.getSize()};var W=function getObjectExtentRoutingPoints(){var a=new PointSet;return y.forEach(function(b){var d=b.getBoundingRectange().getPointsScaledToGrid(c.getGridSize());d.forEach(function(b){a.push(b);});}),a},X=function getConnectorRoutingPointsAroundAnchor(){var a=new PointSet,b=AccessibleRoutingPointsFinder.find(y,y,c.getGridSize());return b.accessibleRoutingPoints.forEach(function(b){a.push(b);}),a},Y=function getConnectorBoundaryLines(){var a=[];return y.forEach(function(b){var c=b.getBoundingRectange().getLines();c.forEach(function(b){a.push(b);});var d=b.getConnectorAnchors();d.forEach(function(b){var c=b.getBoundingRectange().getLines();c.forEach(function(b){a.push(b);});});}),new LineSet(a)},Z=function refreshAllConnectorsInternal(){var a=new Date,b=[];z.forEach(function(a){b.push(a.getDescriptor());});var d=X(),e=W(),f=new PointSet;f.pushPointSet(d),f.pushPointSet(e);var g=d.toFloat64Array(),h=f.toFloat64Array(),i=Y().toFloat64Array();V.postMessage({gridSize:c.getGridSize(),connectorDescriptors:b,routingPoints:h.buffer,boundaryLines:i.buffer,routingPointsAroundAnchor:g.buffer},[h.buffer,i.buffer,g.buffer]),I.refreshAllConnectorsInternal.executionTime=new Date-a;};this.setConnectorRefreshBufferTime=function(a){w=a;},this.refreshAllConnectors=function(){if(null!==S){var a=new Date-S;if(a<w)return}S=new Date,T=setTimeout(function(){T=null,S=null,Z();},w);};var $=function makeNewConnector(a,b,c){return new Connector(a,b,c)};this.setConnectorFactory=function(a){$=a;},this.getTransitionCss=function(){return j},this.setTransitionCss=function(b){j=b,a.style.transition=j;},this.getTransformOriginX=function(){return k},this.getTransformOriginY=function(){return l},this.getScaleFactor=function(){return q},this.getTranslateX=function(){return o},this.getTranslateY=function(){return p},this.setTransformOrigin=function(b,c){k=b,l=c,a.style.transformOrigin=`${k}px ${l}px`;},this.scale=function(a,b){if(b=b||!1,b){var d=c.getGridSize()*a,e=Math.round(d);a=e/c.getGridSize();}q=a,r=1/q;var f=[q,0,0,0,0,q,0,0,0,0,q,1,0,0,0,1];return u=MatrixMath.mat4Multiply(u,f),s.push([r,0,0,0,0,r,0,0,0,0,r,1,0,0,0,1]),c},this.translate=function(a,b){o=a,p=b;var d=[1,0,0,0,0,1,0,0,0,0,1,0,o,p,0,1];return u=MatrixMath.mat4Multiply(u,d),s.push([1,0,0,-o,0,1,0,-p,0,0,1,0,0,0,0,1]),c},this.applyTransform=function(){a.style.transform=c.getTranformMatrixCss(),t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];for(var b=0;b<s.length;b++)t=MatrixMath.mat4Multiply(t,s[b]);},this.getTransformMatrix=function(){return u},this.getTranformMatrixCss=function(){var a=u.join(",");return `matrix3d(${a})`},this.resetTransform=function(){q=1,r=1,o=0,p=0,u=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],s.length=0,a.style.transform="none";},this.getPageOffset=function(){return new Point(window.pageXOffset,window.pageYOffset)},this.snapToGrid=function(a){var b=Math.round(a/c.getGridSize())*c.getGridSize();return Math.max(0,b-1)},this.getOffsetLeft=function(){return a.offsetLeft},this.getOffsetTop=function(){return a.offsetTop},this.getWidth=function(){return a.offsetWidth},this.getHeight=function(){return a.offsetHeight},this.calcBoundingRectForObjects=function(a){var b=null,c=null,d=null,e=null;return a.forEach(function(a,f,g){var h=a.getBoundingRectange(),i=h.getLeft(),j=h.getTop(),k=h.getRight(),l=h.getBottom();(null===c||i<c)&&(c=i),(null===b||j<b)&&(b=j),(null===d||l>d)&&(d=l),(null===e||k>e)&&(e=k);}),(null===b||null===c||null===d||null===e)&&(b=0,c=0,d=0,e=0),new Rectangle(c,b,e,d)},this.calcBoundingBox=function(){return 0===y.length?new Rectangle(0,0,c.getWidth(),c.getHeight()):c.calcBoundingRectForObjects(y)},this.getObjectsAroundPoint=function(a,b,c){c=c||1;var d=[],e=new Rectangle(a-c,b-c,a+c,b+c);return y.forEach(function(a){e.checkIntersect(a.getBoundingRectange())&&d.push(a);}),d},this.getObjectsWithinRect=function(a){var b=[];return y.forEach(function(c){c.getBoundingRectange().checkIsWithin(a)&&b.push(c);}),b},this.getAllObjects=function(){return y},this.publishSiblingObjectChange=function(a,b){y.forEach(function(c){c.handleSiblingObjectChange(a,b);});},this.getObjectById=function(a){var b=null;return y.forEach(function(c,d,e){null===b&&c.getId()===a&&(b=c);}),b},this.addObject=function(a){a.on("obj-resize-start",ba),a.on("obj-resize",function(a){ja(CanvasEvent.OBJECT_RESIZED,{object:a.obj}),c.refreshAllConnectors();}),a.on("obj-translate-start",ca),a.on("obj-translate",function(a){ja(CanvasEvent.OBJECT_TRANSLATED,{object:a.obj}),c.refreshAllConnectors();}),y.push(a),c.refreshAllConnectors(),ja(CanvasEvent.OBJECT_ADDED,{object:a});},this.removeObject=function(a){for(var b=0;b<y.length;b++)if(y[b].getId()===a)return y.splice(b,1),c.refreshAllConnectors(),ja(CanvasEvent.OBJECT_REMOVED,{object:y[b]}),!0;return !1},this.getConnector=function(a){for(var b=0;b<z.length;b++)if(z[b].getId()===a)return z[b];return null},this.getAllConnectors=function(){return z},this.getConnectorsBetweenObjects=function(a,b){var c=[];return z.forEach(function(d){var e=d.getAnchorStart(),f=d.getAnchorEnd();a.hasConnectorAnchor(e)&&b.hasConnectorAnchor(f)&&c.push(d),a.hasConnectorAnchor(f)&&b.hasConnectorAnchor(e)&&c.push(d);}),c},this.getObjectsConnectedViaConnector=function(a){var b=[],d=c.getAllObjects();return z.forEach(function(c){if(c.getId()===a){var e=c.getAnchorStart(),f=c.getAnchorEnd();d.forEach(function(a){(a.hasConnectorAnchor(e)||a.hasConnectorAnchor(f))&&b.push(a);});}}),b},this.getConnectorsConnectedToObject=function(a){var b=[];return z.forEach(function(c){var d=c.getAnchorStart(),e=c.getAnchorEnd();(a.hasConnectorAnchor(d)||a.hasConnectorAnchor(e))&&b.push(c);}),b},this.getObjectWithConnectorAnchor=function(a){for(var b,d=c.getAllObjects(),e=0;e<d.length;e++){b=d[e].getConnectorAnchors();for(var f=0;f<b.length;f++)if(b[f].getId()===a)return d[e]}return null},this.removeAllConnectors=function(){z.forEach(function(a){a.removePathElement();}),z.splice(0,z.length);},this.removeConnector=function(a){for(var b=0;b<z.length;b++)if(z[b]===a)return a.removePathElement(),z.splice(b,1),!0;return !1},this.makeNewConnectorFromAnchors=function(a,b){var d=$(a,b,e),f=c.getConnector(d.getId());return null===f?(z.push(d),d.appendPathToContainerDomElement(),c.refreshAllConnectors(),d):f},this.findBestConnectorAnchorsToConnectObjects=function(a,b,d){var e=function searchFunc(d){var e=AccessibleRoutingPointsFinder.find([a,b],y,c.getGridSize()),f=ClosestPairFinder.findClosestPairBetweenObjects(d.objectA,d.objectB,e.connectorAnchorToNumValidRoutingPoints);d.cb(f);};setTimeout(function(){e({objectA:a,objectB:b,cb:d});},w);},this.addConnectionAnchorToSelectionStack=function(a){Q.push(a),2===Q.length&&(c.makeNewConnectorFromAnchors(Q[0],Q[1]),Q.length=0);};var _=function dblClickTapHandler(a,b){var d=c.getObjectsAroundPoint(a,b),e={targetPoint:new Point(a,b),objectsAroundPoint:d};ja(CanvasEvent.DBLCLICK,e);};this.initDebugMetricsPanel=function(){H.init(),H.show();},this.initInteractionHandlers=function(b,c){G=new DoubleTapDetector(b,c),a.addEventListener("dblclick",function(a){var b=MatrixMath.vecMat4Multiply([a.pageX,a.pageY,0,1],t);_(b[0],b[1]);}),a.addEventListener("click",function(b){var c=!1;b.target!==a&&(c=!0);var d=MatrixMath.vecMat4Multiply([b.pageX,b.pageY,0,1],t),e={targetPoint:new Point(d[0],d[1]),canvasObjectClicked:c};ja(CanvasEvent.CLICK,e);}),a.addEventListener("touchend",function(a){var b=G.processTap(a,t);b.doubleTapDetected&&_(b.touchX,b.touchY);});},this.attachGroupTransformationContainer=function(b){a.appendChild(b.getContainerDomElement()),g.push(b),b.on(GroupTransformationContainerEvent.TRANSLATE_START,function(a){h=a.container;});},this.detachGroupTransformationContainer=function(b){for(var c=0;c<g.length;c++)if(g[c]===b)return a.removeChild(b.getContainerDomElement()),g.splice(c,1),!0;return !1};var aa=function handleGroupTransformationContainerMove(a,b){var c=h;c.translateByOffset(a,b);},ba=function handleResizeStart(a){B=a.obj.getId();},ca=function handleMoveStart(a){A=a.obj.getId(),C=a.x,D=a.y,E=a.x,F=a.y;},da=function handleMove(a,b){var d=c.getObjectById(A),e=d.getTranslateHandleOffset(),f=c.snapToGrid(a+e.getX()),g=c.snapToGrid(b+e.getY());C=f,D=g,d.translate(f,g);},ea=function handleMoveEnd(a,b){var d=c.getObjectById(A),e=d.getTranslateHandleOffset(),f=c.snapToGrid(a+e.getX()),g=c.snapToGrid(b+e.getY());d.translate(f,g);},fa=function handleResize(a,b){var d=c.getObjectById(B),e=c.snapToGrid(a),f=c.snapToGrid(b),g=d.getY(),h=d.getX(),i=e-h+1,j=f-g+1;d.resize(i,j);},ga=function handleMultiObjectSelectionStart(a,b,c){return !P&&!(c!==d)&&!(null!==A)&&!(null!==B)&&(L=a,M=b,N=a,O=b,P=!0,f.style.left=`${L}px`,f.style.top=`${M}px`,f.style.width=`0px`,f.style.height=`0px`,f.style.display="block",ja(CanvasEvent.MULTIPLE_OBJECT_SELECTION_STARTED,{x:a,y:b}),!0)},ha=function handleMultiObjectSelectionEnd(){P=!1;var a=new Rectangle(Math.min(L,N),Math.min(M,O),Math.max(L,N),Math.max(M,O)),b=c.getObjectsWithinRect(a),d=c.calcBoundingRectForObjects(b);f.style.left=`${d.getLeft()}px`,f.style.top=`${d.getTop()}px`,f.style.width=`${d.getWidth()}px`,f.style.height=`${d.getHeight()}px`,f.style.display="none",ja(CanvasEvent.MULTIPLE_OBJECTS_SELECTED,{selectedObjects:b,boundingRect:d});},ia=function updateSelectionBoxEndPoint(a,b){N=a,O=b;var c=N-L,d=O-M;0<=c?f.style.width=`${c}px`:(f.style.left=`${a}px`,f.style.width=`${Math.abs(c)}px`),0<=d?f.style.height=`${d}px`:(f.style.top=`${b}px`,f.style.height=`${Math.abs(d)}px`);};this.initMultiObjectSelectionHandler=function(c){var d=b.document.createElement("div");d.classList.add("ia-selection-box"),d.style.display="none",d.style.position="absolute",d.style.left="0px",d.style.top="0px","undefined"==typeof c||0===c.length?(d.style.border="1px solid rgb(158, 158, 158)",d.style.background="rgba(153, 153, 153, 0.5)"):c.forEach(function(a){d.classList.add(a);}),f=a.appendChild(d);var g=function handleTouchSelectionStart(a){var b=ga(a.touches[0].pageX,a.touches[0].pageY,a.target);};a.addEventListener("mousedown",function(a){if(1===a.which){var b=ga(a.pageX,a.pageY,a.target);b&&a.preventDefault();}}),a.addEventListener("touchstart",function(a){K=setInterval(function(){g(a);},J);}),a.addEventListener("touchend",function(a){clearInterval(K);}),a.addEventListener("touchmove",function(a){clearInterval(K);});},this.initTransformationHandlers=function(){a.addEventListener("touchstart",function(a){m=a.touches[0].pageX,n=a.touches[0].pageY;}),a.addEventListener("touchmove",function(a){if(null!==A){var e=MatrixMath.vecMat4Multiply([a.touches[0].pageX,a.touches[0].pageY,0,1],t);da(e[0],e[1]),a.preventDefault();}if(null!==B){var f=MatrixMath.vecMat4Multiply([a.touches[0].pageX,a.touches[0].pageY,0,1],t);fa(f[0],f[1]),a.preventDefault();}if(null!==h){var b=a.touches[0].pageX-m,c=a.touches[0].pageY-n,d=MatrixMath.vecMat4Multiply([b,c,0,1],t);aa(d[0],d[1]),a.preventDefault();}P&&(ia(a.touches[0].pageX,a.e.touches[0].pageY),a.preventDefault()),m=a.touches[0].pageX,n=a.touches[0].pageY;}),a.addEventListener("mousemove",function(a){if(null!==A){var b=MatrixMath.vecMat4Multiply([a.pageX,a.pageY,0,1],t);da(b[0],b[1]);}if(null!==B){var c=MatrixMath.vecMat4Multiply([a.pageX,a.pageY,0,1],t);fa(c[0],c[1]);}if(null!==h){var d=MatrixMath.vecMat4Multiply([a.movementX,a.movementY,0,1],t);aa(d[0],d[1]);}P&&ia(a.pageX,a.pageY);}),a.addEventListener("touchend",function(a){null!==A&&(A=null),null!==B&&(B=null),null!==h&&(h.endTranslate(),h=null),P&&ha();}),a.addEventListener("mouseup",function(a){if(1===a.which){if(null!==A){var b=MatrixMath.vecMat4Multiply([a.pageX,a.pageY,0,1],t);ea(b[0],b[1]);}null!==h&&(h.endTranslate(),h=null),P&&ha(),A=null,B=null;}}),a.addEventListener("mousedown",function(a){(null!==h||null!==A||null!==B)&&(a.preventDefault(),a.stopPropagation());});};var ja=function emitEvent(a,b){for(var c,d=R.get(a)||[],e=0;e<d.length;e++)c=d[e],c(b);};this.off=function(a,b){for(var c=R.get(a)||[],d=0;d<c.length;d++)if(c[d]===b){c.splice(d,1);break}R.set(a,c);},this.on=function(a,b){var c=R.get(a)||[];c.push(b),R.set(a,c);},c.setGrid(new Grid(12,"#424242",GRID_STYLE.DOT)),c.resetTransform(),c.setTransformOrigin(0,0),c.setTransitionCss(j);}

    function CanvasObject(a,b,c,d,e,f,g,h,i){var j=this,k=1,l=[],m=1e3,n=null,o=null,p={TRANSLATE_START:"obj-translate-start",TRANSLATE:"obj-translate",RESIZE_START:"obj-resize-start",RESIZE:"obj-resize"},q=new Map,r=null,s=null,t=null,u=null;this.addNonInteractableConnectorAnchor=function(b){var c=new ConnectorAnchor(a+`-${m}`,b,f);return l.push(c),m++,c},this.addInteractableConnectorAnchor=function(b){var c=new ConnectorAnchor(a+`-${m}`,b,f);return b.addEventListener("click",function(a){f.addConnectionAnchorToSelectionStack(c);}),l.push(c),m++,c},this.getConnectorAnchorRoutingPoints=function(a){var b=[];return l.forEach(function(c){var d=c.getRoutingPoints(a);d.forEach(function(a){b.push(a);});}),b},this.getConnectorAnchors=function(){return l},this.hasConnectorAnchor=function(a){for(var b=j.getConnectorAnchors(),c=0;c<b.length;c++)if(b[c]===a)return !0;return !1},this.getTranslateHandleOffset=function(){return n?new Point(-(n.offsetLeft+.5*n.offsetWidth),-(n.offsetTop+.5*n.offsetHeight)):null},this.getId=function(){return a},this.getX=function(){return r},this.getY=function(){return s},this.translate=function(a,b){if(a!==r||b!==s){r=a,s=b,g.style.left=r+"px",g.style.top=s+"px";var c=q.get(p.TRANSLATE)||[];c.forEach(function(c){c({obj:j,x:a,y:b});});}},this.getWidth=function(){return t},this.getHeight=function(){return u},this.resize=function(a,b,c){t=a,u=b,c?c(g):(g.style.width=t+"px",g.style.height=u+"px");var d=q.get(p.RESIZE)||[];d.forEach(function(c){c({obj:j,width:a,height:b});});},this.getDomElement=function(){return g},this.handleSiblingObjectChange=function(a,b){},this.getBoundingRectange=function(){var a=r,b=s,c=a+t,d=b+u;return new Rectangle(a,b,c,d)},this.getBoundingPoints=function(){var a=new Point(j.getX(),j.getY()),b=new Point(j.getX()+j.getWidth(),j.getY()),c=new Point(j.getX(),j.getY()+j.getWidth()),d=new Point(j.getX()+j.getWidth(),j.getY()+j.getWidth());return [a,b,c,d]},this.on=function(a,b){var c=q.get(a)||[];c.push(b),q.set(a,c);},this.off=function(a,b){for(var c=q.get(a)||[],d=0;d<c.length;d++)if(c[d]===b){c.splice(d,1);break}q.set(a,c);},this.suspendTranslateInteractions=function(){z();},this.resumeTranslateInteractions=function(){A();};var v=function translateTouchStartHandler(a){n=a.target;var b=q.get(p.TRANSLATE_START)||[];b.forEach(function(b){b({obj:j,x:a.touches[0].pageX,y:a.touches[0].pageY,isTouch:!0});});},w=function translateMouseDownHandler(a){n=a.target;var b=q.get(p.TRANSLATE_START)||[];b.forEach(function(b){b({obj:j,x:a.pageX,y:a.pageY,isTouch:!1});});},z=function unbindTranslateHandleElements(){h.forEach(function(a){a.removeEventListener("touchstart",v),a.removeEventListener("mousedown",w);});},A=function bindTranslateHandleElements(){h.forEach(function(a){a.addEventListener("touchstart",v),a.addEventListener("mousedown",w);});},B=function resizeMouseDownHandler(a){if(a.which===k){o=a.target;var b=q.get(p.RESIZE_START)||[];b.forEach(function(b){b({obj:j,x:a.pageX,y:a.pageY,isTouch:!1});});}},C=function resizeTouchStartHandler(a){o=a.target;var b=q.get(p.RESIZE_START)||[];b.forEach(function(b){b({obj:j,x:a.touches[0].pageX,y:a.touches[0].pageY,isTouch:!0});});},D=function bindResizeHandleElements(){i.forEach(function(a){a.addEventListener("touchstart",C),a.addEventListener("mousedown",B);});};A(),D(),j.translate(b,c),j.resize(d,e);}

    function GroupTransformationContainer(a,b,c,d){var f=this,g=new Map,h=function calculateBoundingRect(){var c=a.calcBoundingRectForObjects(b);return d&&(c=c.getUniformlyResizedCopy(d)),c},j=h(),k=0,l=0,m=j.getLeft(),n=j.getTop(),o=[];b.forEach(function(a){var b={x:a.getX()-m,y:a.getY()-n};o.push(b);});var p=window.document.createElement("div");p.classList.add("ia-group-transformation-container"),p.style.display="none",p.style.position="absolute",p.style.left=`${m}px`,p.style.top=`${n}px`,p.style.width=`${j.getWidth()}px`,p.style.height=`${j.getHeight()}px`,0<b.length&&(p.style.display="block"),"undefined"==typeof c||0===c.length?(p.style.border="1px solid rgb(158, 158, 158)",p.style.backgroundColor="rgba(153, 153, 153, 0.5)"):c.forEach(function(a){p.classList.add(a);}),this.getContainerDomElement=function(){return p},this.getObjects=function(){return b},this.translateByOffset=function(c,d){k+=c,l+=d,m=a.snapToGrid(j.getLeft()+k),n=a.snapToGrid(j.getTop()+l),p.style.left=`${m}px`,p.style.top=`${n}px`;for(var g=0;g<b.length;g++){var e=b[g],f=o[g];e.translate(a.snapToGrid(m+f.x),a.snapToGrid(n+f.y));}},this.endTranslate=function(){k=0,l=0,j=h();},this.initTranslateInteractionHandler=function(){p.addEventListener("touchstart",q),p.addEventListener("mousedown",r);},this.on=function(a,b){var c=g.get(a)||[];c.push(b),g.set(a,c);},this.off=function(a,b){for(var c=g.get(a)||[],d=0;d<c.length;d++)if(c[d]===b){c.splice(d,1);break}g.set(a,c);};var q=function translateTouchStartHandler(a){var b=g.get(GroupTransformationContainerEvent.TRANSLATE_START)||[];b.forEach(function(b){b({container:f,x:a.touches[0].pageX,y:a.touches[0].pageY,isTouch:!0});});},r=function translateMouseDownHandler(a){var b=g.get(GroupTransformationContainerEvent.TRANSLATE_START)||[];b.forEach(function(b){b({container:f,x:a.pageX,y:a.pageY,isTouch:!1});});};}

    function Cluster(a){var b=this,c=[];this.getId=function(){return a},this.getObjectIndex=function(a){return b.getObjectIndexById(a.getId())},this.getObjectIndexById=function(a){for(var b=0;b<c.length;b++)if(c[b].getId()===a)return b;return null},this.addObject=function(a){return !(null!==b.getObjectIndex(a))&&(c.push(a),!0)},this.getObjects=function(){return c},this.getObjectIds=function(){var a=[];return c.forEach(function(b){a.push(b.getId());}),a},this.removeObjectById=function(a){var d=b.getObjectIndexById(a);return null!==d&&(c.splice(d,1),!0)},this.removeAllObjects=function(){c.length=0;};}

    function BoxClusterDetector(a){var b=this,c=function getObjectIndexFromArray(a,b){for(var c=0;c<b.length;c++)if(b[c].getId()===a.getId())return c;return -1},d=function removeObjectsFromArray(a,b){for(var d,e=0;e<a.length;e++)d=c(a[e],b),-1!==d&&b.splice(d,1);return b},e=function getClusterWithMostObjectsFromClusterMap(a){var b=0,c=null;return a.forEach(function(a,d,e){a>b&&(b=a,c=d);}),c};this.areObjectsClose=function(b,c){var d=new Rectangle(b.getX()-a,b.getY()-a,b.getX()+b.getWidth()+a,b.getY()+b.getHeight()+a),e=new Rectangle(c.getX()-a,c.getY()-a,c.getX()+c.getWidth()+a,c.getY()+c.getHeight()+a);return d.checkIntersect(e)},this.getAllObjectsCloseTo=function(a,c){for(var d=[],e=0;e<c.length;e++)a.getId()!==c[e].getId()&&b.areObjectsClose(a,c[e])&&d.push(c[e]);return d},this.getClusterObjectsFromSeed=function(a,c,e){var f=b.getAllObjectsCloseTo(a,c);return 0===f.length?[]:void(d(f.concat([a]),c),f.forEach(function(a){e.push(a),b.getClusterObjectsFromSeed(a,c,e);}))},this.findIntersectingClustersForObjects=function(a,b){var c=new Map;return b.forEach(function(b){for(var d=b.getObjects(),e=0;e<d.length;e++)for(var f=0;f<a.length;f++)if(d[e].getId()===a[f].getId())if(c.has(b)){var g=c.get(b);c.set(b,g+1);}else c.set(b,1);}),c},this.removeObjectFromClusters=function(a,b){b.forEach(function(b){b.removeObjectById(a.getId());});},this.computeClusters=function(a,c,f){for(var g=c.map(function(a){return a}),h=a.map(function(a){return a});0<h.length;){var i=h.pop(),j=[i];if(b.getClusterObjectsFromSeed(i,h,j),1<j.length){var l=b.findIntersectingClustersForObjects(j,g);0===l.size?function(){var a=new Cluster(f());j.forEach(function(b){a.addObject(b);}),g.push(a);}():function(){var a=e(l);a.removeAllObjects(),j.forEach(function(c){b.removeObjectFromClusters(c,g),a.addObject(c);});}(),d(j,h);}else b.removeObjectFromClusters(i,g);}var k=g.filter(function(a){return !!(2<=a.getObjects().length)});return k};}

    exports.BoxClusterDetector = BoxClusterDetector;
    exports.Canvas = Canvas;
    exports.CanvasEvent = CanvasEvent;
    exports.CanvasObject = CanvasObject;
    exports.Cluster = Cluster;
    exports.Connector = Connector;
    exports.ConnectorAnchor = ConnectorAnchor;
    exports.ConnectorEvent = ConnectorEvent;
    exports.Dimensions = Dimensions;
    exports.GRID_STYLE = GRID_STYLE;
    exports.Grid = Grid;
    exports.GroupTransformationContainer = GroupTransformationContainer;
    exports.GroupTransformationContainerEvent = GroupTransformationContainerEvent;
    exports.LINE_INTERSECTION_TYPE = LINE_INTERSECTION_TYPE;
    exports.Line = Line;
    exports.LineIntersection = LineIntersection;
    exports.MatrixMath = MatrixMath;
    exports.Point = Point;
    exports.PointVisibilityMap = PointVisibilityMap;
    exports.Rectangle = Rectangle;
    exports.SvgPathBuilder = SvgPathBuilder;

    return exports;

}({}));
//# sourceMappingURL=graphpaper.min.js.map
