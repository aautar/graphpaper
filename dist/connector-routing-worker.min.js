(function(){"use strict";function a(m,n){this.__x=m,this.__y=n}function c(m,n){this.getType=function(){return m},this.getIntersectionPoint=function(){return n}}function d(m,n){if("undefined"==typeof m||null===m)throw"Line missing _startPoint";if("undefined"==typeof n||null===n)throw"Line missing _endPoint";this.__startPoint=m,this.__endPoint=n}function e(m){const n=this,o=[];this.push=function(q){for(let r=0;r<o.length;r++)if(q.isEqual(o[r]))return!1;return o.push(q),!0},this.pushPointSet=function(q){const r=q.toArray();for(let s=0;s<r.length;s++)n.push(r[s])},this.findPointClosestTo=function(q){var r=null,s=Number.MAX_SAFE_INTEGER;return o.forEach(function(t){const u=new d(q,t);u.getLength()<s&&(r=t,s=u.getLength())}),r},this.findDistanceToPointClosestTo=function(q){var r=Number.MAX_SAFE_INTEGER;return o.forEach(function(s){const t=new d(q,s);t.getLength()<r&&(r=t.getLength())}),r},this.findPointsCloseTo=function(q,r){const s=new e;return o.forEach(function(t){const u=new d(q,t);u.getLength()<=r&&s.push(t)}),s},this.toArray=function(){return o},this.toFloat64Array=function(){const q=new Float64Array(2*o.length);for(let r=0;r<o.length;r++)q[0+2*r]=o[r].getX(),q[1+2*r]=o[r].getY();return q};this.count=function(){return o.length},m&&Array.isArray(m)?m.forEach(n.push):m&&"[object Float64Array]"===Object.prototype.toString.call(m)&&function(q){o.length=0;for(let r=0;r<q.length;r+=2)o.push(new a(q[r],q[r+1]))}(m)}function f(m){const n=this,o=[];this.push=function(q){var r=!1;return(o.forEach(function(s){q.isEqual(s)&&(r=!0)}),!r)&&(o.push(q),!0)},this.toArray=function(){return o},this.count=function(){return o.length},this.toFloat64Array=function(){const q=new Float64Array(4*o.length);for(let r=0;r<o.length;r++)q[0+4*r]=o[r].getStartPoint().getX(),q[1+4*r]=o[r].getStartPoint().getY(),q[2+4*r]=o[r].getEndPoint().getX(),q[3+4*r]=o[r].getEndPoint().getY();return q};m&&Array.isArray(m)?m.forEach(n.push):m&&"[object Float64Array]"===Object.prototype.toString.call(m)&&function(q){o.length=0;for(let r=0;r<q.length;r+=4)o.push(new d(new a(q[r],q[r+1]),new a(q[r+2],q[r+3])))}(m)}function g(m,n){const o=this,p=n.toArray(),q=new Map,r=function(v){for(let w=0;w<p.length;w++){const x=p[w].computeIntersectionType(v);if(x===h.LINESEG)return!0}return!1},t=function(v){var w=Number.MAX_SAFE_INTEGER,x=null;for(var[y,z]of v.entries())z<w&&(x=y,w=z);return null===x?null:{cost:w,point:x}},u=function(v,w,x,y){const z=new Map;var A=q.get(x);A=A.filter(function(C){for(let D=0;D<w.length;D++)if(C.isEqual(w[D]))return!1;return!0}),A.forEach(function(C){const D=new d(x,C).getLength()+v,E=new d(C,y).getLength();z.set(C,D+E)});const B=t(z);return null===B?null:B};this.findPointClosestTo=function(v){var w=null,x=Number.MAX_SAFE_INTEGER;return q.forEach(function(y,z){const A=new d(v,z);A.getLength()<x&&(w=z,x=A.getLength())}),w},this.findVisiblePointClosestTo=function(v){var w=null,x=Number.MAX_SAFE_INTEGER;return q.forEach(function(y,z){const A=new d(v,z);!r(A)&&A.getLength()<x&&(w=z,x=A.getLength())}),w},this.computeRoute=function(v,w){if(null===v||null===w)return new e;const x=o.findVisiblePointClosestTo(v);if(null===x)return new e;var y=0;const z=[x];for(var A=x;;){const B=u(y,z,A,w);if(null===B){const C=new d(z[z.length-1],w);if(r(C))return new e;break}if(y+=new d(A,B.point).getLength(),z.push(B.point),A=B.point,1>new d(A,w).getLength())break}return new e(z)},function(){const v=m.toArray();for(let w=0;w<v.length;w++)q.set(v[w],[]);for(let w=0;w<v.length;w++)for(let x=w+1;x<v.length;x++){const y=new d(v[w],v[x]);if(!r(y)){const z=q.get(v[w]);z.push(v[x]),q.set(v[w],z);const A=q.get(v[x]);A.push(v[w]),q.set(v[x],A)}}}()}a.prototype.getX=function(){return this.__x},a.prototype.getY=function(){return this.__y},a.prototype.isEqual=function(m){return this.__x===m.getX()&&this.__y===m.getY()},a.prototype.getCartesianPoint=function(m,n){return new a(this.__x-0.5*m,-this.__y+0.5*n)},a.prototype.toString=function(){return this.__x+" "+this.__y};const h=Object.freeze({PARALLEL:"parallel",COINCIDENT:"coincident",LINE:"line",LINESEG:"lineseg"});d.prototype.getStartPoint=function(){return this.__startPoint},d.prototype.getEndPoint=function(){return this.__endPoint},d.prototype.isEqual=function(m){return this.getStartPoint().isEqual(m.getStartPoint())&&this.getEndPoint().isEqual(m.getEndPoint())},d.prototype.getLength=function(){return Math.sqrt(Math.pow(this.__endPoint.getX()-this.__startPoint.getX(),2)+Math.pow(this.__endPoint.getY()-this.__startPoint.getY(),2))},d.prototype.computeIntersectionType=function(m){const n=this.__startPoint.getX(),o=this.__startPoint.getY(),p=this.__endPoint.getX(),q=this.__endPoint.getY(),r=m.getStartPoint().getX(),s=m.getStartPoint().getY(),t=m.getEndPoint().getX(),u=m.getEndPoint().getY(),v=(u-s)*(p-n)-(t-r)*(q-o),w=(t-r)*(o-s)-(u-s)*(n-r),x=(p-n)*(o-s)-(q-o)*(n-r);if(0==v)return 0==v&&0==w&&0==x?h.COINCIDENT:h.PARALLEL;const y=w/v,z=x/v;return 1<y||0>y||1<z||0>z?h.LINE:h.LINESEG},d.prototype.computeIntersection=function(m){const n=this.__startPoint.getX(),o=this.__startPoint.getY(),p=this.__endPoint.getX(),q=this.__endPoint.getY(),r=m.getStartPoint().getX(),s=m.getStartPoint().getY(),t=m.getEndPoint().getX(),u=m.getEndPoint().getY(),v=(u-s)*(p-n)-(t-r)*(q-o),w=(t-r)*(o-s)-(u-s)*(n-r),x=(p-n)*(o-s)-(q-o)*(n-r);if(0==v)return 0==v&&0==w&&0==x?new c(h.COINCIDENT,null):new c(h.PARALLEL,null);const y=w/v,z=x/v,A=this.__startPoint.getX()+y*(this.__endPoint.getX()-this.__startPoint.getX()),B=this.__startPoint.getY()+y*(this.__endPoint.getY()-this.__startPoint.getY());return 1<y||0>y||1<z||0>z?new c(h.LINE,new a(A,B)):new c(h.LINESEG,new a(A,B))};const k=function(m){return"L"+m.getX()+" "+m.getY()},l=function(m,n,o){const p=m.anchor_start_centroid.split(" "),q=m.anchor_end_centroid.split(" "),r=new a(p[0],p[1]),s=new a(q[0],q[1]),t=n.findDistanceToPointClosestTo(r),u=n.findPointsCloseTo(r,t).findPointClosestTo(s),v=n.findPointsCloseTo(s,t).findPointClosestTo(r),w=o.computeRoute(u,v),x=w.toArray(),y=[];x.forEach(function(B){y.push(k(B))}),y.push(k(s));const z=r.getX()+" "+r.getY(),A="M"+z+y.join(" ");return A};onmessage=function(m){const n={overallTime:null},o=new Date,p=m.data.gridSize,q=m.data.connectorDescriptors,r=m.data.routingPoints,s=new Float64Array(r),t=new e(s),u=m.data.boundaryLines,v=new Float64Array(u),w=new f(v),x=m.data.routingPointsAroundAnchor,y=new Float64Array(x),z=new e(y),A=new g(t,w);q.forEach(function(B){B.svgPath=l(B,z,A)}),n.overallTime=new Date-o,postMessage({connectorDescriptors:q,metrics:n})}})();