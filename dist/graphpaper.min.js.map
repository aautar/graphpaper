{"version":3,"file":"graphpaper.min.js","sources":["../src/MatrixMath.js","../src/Point.js","../src/LineIntersection.js","../src/Line.js","../src/SvgPathBuilder.js","../src/Dimensions.js","../src/Rectangle.js","../src/GroupTransformationContainerEvent.js","../src/EntityEvent.js","../src/PointSet.js","../src/AccessibleRoutingPointsFinder.js","../src/SheetEvent.js","../src/ConnectorAnchor.js","../src/ConnectorAnchorFinder/ClosestPairFinder.js","../src/DebugMetricsPanel/DebugMetricsPanel.js","../src/DoubleTapDetector.js","../src/LineSet.js","../src/ConnectorEvent.js","../src/ConnectorRoutingAlgorithm.js","../src/Connector.js","../src/Grid.js","../src/Workers/ConnectorRoutingWorker.string.js","../src/Sheet.js","../src/Entity.js","../src/GroupTransformationContainer.js","../src/Cluster.js","../src/BoxClusterDetector.js","../src/PointVisibilityMapRouteOptimizer.js","../src/PointVisibilityMap.js"],"sourcesContent":["const MatrixMath = {\r\n\r\n    mat4Multiply: function(_a, _b) {\r\n\r\n        const result = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n        for(let i=0; i<4; i++) {\r\n            for(let j=0; j<4; j++) {\r\n\r\n                var sum = 0;\r\n                for(let k=0; k<4; k++) {\r\n                    sum += _a[k + 4*i] * _b[j + 4*k];\r\n                }\r\n\r\n                result[j + 4*i] = sum;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    vecMat4Multiply: function(_v, _m) {\r\n        const result = [0, 0, 0, 0];\r\n        for(let vi=0; vi<4; vi++) {\r\n            result[vi] = \r\n                (_v[0] * _m[(vi*4) + 0]) + \r\n                (_v[1] * _m[(vi*4) + 1]) + \r\n                (_v[2] * _m[(vi*4) + 2]) + \r\n                (_v[3] * _m[(vi*4) + 3]);\r\n        }\r\n\r\n        return result;\r\n    }\r\n};\r\n\r\nexport { MatrixMath };\r\n","/**\r\n * \r\n * @param {Number} _x\r\n * @param {Number} _y\r\n */\r\nfunction Point(_x, _y) {\r\n    this.__x = _x;\r\n    this.__y = _y;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */     \r\nPoint.prototype.getX = function() {\r\n    return this.__x;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */     \r\nPoint.prototype.getY = function() {\r\n    return this.__y;\r\n};\r\n\r\n/**\r\n * @param {Point} _otherPoint\r\n * @returns {Boolean}\r\n */\r\nPoint.prototype.isEqual = function(_otherPoint) {\r\n    if(this.__x === _otherPoint.getX() && this.__y === _otherPoint.getY()) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * @returns {Point}\r\n */\r\nPoint.prototype.getCartesianPoint = function(_sheetWidth, _sheetHeight) {\r\n    return new Point(\r\n        this.__x - (_sheetWidth * 0.5),\r\n        -this.__y + (_sheetHeight * 0.5)\r\n    );\r\n};\r\n\r\n/**\r\n * @returns {String}\r\n */\r\nPoint.prototype.toString = function() {\r\n    return this.__x + \" \" + this.__y;\r\n};\r\n\r\n/**\r\n * @returns {Number[]}\r\n */\r\nPoint.prototype.toArray = function() {\r\n    return [this.__x, this.__y];\r\n};\r\n\r\n/**\r\n * @param {Number[]} _arr\r\n * @returns {Point}\r\n */\r\nPoint.fromArray = function(_arr) {\r\n    return new Point(_arr[0], _arr[1]);\r\n};\r\n\r\nexport { Point };\r\n","import  {Point} from './Point';\r\n\r\nconst LINE_INTERSECTION_TYPE = Object.freeze({\r\n\tPARALLEL: \"parallel\",\t\t// no intersection, lines are parallel\r\n    COINCIDENT: \"coincident\",\t// no intersection, lines are coincident\r\n\tLINE: \"line\",\t\t\t\t// the lines intersect, but the intersection point is beyond the bounds of the line segments\r\n\tLINESEG: \"lineseg\",\t\t\t// the lines intersect, and the intersection point is within the bounds of the line segments\r\n});\r\n\r\n/**\r\n * \r\n * @param {LINE_INTERSECTION_TYPE} _type \r\n * @param {Point} _intersectionPoint \r\n */\r\nfunction LineIntersection(_type, _intersectionPoint) {\r\n    this.__type = _type;\r\n    this.__intersectionPoint = _intersectionPoint;\r\n};\r\n\r\n\r\n/**\r\n * @returns {LINE_INTERSECTION_TYPE}\r\n */\r\nLineIntersection.prototype.getType = function() {\r\n    return this.__type;\r\n};\r\n\r\n/**\r\n * @returns {Point|null}\r\n */\r\nLineIntersection.prototype.getIntersectionPoint = function() {\r\n    return this.__intersectionPoint;\r\n};\r\n\r\nexport {LINE_INTERSECTION_TYPE, LineIntersection};\r\n","import  {Point} from './Point';\r\nimport  {LINE_INTERSECTION_TYPE, LineIntersection} from './LineIntersection';\r\n\r\n/**\r\n * \r\n * @param {Point} _startPoint\r\n * @param {Point} _endPoint\r\n */\r\nfunction Line(_startPoint, _endPoint) {   \r\n\r\n    if(typeof _startPoint === 'undefined' || _startPoint === null) {\r\n        throw \"Line missing _startPoint\";\r\n    }\r\n\r\n    if(typeof _endPoint === 'undefined' || _endPoint === null) {\r\n        throw \"Line missing _endPoint\";\r\n    }\r\n\r\n    this.__startPoint = _startPoint;\r\n    this.__endPoint = _endPoint;\r\n};\r\n\r\n\r\n/**\r\n * @returns {Point}\r\n */       \r\nLine.prototype.getStartPoint = function() {\r\n    return this.__startPoint;\r\n};\r\n\r\n/**\r\n * @returns {Point}\r\n */       \r\nLine.prototype.getEndPoint = function() {\r\n    return this.__endPoint;\r\n};\r\n\r\n/**\r\n * @param {Line} _otherLine\r\n * @returns {Boolean}\r\n */\r\nLine.prototype.isEqual = function(_otherLine) {\r\n    if(this.getStartPoint().isEqual(_otherLine.getStartPoint()) && this.getEndPoint().isEqual(_otherLine.getEndPoint())) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */\r\nLine.prototype.getLength = function() {\r\n    return Math.sqrt(\r\n        Math.pow(this.__endPoint.getX() - this.__startPoint.getX(), 2) + Math.pow(this.__endPoint.getY() - this.__startPoint.getY(), 2)\r\n    );\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */\r\nLine.prototype.getMinX = function() {\r\n    return Math.min(this.getStartPoint().getX(), this.getEndPoint().getX());\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */\r\nLine.prototype.getMaxX = function() {\r\n    return Math.max(this.getStartPoint().getX(), this.getEndPoint().getX());\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */\r\nLine.prototype.getMinY = function() {\r\n    return Math.min(this.getStartPoint().getY(), this.getEndPoint().getY());\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */\r\nLine.prototype.getMaxY = function() {\r\n    return Math.max(this.getStartPoint().getY(), this.getEndPoint().getY());\r\n};\r\n\r\n/**\r\n * Calculate unit length direction vector\r\n * \r\n * @returns {Point}\r\n */\r\nLine.prototype.getDirection = function() {\r\n    const dx = this.__endPoint.getX() - this.__startPoint.getX();\r\n    const dy = this.__endPoint.getY() - this.__startPoint.getY();\r\n\r\n    const len = Math.sqrt(dx*dx + dy*dy);\r\n\r\n    return new Point(       \r\n        dx / len,\r\n        dy / len\r\n    );    \r\n};\r\n\r\n/**\r\n * Create a Line shorted at the start and end by the specified amounts\r\n * \r\n * @returns {Line}\r\n */\r\nLine.prototype.createShortenedLine = function(startReduceByPx, endReduceByPx) {\r\n    const dx = this.__endPoint.getX() - this.__startPoint.getX();\r\n    const dy = this.__endPoint.getY() - this.__startPoint.getY();    \r\n    const dir = this.getDirection();\r\n\r\n    return new Line(\r\n        new Point(\r\n            this.__startPoint.getX() + (startReduceByPx * dir.getX()), \r\n            this.__startPoint.getY() + (startReduceByPx * dir.getY())\r\n        ),\r\n        new Point(\r\n            (this.__startPoint.getX() + dx) - (endReduceByPx * dir.getX()), \r\n            (this.__startPoint.getY() + dy) - (endReduceByPx * dir.getY())\r\n        )\r\n    );\r\n};\r\n\r\n/**\r\n * @param {Line} _otherLine\r\n * @returns {LINE_INTERSECTION_TYPE}\r\n */\r\nLine.prototype.computeIntersectionType = function(_otherLine) {\r\n    const thisLineStartPointX = this.__startPoint.getX();\r\n    const thisLineStartPointY = this.__startPoint.getY();\r\n    const thisLineEndPointX = this.__endPoint.getX();\r\n    const thisLineEndPointY = this.__endPoint.getY();        \r\n    const otherLineStartPointX = _otherLine.getStartPoint().getX();\r\n    const otherLineStartPointY = _otherLine.getStartPoint().getY();\r\n    const otherLineEndPointX = _otherLine.getEndPoint().getX();\r\n    const otherLineEndPointY = _otherLine.getEndPoint().getY();\r\n\r\n    const paramDenom = (otherLineEndPointY-otherLineStartPointY)*(thisLineEndPointX-thisLineStartPointX) - (otherLineEndPointX-otherLineStartPointX)*(thisLineEndPointY-thisLineStartPointY);\r\n    const paramANumer = (otherLineEndPointX-otherLineStartPointX)*(thisLineStartPointY-otherLineStartPointY) - (otherLineEndPointY - otherLineStartPointY)*(thisLineStartPointX-otherLineStartPointX);\r\n    const paramBNumer = (thisLineEndPointX-thisLineStartPointX)*(thisLineStartPointY-otherLineStartPointY) - (thisLineEndPointY-thisLineStartPointY)*(thisLineStartPointX-otherLineStartPointX);\r\n\r\n    if(paramDenom == 0) {\r\n        if(paramDenom == 0 && paramANumer == 0 && paramBNumer==0)\r\n            return LINE_INTERSECTION_TYPE.COINCIDENT;\r\n        else\r\n            return LINE_INTERSECTION_TYPE.PARALLEL;\r\n    }\r\n\r\n    const paramA = paramANumer / paramDenom;\r\n    const paramB = paramBNumer / paramDenom;\r\n    \r\n    if(paramA > 1.0 || paramA < 0.0 || paramB > 1.0 || paramB < 0.0) {\r\n        return LINE_INTERSECTION_TYPE.LINE;\r\n    } else {\r\n        return LINE_INTERSECTION_TYPE.LINESEG;\r\n    }\r\n};\r\n    \r\n/**\r\n * @param {Line} _otherLine\r\n * @returns {LINE_INTERSECTION_RESULT}\r\n */\r\nLine.prototype.computeIntersection = function(_otherLine) {\r\n\r\n    const thisLineStartPointX = this.__startPoint.getX();\r\n    const thisLineStartPointY = this.__startPoint.getY();\r\n    const thisLineEndPointX = this.__endPoint.getX();\r\n    const thisLineEndPointY = this.__endPoint.getY();        \r\n    const otherLineStartPointX = _otherLine.getStartPoint().getX();\r\n    const otherLineStartPointY = _otherLine.getStartPoint().getY();\r\n    const otherLineEndPointX = _otherLine.getEndPoint().getX();\r\n    const otherLineEndPointY = _otherLine.getEndPoint().getY();\r\n\r\n    const paramDenom = (otherLineEndPointY-otherLineStartPointY)*(thisLineEndPointX-thisLineStartPointX) - (otherLineEndPointX-otherLineStartPointX)*(thisLineEndPointY-thisLineStartPointY);\r\n    const paramANumer = (otherLineEndPointX-otherLineStartPointX)*(thisLineStartPointY-otherLineStartPointY) - (otherLineEndPointY - otherLineStartPointY)*(thisLineStartPointX-otherLineStartPointX);\r\n    const paramBNumer = (thisLineEndPointX-thisLineStartPointX)*(thisLineStartPointY-otherLineStartPointY) - (thisLineEndPointY-thisLineStartPointY)*(thisLineStartPointX-otherLineStartPointX);\r\n\r\n    if(paramDenom == 0) {\r\n        if(paramDenom == 0 && paramANumer == 0 && paramBNumer==0)\r\n            return new LineIntersection(LINE_INTERSECTION_TYPE.COINCIDENT, null);\r\n        else\r\n            return new LineIntersection(LINE_INTERSECTION_TYPE.PARALLEL, null);\r\n    }\r\n\r\n    const paramA = paramANumer / paramDenom;\r\n    const paramB = paramBNumer / paramDenom;\r\n\r\n    const xIntersect = this.__startPoint.getX() + paramA*(this.__endPoint.getX()-this.__startPoint.getX());\r\n    const yIntersect = this.__startPoint.getY() + paramA*(this.__endPoint.getY()-this.__startPoint.getY());\r\n    \r\n    if(paramA > 1.0 || paramA < 0.0 || paramB > 1.0 || paramB < 0.0) {\r\n        return new LineIntersection(LINE_INTERSECTION_TYPE.LINE, new Point(xIntersect, yIntersect));\r\n    } else {\r\n        return new LineIntersection(LINE_INTERSECTION_TYPE.LINESEG, new Point(xIntersect, yIntersect));\r\n    }\r\n};\r\n\r\nexport { Line };\r\n","import { Line } from \"./Line\";\r\n\r\nconst SvgPathBuilder = {\r\n\r\n    /**\r\n     * \r\n     * @param {Point} _pt \r\n     * @returns {String}\r\n     */\r\n    pointToLineTo: function(_pt, _ptIndex) {\r\n        if(_ptIndex === 0) {\r\n            return \"M\" + _pt.getX() + \" \" + _pt.getY();\r\n        }\r\n\r\n        return \"L\" + _pt.getX() + \" \" + _pt.getY();\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {Point[]} _points \r\n     * @param {Number} _curvaturePx \r\n     * @returns {Point[]}\r\n     */\r\n    pointTripletToTesselatedCurvePoints(_points, _curvaturePx) {\r\n        if(_points.length !== 3) {\r\n            throw new Error(\"_points must be array of exactly 3 points\");\r\n        }\r\n\r\n        const controlPoint = _points[1];\r\n\r\n        const lineA = new Line(_points[0], _points[1]);\r\n        const lineB = new Line(_points[1], _points[2]);\r\n\r\n        const lineAShortened = lineA.createShortenedLine(0, _curvaturePx * 0.5);\r\n        const lineBShortened = lineB.createShortenedLine(_curvaturePx * 0.5, 0);\r\n\r\n        return [\r\n            lineAShortened.getStartPoint(),\r\n            lineAShortened.getEndPoint(),\r\n            lineBShortened.getStartPoint(),\r\n            lineBShortened.getEndPoint(),\r\n        ];\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {Point[]} _points\r\n     * @param {Number} _curvaturePx\r\n     * @returns {String}\r\n     */\r\n    pointsToPath: function(_points, _curvaturePx) {\r\n        _curvaturePx = _curvaturePx || 0.0;\r\n\r\n        const svgPathParts = [];\r\n        let ptIdx = 0; // minify bug if this is put within the if(_curvaturePx... block\r\n\r\n        if(_curvaturePx > 0.0) {\r\n            while(_points.length >= 3) {\r\n                const ptA = _points.shift();\r\n                const ptB = _points.shift();\r\n                const ptC = _points.shift();\r\n\r\n                const newPts = SvgPathBuilder.pointTripletToTesselatedCurvePoints(\r\n                    [\r\n                        ptA,\r\n                        ptB,\r\n                        ptC,\r\n                    ],\r\n                    _curvaturePx\r\n                );                \r\n\r\n                _points.unshift(newPts[3]);\r\n                _points.unshift(newPts[2]);\r\n\r\n                for(let j=0; j<newPts.length-2; j++) {\r\n                    svgPathParts.push(SvgPathBuilder.pointToLineTo(newPts[j], ptIdx++));\r\n                }\r\n            }\r\n\r\n            while(_points.length > 0) {\r\n                const pt = _points.shift();\r\n                svgPathParts.push(SvgPathBuilder.pointToLineTo(pt, ptIdx++));\r\n            }\r\n\r\n        } else {\r\n            for(let i=0; i<_points.length; i++) {\r\n                const p = _points[i];\r\n                svgPathParts.push(SvgPathBuilder.pointToLineTo(p, i));\r\n            }\r\n        }\r\n\r\n        return svgPathParts.join(\" \");        \r\n    },\r\n\r\n};\r\n\r\nexport { SvgPathBuilder };\r\n","/**\r\n * \r\n * @param {Number} _width\r\n * @param {Number} _height\r\n */\r\nfunction Dimensions(_width, _height) {\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */       \r\n    this.getWidth = function() {\r\n        return _width;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */       \r\n    this.getHeight = function() {\r\n        return _height;\r\n    };\r\n};\r\n\r\nexport { Dimensions };\r\n","import {Point} from './Point';\r\nimport {Line} from './Line';\r\nimport  {LINE_INTERSECTION_TYPE, LineIntersection} from './LineIntersection';\r\n\r\n/**\r\n * \r\n * @param {Number} _left\r\n * @param {Number} _top\r\n * @param {Number} _right\r\n * @param {Number} _bottom\r\n */\r\nfunction Rectangle(_left, _top, _right, _bottom)  {\r\n    this.__left = _left;\r\n    this.__top = _top;\r\n    this.__right = _right;\r\n    this.__bottom = _bottom;    \r\n};\r\n\r\n\r\n/**\r\n * @returns {Number}\r\n */\r\nRectangle.prototype.getLeft = function() {\r\n    return this.__left;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */\r\nRectangle.prototype.getTop = function() {\r\n    return this.__top;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */\r\nRectangle.prototype.getRight = function() {\r\n    return this.__right;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */\r\nRectangle.prototype.getBottom = function() {\r\n    return this.__bottom;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */    \r\nRectangle.prototype.getWidth = function() {\r\n    return this.__right - this.__left;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */    \r\nRectangle.prototype.getHeight = function() {\r\n    return this.__bottom - this.__top;\r\n};\r\n\r\n/**\r\n * @returns {Point[]}\r\n */\r\nRectangle.prototype.getPoints = function() {\r\n    return [\r\n        new Point(this.__left, this.__top),\r\n        new Point(this.__right, this.__top),\r\n        new Point(this.__right, this.__bottom),\r\n        new Point(this.__left, this.__bottom)\r\n    ];\r\n};\r\n\r\n/**\r\n * @returns {Line[]}\r\n */\r\nRectangle.prototype.getLines = function() {\r\n    return [\r\n        new Line(new Point(this.__left, this.__top), new Point(this.__right, this.__top)),\r\n        new Line(new Point(this.__right, this.__top), new Point(this.__right, this.__bottom)),\r\n        new Line(new Point(this.__right, this.__bottom), new Point(this.__left, this.__bottom)),\r\n        new Line(new Point(this.__left, this.__bottom), new Point(this.__left, this.__top))\r\n    ];\r\n};\r\n\r\n/**\r\n * @param {Number} _resizeByPx\r\n * @returns {Rectangle}\r\n */\r\nRectangle.prototype.getUniformlyResizedCopy = function(_resizeByPx) {\r\n    return new Rectangle(\r\n        this.__left - _resizeByPx, \r\n        this.__top - _resizeByPx, \r\n        this.__right + _resizeByPx, \r\n        this.__bottom + _resizeByPx\r\n    );\r\n};\r\n\r\n/**\r\n * Scale the bounding box by _gridSize, and return the points comprising the box\r\n * \r\n * @param {Number} _gridSize\r\n * @returns {Point[]}\r\n */\r\nRectangle.prototype.getPointsScaledToGrid = function(_gridSize) {\r\n\r\n    const centroid = new Point(\r\n        this.__left + ((this.__right-this.__left)*0.5),\r\n        this.__top + ((this.__bottom-this.__top)*0.5)\r\n    );\r\n\r\n    const scaleDx = ((this.__right - centroid.getX()) + _gridSize) / (this.__right - centroid.getX());\r\n    const scaleDy = ((this.__bottom - centroid.getY()) + _gridSize) / (this.__bottom - centroid.getY());        \r\n    \r\n    const scaledPoints = [\r\n        new Point(\r\n            ((this.__left - centroid.getX())*scaleDx) + centroid.getX(), \r\n            ((this.__top - centroid.getY())*scaleDy) + centroid.getY()\r\n        ),\r\n\r\n        new Point(\r\n            ((this.__right - centroid.getX())*scaleDx) + centroid.getX(), \r\n            ((this.__top - centroid.getY())*scaleDy) + centroid.getY()\r\n        ),\r\n\r\n        new Point(\r\n            ((this.__right - centroid.getX())*scaleDx) + centroid.getX(), \r\n            ((this.__bottom - centroid.getY())*scaleDy) + centroid.getY()\r\n        ),\r\n\r\n        new Point(\r\n            ((this.__left - centroid.getX())*scaleDx) + centroid.getX(), \r\n            ((this.__bottom - centroid.getY())*scaleDy) + centroid.getY()\r\n        )\r\n    ];\r\n\r\n    return scaledPoints;\r\n};    \r\n\r\n/**\r\n * \r\n * @param {Rectangle} _otherRectangle\r\n * @returns {Boolean}\r\n */\r\nRectangle.prototype.checkIntersect = function(_otherRectangle) {\r\n    if(this.__bottom < _otherRectangle.getTop()) {\r\n        return false;\r\n    }\r\n\r\n    if(this.__top > _otherRectangle.getBottom()) {\r\n        return false;\r\n    }\r\n\r\n    if(this.__right < _otherRectangle.getLeft()) {\r\n        return false;\r\n    }\r\n\r\n    if(this.__left > _otherRectangle.getRight()) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n\r\n/**\r\n * \r\n * @param {Point} _point \r\n */\r\nRectangle.prototype.checkIsPointWithin = function(_point) {\r\n    if(_point.getX() >= this.__left && _point.getX() <= this.__right && _point.getY() >= this.__top && _point.getY() <= this.__bottom) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * \r\n * @param {Rectangle} _otherRectangle\r\n * @returns {Boolean}\r\n */\r\nRectangle.prototype.checkIsWithin = function(_otherRectangle) {\r\n    if( this.__bottom <= _otherRectangle.getBottom() &&\r\n        this.__top >= _otherRectangle.getTop() &&\r\n        this.__right <= _otherRectangle.getRight() &&\r\n        this.__left >= _otherRectangle.getLeft()\r\n    ) {\r\n\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n\r\nexport { Rectangle }\r\n","const GroupTransformationContainerEvent = Object.freeze({\r\n    TRANSLATE_START: 'group-transformation-container-translate-start'\r\n});\r\n\r\nexport { GroupTransformationContainerEvent };\r\n","const EntityEvent = Object.freeze({\r\n    TRANSLATE_START: 'obj-translate-start',\r\n    TRANSLATE: 'obj-translate',\r\n    RESIZE_START: 'obj-resize-start',\r\n    RESIZE: 'obj-resize'\r\n});\r\n\r\n\r\nexport { EntityEvent };\r\n","import  {Point} from './Point';\r\nimport  {Line} from './Line';\r\n\r\n/**\r\n * Unique collection of Point objects\r\n * \r\n * @param {Point[]|Float64Array|undefined} _pointsInput\r\n */\r\nfunction PointSet(_pointsInput) {\r\n\r\n    const self = this;\r\n\r\n    /**\r\n     * @type {Point[]}\r\n     */\r\n    const points = [];\r\n\r\n    /**\r\n     * @param {Point} _newPoint\r\n     */\r\n    this.push = function(_newPoint) {\r\n        for(let i=0; i<points.length; i++) {\r\n            if(_newPoint.isEqual(points[i])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        points.push(_newPoint);\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * @param {PointSet} _ps\r\n     */\r\n    this.pushPointSet = function(_ps) {\r\n        const possibleNewPoints = _ps.toArray();\r\n        for(let i=0; i<possibleNewPoints.length; i++) {\r\n            self.push(possibleNewPoints[i]);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Point} _point \r\n     * @returns {Point}\r\n     */\r\n    this.findPointClosestTo = function(_point) {\r\n        var resultPoint = null;\r\n        var currentMinLength = Number.MAX_SAFE_INTEGER;\r\n\r\n        points.forEach(function(_pt) {\r\n            const lineToPt = new Line(_point, _pt);\r\n            if(lineToPt.getLength() < currentMinLength) {\r\n                resultPoint = _pt;\r\n                currentMinLength = lineToPt.getLength();\r\n            }\r\n        });\r\n        \r\n        return resultPoint;        \r\n    };\r\n\r\n    this.findDistanceToPointClosestTo = function(_point) {\r\n        var currentMinLength = Number.MAX_SAFE_INTEGER;\r\n\r\n        points.forEach(function(_pt) {\r\n            const lineToPt = new Line(_point, _pt);\r\n            if(lineToPt.getLength() < currentMinLength) {\r\n                currentMinLength = lineToPt.getLength();\r\n            }\r\n        });\r\n        \r\n        return currentMinLength;        \r\n    };    \r\n\r\n    /**\r\n     * \r\n     * @param {Point} _point \r\n     * @returns {PointSet}\r\n     */\r\n    this.findPointsCloseTo = function(_point, _radius) {\r\n        const resultSet = new PointSet();\r\n\r\n        points.forEach(function(_pt) {\r\n            const lineToPt = new Line(_point, _pt);\r\n            if(lineToPt.getLength() <= _radius) {\r\n                resultSet.push(_pt);\r\n            }\r\n        });\r\n        \r\n        return resultSet;        \r\n    };    \r\n\r\n    /**\r\n     * @returns {Point[]}\r\n     */\r\n    this.toArray = function() {\r\n        return points;\r\n    };\r\n\r\n    /**\r\n     * @returns {Float64Array}\r\n     */\r\n    this.toFloat64Array = function() {\r\n\r\n        const result = new Float64Array(points.length * 2);\r\n        for(let i=0; i<points.length; i++) {\r\n            result[0 + (i*2)] = points[i].getX();\r\n            result[1 + (i*2)] = points[i].getY();\r\n        }\r\n\r\n        return result;\r\n    };\r\n    \r\n    /**\r\n     * @param {Float64Array} _float64Array\r\n     */\r\n    const fromFloat64Array = function(_float64Array) {\r\n        points.length = 0;\r\n        for(let i=0; i<_float64Array.length; i+=2) {\r\n            points.push(\r\n                new Point(_float64Array[i], _float64Array[i+1])\r\n            );\r\n        }\r\n    };    \r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.count = function() {\r\n        return points.length;\r\n    };\r\n\r\n    if(_pointsInput && Array.isArray(_pointsInput)) {\r\n        _pointsInput.forEach(self.push);\r\n    } else if(_pointsInput && Object.prototype.toString.call(_pointsInput) === '[object Float64Array]') {\r\n        fromFloat64Array(_pointsInput);\r\n    } else { }    \r\n\r\n};\r\n\r\nexport { PointSet };\r\n","import { PointSet } from \"./PointSet\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n\r\nconst AccessibleRoutingPointsFinder = {\r\n\r\n    /**\r\n     * Find routing points that are not occluded by objects\r\n     * \r\n     * @param {Object[]} _subjectEntityDescriptors\r\n     * @param {Object[]} _occluderEntityDescriptors\r\n     * @param {Number} _gridSize\r\n     * @returns {Object}\r\n     */\r\n    find: function(_subjectEntityDescriptors, _occluderEntityDescriptors, _gridSize) {\r\n        const connectorAnchorToNumValidRoutingPoints = new Map();\r\n        const allRoutingPoints = [];\r\n        const filteredRoutingPoints = new PointSet();\r\n\r\n        _subjectEntityDescriptors.forEach((_entityDescriptor) => {\r\n            const anchors = _entityDescriptor.connectorAnchors;\r\n\r\n            anchors.forEach((_a) => {\r\n                let isAnchorOccluded = false;\r\n\r\n                // check if anchor is occluded\r\n                // @todo Commented out for now, need a decision on how to handle anchors where centroid is on the occluder bounding rect\r\n                /*for(let i=0; i<_occludableByObjects.length; i++) {\r\n                    const possibleOccluderBoundingRect = _occludableByObjects[i].getBoundingRectange();\r\n                    if(possibleOccluderBoundingRect.checkIsPointWithin(_a.getCentroid())) {\r\n                        connectorAnchorToNumValidRoutingPoints.set(_a.getId(), 0);\r\n                        isAnchorOccluded = true;\r\n                        break;\r\n                    }\r\n                }*/\r\n\r\n                if(!isAnchorOccluded) {\r\n                    const routingPoints = (new PointSet(_a.routingPointsFloat64Arr)).toArray();\r\n                    routingPoints.forEach((_rp) => {\r\n                        allRoutingPoints.push(\r\n                            {\r\n                                \"routingPoint\": _rp,\r\n                                \"parentAnchorId\": _a.id\r\n                            }\r\n                        );\r\n                    });\r\n\r\n                    connectorAnchorToNumValidRoutingPoints.set(_a.id, routingPoints.length);\r\n                }\r\n            });\r\n        });\r\n\r\n        allRoutingPoints.forEach((_rp) => {\r\n            let isPointWithinObj = false;\r\n\r\n            // check if routing point is occluded\r\n            for(let i=0; i<_occluderEntityDescriptors.length; i++) {\r\n                const occluder = _occluderEntityDescriptors[i];\r\n                const boundingRect = new Rectangle(occluder.x, occluder.y, occluder.x + occluder.width, occluder.y + occluder.height);\r\n                if(boundingRect.checkIsPointWithin(_rp.routingPoint)) {\r\n                    isPointWithinObj = true;\r\n                    const currentNumRoutingPoints = connectorAnchorToNumValidRoutingPoints.get(_rp.parentAnchorId) || 0;\r\n                    connectorAnchorToNumValidRoutingPoints.set(_rp.parentAnchorId, currentNumRoutingPoints - 1);\r\n                }\r\n            }\r\n\r\n            if(!isPointWithinObj) {\r\n                filteredRoutingPoints.push(_rp.routingPoint);\r\n            }\r\n            \r\n        });\r\n\r\n        return {\r\n            \"connectorAnchorToNumValidRoutingPoints\": connectorAnchorToNumValidRoutingPoints,\r\n            \"accessibleRoutingPoints\": filteredRoutingPoints,\r\n        };\r\n    }\r\n};\r\n\r\nexport { AccessibleRoutingPointsFinder };\r\n","const SheetEvent = Object.freeze({\r\n    DBLCLICK: \"dblclick\",\r\n    CLICK: \"click\",\r\n    CONNECTOR_UPDATED: \"connector-updated\",\r\n    ENTITY_ADDED: \"entity-added\",\r\n    ENTITY_REMOVED: \"entity-removed\",\r\n    ENTITY_RESIZED: \"entity-resized\",\r\n    ENTITY_TRANSLATED: \"entity-translated\",\r\n    MULTIPLE_ENTITY_SELECTION_STARTED: \"multiple-object-selection-started\",\r\n    MULTIPLE_ENTITIES_SELECTED: \"multiple-objects-selected\",\r\n});\r\n\r\n\r\nexport { SheetEvent };\r\n","import  {Point} from './Point';\r\nimport  {Rectangle} from './Rectangle';\r\n\r\n/**\r\n * @param {String} _id\r\n * @param {Element} _domElement\r\n * @param {Sheet} _sheet\r\n */\r\nfunction ConnectorAnchor(_id, _domElement, _sheet) {\r\n    \r\n    const self = this;\r\n\r\n    const getDimensions = function() {\r\n        const r = _sheet.transformDomRectToPageSpaceRect(_domElement.getBoundingClientRect());\r\n        return new Point(r.getWidth(), r.getHeight());\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getId = function() {\r\n        return _id;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */     \r\n    this.getX = function() {\r\n        // Might want to return left edge coordinate instead\r\n        return self.getCentroid().getX();\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */     \r\n    this.getY = function() {\r\n        // Might want to return top edge coordinate instead\r\n        return self.getCentroid().getY();\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getWidth = function() {\r\n        const r = _sheet.transformDomRectToPageSpaceRect(_domElement.getBoundingClientRect());\r\n        return r.getWidth();\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getHeight = function() {\r\n        const r = _sheet.transformDomRectToPageSpaceRect(_domElement.getBoundingClientRect());\r\n        return r.getHeight();\r\n    };\r\n\r\n    /**\r\n     * @returns {Point}\r\n     */\r\n    this.getCentroid = function() {\r\n        const sheetOffset = _sheet.getSheetOffset();\r\n        const pageSpaceRect = _sheet.transformDomRectToPageSpaceRect(_domElement.getBoundingClientRect());\r\n        const halfWidth = pageSpaceRect.getWidth() * 0.5;\r\n        const halfHeight = pageSpaceRect.getHeight() * 0.5;        \r\n        \r\n        return new Point(\r\n            (pageSpaceRect.getLeft() + halfWidth) - sheetOffset.getX(), \r\n            (pageSpaceRect.getTop() + halfHeight) - sheetOffset.getY()\r\n        );\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _gridSize \r\n     * @returns {Point[]}\r\n     */\r\n    this.getRoutingPoints = function(_gridSize) {\r\n        const dimensions = getDimensions();\r\n        const centroid = self.getCentroid();\r\n        const halfWidth = dimensions.getX() * 0.5;\r\n        const halfHeight = dimensions.getY() * 0.5;\r\n\r\n        return [\r\n            new Point(centroid.getX() + halfWidth + _gridSize, centroid.getY()),\r\n            new Point(centroid.getX() - halfWidth - _gridSize, centroid.getY()),\r\n            new Point(centroid.getX(), centroid.getY() + halfHeight + _gridSize),\r\n            new Point(centroid.getX(), centroid.getY() - halfHeight - _gridSize),\r\n        ];\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @returns {Rectangle}\r\n     */\r\n    this.getBoundingRectange = function() {\r\n        const dimensions = getDimensions();\r\n        const centroid = self.getCentroid();\r\n        const halfWidth = dimensions.getX() * 0.5;\r\n        const halfHeight = dimensions.getY() * 0.5;\r\n\r\n        return new Rectangle(\r\n            centroid.getX() - halfWidth, \r\n            centroid.getY() - halfHeight, \r\n            centroid.getX() + halfWidth, \r\n            centroid.getY() + halfHeight\r\n        );\r\n    };\r\n};\r\n\r\nexport { ConnectorAnchor };\r\n","import { Entity } from \"../Entity\";\r\nimport { ConnectorAnchor } from \"../ConnectorAnchor\";\r\n\r\nconst ClosestPairFinder = {   \r\n    /**\r\n     * \r\n     * @param {Entity} _objA \r\n     * @param {Entity} _objB\r\n     * @param {Map<ConnectorAnchor, Number>} _connectorAnchorToNumValidRoutingPoints\r\n     * @returns {Object}\r\n     */\r\n    findClosestPairBetweenObjects: function(_objA, _objB, _connectorAnchorToNumValidRoutingPoints) {\r\n        const objAConnectorAnchors = _objA.getConnectorAnchors();\r\n        const objBConnectorAnchors = _objB.getConnectorAnchors();\r\n\r\n        var startAnchorIdxWithMinDist = 0;\r\n        var endAnchorIdxWithMinDist = 0;\r\n        var minDist = Number.MAX_VALUE;\r\n        \r\n        // Find best anchor element to connect _objA and _objB            \r\n        // Find anchors that produce shortest straight line distance\r\n        for(let x=0; x<objAConnectorAnchors.length; x++) {\r\n            const aCentroid = objAConnectorAnchors[x].getCentroid();\r\n            const objANumValidRoutingPoints = _connectorAnchorToNumValidRoutingPoints.get(objAConnectorAnchors[x].getId()) || 0;\r\n            if(objANumValidRoutingPoints === 0) {\r\n                continue;\r\n            }\r\n\r\n            for(let y=0; y<objBConnectorAnchors.length; y++) {\r\n                const bCentroid = objBConnectorAnchors[y].getCentroid();\r\n                const d = Math.sqrt(Math.pow(bCentroid.getX()-aCentroid.getX(),2) + Math.pow(bCentroid.getY()-aCentroid.getY(),2));\r\n                const objBNumValidRoutingPoints = _connectorAnchorToNumValidRoutingPoints.get(objBConnectorAnchors[y].getId()) || 0;\r\n                \r\n                if(d < minDist && objBNumValidRoutingPoints > 0) {\r\n                    startAnchorIdxWithMinDist = x;\r\n                    endAnchorIdxWithMinDist = y;\r\n                    minDist = d;\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            \"objectAAnchorIndex\": startAnchorIdxWithMinDist,\r\n            \"objectAAnchor\": objAConnectorAnchors[startAnchorIdxWithMinDist],\r\n            \"objectBAnchorIndex\": endAnchorIdxWithMinDist,\r\n            \"objectBAnchor\": objBConnectorAnchors[endAnchorIdxWithMinDist],\r\n        };\r\n    }\r\n};\r\n\r\nexport { ClosestPairFinder };\r\n","const DebugMetricsPanel = function(_window) {\r\n    var debugPanelElem = null;\r\n    var isVisible = false;\r\n\r\n    this.init = function() {\r\n        debugPanelElem = _window.document.createElement(\"div\");\r\n        debugPanelElem.classList.add(\"graphpaper-debug-panel\");\r\n        debugPanelElem.style.display = \"none\";\r\n        debugPanelElem.style.position = \"fixed\";\r\n        debugPanelElem.style.right = \"0px\";\r\n        debugPanelElem.style.top = \"0px\";\r\n        debugPanelElem.style.width = \"450px\";\r\n        debugPanelElem.style.height = \"200px\";\r\n        debugPanelElem.style.color = \"#fff\";\r\n        debugPanelElem.style.padding = \"15px\";\r\n        debugPanelElem.style.backgroundColor = \"rgba(0,0,0,0.75)\";\r\n        _window.document.body.appendChild(debugPanelElem);\r\n    };\r\n\r\n    this.show = function() {\r\n        isVisible = true;\r\n        debugPanelElem.style.display = \"block\";\r\n    };\r\n\r\n    this.hide = function() {\r\n        isVisible = false;\r\n        debugPanelElem.style.display = \"none\";\r\n    };\r\n\r\n    this.refresh = function(_metrics) {\r\n        if(isVisible === false) {\r\n            return;\r\n        }\r\n\r\n        debugPanelElem.innerHTML = `\r\n            <p>refreshAllConnectorsInternal.executionTime = ${_metrics.refreshAllConnectorsInternal.executionTime}</p>\r\n            <p>connectorRoutingWorker.executionTime = ${_metrics.connectorRoutingWorker.executionTime}</p>            \r\n            <p>-- connectorRoutingWorker.msgDecodeTime = ${_metrics.connectorRoutingWorker.msgDecodeTime}</p>\r\n            <p>-- connectorRoutingWorker.pointVisibilityMapCreationTime = ${_metrics.connectorRoutingWorker.pointVisibilityMapCreationTime}</p>\r\n            <p>-- connectorRoutingWorker.allPathsComputationTime = ${_metrics.connectorRoutingWorker.allPathsComputationTime}</p>\r\n            <p>-- connectorRoutingWorker.numRoutingPoints = ${_metrics.connectorRoutingWorker.numRoutingPoints}</p>\r\n            <p>-- connectorRoutingWorker.numBoundaryLines = ${_metrics.connectorRoutingWorker.numBoundaryLines}</p>\r\n            <p>connectorsRefreshTime = ${_metrics.connectorsRefreshTime}</p>\r\n        `;\r\n    };\r\n\r\n};\r\n\r\nexport { DebugMetricsPanel };\r\n","import { MatrixMath } from './MatrixMath';\r\n\r\n/**\r\n * \r\n * @param {Number} _dblTapSpeed \r\n * @param {Number} _dblTapRadius \r\n */\r\nfunction DoubleTapDetector(_dblTapSpeed, _dblTapRadius)\r\n{\r\n    const dblTapDetectVars = {\r\n        lastTouchX: null,\r\n        lastTouchY: null,\r\n        lastTouchTime: null\r\n    };\r\n    \r\n    let dblTapSpeed = _dblTapSpeed || 300.0;\r\n    let dblTapRadius = _dblTapRadius || 24.0;\r\n\r\n    /**\r\n     * \r\n     * @param {TouchEvent} _touchEndEvent \r\n     * @param {Point} _sheetPageOffset \r\n     * @param {Array} currentInvTransformationMatrix\r\n     * @returns {Object}\r\n     */\r\n    this.processTap = function(_touchEndEvent, _sheetPageOffset, _currentInvTransformationMatrix) {\r\n        if(_touchEndEvent.changedTouches.length === 0) {\r\n            // we have nothing to work with\r\n            return {\r\n                \"doubleTapDetected\": false,\r\n                \"touchX\": null,\r\n                \"touchY\": null\r\n            };\r\n        }\r\n\r\n        // Position of the touch\r\n\r\n        // THIS NEEDS TO BE UPDATED TO ACCOUNT FOR OFFSET OF SHEET RELATIVE TO PAGE\r\n\r\n        const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n            [_touchEndEvent.changedTouches[0].pageX - _sheetPageOffset.getX(), _touchEndEvent.changedTouches[0].pageY - _sheetPageOffset.getY(), 0, 1],\r\n            _currentInvTransformationMatrix\r\n        );            \r\n\r\n        let dblTapDetected = false;  // flag specifying if we detected a double-tap\r\n        const x = invTransformedPos[0];\r\n        const y = invTransformedPos[1];\r\n        const now = new Date().getTime();\r\n\r\n        // Check if we have stored data for a previous touch (indicating we should test for a double-tap)\r\n        if(dblTapDetectVars.lastTouchTime !== null) {\r\n            const lastTouchTime = dblTapDetectVars.lastTouchTime;\r\n\r\n            // Compute time since the previous touch\r\n            const timeSinceLastTouch = now - lastTouchTime;\r\n\r\n            // Get the position of the last touch on the element\r\n            const lastX = dblTapDetectVars.lastTouchX;\r\n            const lastY = dblTapDetectVars.lastTouchY;\r\n\r\n            // Compute the distance from the last touch on the element\r\n            const distFromLastTouch = Math.sqrt( Math.pow(x-lastX,2) + Math.pow(y-lastY,2) );\r\n\r\n            if(timeSinceLastTouch <= dblTapSpeed && distFromLastTouch <= dblTapRadius) {\r\n                // Remove last touch info from element\r\n                dblTapDetectVars.lastTouchTime = null;\r\n                dblTapDetectVars.lastTouchX = null;\r\n                dblTapDetectVars.lastTouchY = null;\r\n\r\n                // Flag that we detected a double tap\r\n                dblTapDetected = true;                \r\n            }\r\n        }\r\n\r\n        if(!dblTapDetected) {\r\n            dblTapDetectVars.lastTouchTime = now;\r\n            dblTapDetectVars.lastTouchX = x;\r\n            dblTapDetectVars.lastTouchY = y;\r\n        }\r\n\r\n        return {\r\n            \"doubleTapDetected\": dblTapDetected,\r\n            \"touchX\": x,\r\n            \"touchY\": y\r\n        }\r\n    };\r\n};\r\n\r\nexport { DoubleTapDetector };\r\n","import  {Point} from './Point';\r\nimport  {Line} from './Line';\r\n\r\n/**\r\n * Unique collection of Line objects\r\n * \r\n * @param {Line[]|Float64Array|undefined} _linesInput\r\n */\r\nfunction LineSet(_linesInput) {\r\n\r\n    const self = this;\r\n    \r\n    /**\r\n     * @type {Line[]}\r\n     */\r\n    const lines = [];    \r\n\r\n    /**\r\n     * @param {Line} _newLine\r\n     * @returns {Boolean}\r\n     */\r\n    this.push = function(_newLine) {\r\n        for(let i=0; i<lines.length; i++) {\r\n            if(_newLine.isEqual(lines[i])) {\r\n                // line already in set\r\n                return false;\r\n            }\r\n        }\r\n\r\n        lines.push(_newLine);\r\n        return true;\r\n    };\r\n  \r\n    /**\r\n     * @returns {Line[]}\r\n     */\r\n    this.toArray = function() {\r\n        return lines;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.count = function() {\r\n        return lines.length;\r\n    };\r\n\r\n    /**\r\n     * @returns {Float64Array}\r\n     */\r\n    this.toFloat64Array = function() {\r\n        const result = new Float64Array(lines.length * 4);\r\n        for(let i=0; i<lines.length; i++) {\r\n            result[0 + (i*4)] = lines[i].getStartPoint().getX();\r\n            result[1 + (i*4)] = lines[i].getStartPoint().getY();\r\n            result[2 + (i*4)] = lines[i].getEndPoint().getX();\r\n            result[3 + (i*4)] = lines[i].getEndPoint().getY();\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * @param {Float64Array} _float64Array\r\n     */\r\n    const fromFloat64Array = function(_float64Array) {\r\n        lines.length = 0;\r\n        for(let i=0; i<_float64Array.length; i+=4) {\r\n            lines.push(\r\n                new Line(\r\n                    new Point(_float64Array[i], _float64Array[i+1]),\r\n                    new Point(_float64Array[i+2], _float64Array[i+3])\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    if(_linesInput && Array.isArray(_linesInput)) {\r\n        _linesInput.forEach(self.push);\r\n    } else if(_linesInput && Object.prototype.toString.call(_linesInput) === '[object Float64Array]') {\r\n        fromFloat64Array(_linesInput);\r\n    } else { }    \r\n};\r\n\r\nexport { LineSet };\r\n","const ConnectorEvent = Object.freeze({\r\n    CLICK: 'connector-click',\r\n    MOUSE_ENTER: 'connector-mouse-enter',\r\n    MOUSE_LEAVE: 'connector-mouse-leave'\r\n});\r\n\r\nexport { ConnectorEvent };\r\n","const ConnectorRoutingAlgorithm = Object.freeze({\r\n    STRAIGHT_LINE: 0,\r\n    STRAIGHT_LINE_BETWEEN_ANCHORS: 1,\r\n    STRAIGHT_LINE_BETWEEN_ANCHORS_AVOID_SELF_INTERSECTION: 2, // unsupported\r\n    ASTAR: 3,\r\n    ASTAR_WITH_ROUTE_OPTIMIZATION: 4\r\n});\r\n\r\nexport { ConnectorRoutingAlgorithm };\r\n","import {ConnectorAnchor} from './ConnectorAnchor';\r\nimport {ConnectorEvent} from './ConnectorEvent';\r\nimport {ConnectorRoutingAlgorithm} from './ConnectorRoutingAlgorithm';\r\nimport {Line} from './Line';\r\nimport {Point} from './Point';\r\n\r\n/**\r\n * \r\n * @param {ConnectorAnchor} _anchorStart \r\n * @param {ConnectorAnchor} _anchorEnd\r\n * @param {Element} _containerDomElement\r\n * @param {String} _strokeColor\r\n * @param {String} _strokeWidth\r\n * @param {Number} _curvaturePx\r\n * @param {ConnectorRoutingAlgorithm} _routingAlgorithm\r\n */\r\nfunction Connector(_anchorStart, _anchorEnd, _containerDomElement, _strokeColor, _strokeWidth, _curvaturePx, _routingAlgorithm) {\r\n    const self = this;\r\n\r\n    const eventNameToHandlerFunc = new Map();\r\n    let markerStartSize = 0;\r\n    let markerEndSize = 0;\r\n\r\n    if(typeof _strokeColor === 'undefined') {\r\n        _strokeColor = '#000';\r\n    }\r\n\r\n    if(typeof _strokeWidth === 'undefined') {\r\n        _strokeWidth = '2px';\r\n    }\r\n\r\n    if(typeof _curvaturePx === 'undefined') {\r\n        _curvaturePx = 0;\r\n    }\r\n\r\n    if(typeof _routingAlgorithm === 'undefined') {\r\n        _routingAlgorithm = ConnectorRoutingAlgorithm.ASTAR_WITH_ROUTE_OPTIMIZATION;\r\n    }\r\n\r\n    /**\r\n     * @type {Point[]|null}\r\n     */\r\n    let pathPoints = null;\r\n\r\n    /**\r\n     * @type {Element}\r\n     */\r\n    const pathElem = window.document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\r\n    pathElem.setAttribute(\"d\", 'M0 0 L0 0');\r\n    pathElem.style.stroke = _strokeColor; \r\n    pathElem.style.strokeWidth = _strokeWidth;         \r\n\r\n    pathElem.addEventListener(\"click\", function(e) {\r\n        self.dispatchEvent(ConnectorEvent.CLICK, {\"connector\":self, \"clickedAtX\": e.pageX, \"clickedAtY\": e.pageY});\r\n    });\r\n\r\n    pathElem.addEventListener(\"mouseenter\", function(e) {\r\n        self.dispatchEvent(ConnectorEvent.MOUSE_ENTER, {\"connector\":self, \"pointerAtX\": e.pageX, \"pointerAtY\": e.pageY});\r\n    });\r\n\r\n    pathElem.addEventListener(\"mouseleave\", function(e) {\r\n        self.dispatchEvent(ConnectorEvent.MOUSE_LEAVE, {\"connector\":self });\r\n    });        \r\n\r\n    /**\r\n     * @type {Element}\r\n     */\r\n    var svgDomElem = null;\r\n\r\n    this.appendPathToContainerDomElement = function() {\r\n        svgDomElem = _containerDomElement.appendChild(pathElem);\r\n    };\r\n\r\n    /**\r\n     * @param {String} _url\r\n     * @param {Number} _size\r\n     */    \r\n    this.setMarkerStart = function(_url, _size) {\r\n        pathElem.setAttribute(`marker-start`, `url(${_url})`);\r\n        markerStartSize = _size;\r\n    };\r\n\r\n    this.unsetMarkerStart = function() {\r\n        pathElem.removeAttribute(`marker-start`);\r\n        markerStartSize = 0;\r\n    };\r\n\r\n    /**\r\n     * @param {String} _url\r\n     * @param {Number} _size\r\n     */\r\n    this.setMarkerEnd = function(_url, _size) {\r\n        pathElem.setAttribute(`marker-end`, `url(${_url})`);\r\n        markerEndSize = _size;\r\n    };\r\n\r\n    this.unsetMarkerEnd = function() {\r\n        pathElem.removeAttribute(`marker-end`);\r\n        markerEndSize = 0;\r\n    };    \r\n\r\n    /**\r\n     * @returns {Point[]|null}\r\n     */\r\n    this.getPathPoints = function() {\r\n        return pathPoints;\r\n    };\r\n\r\n    /**\r\n     * @returns {Line[]}\r\n     */\r\n    this.getPathLines = function() {\r\n        if(pathPoints === null || pathPoints.length < 2) {\r\n            return [];\r\n        }\r\n\r\n        const lines = [];\r\n        for(let i=0; i<pathPoints.length-1; i++) {\r\n            lines.push(new Line(pathPoints[i], pathPoints[i+1]));\r\n        }\r\n\r\n        return lines;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getLength = function() {\r\n        let totalLength = 0;\r\n\r\n        const pathLines = self.getPathLines();\r\n        for(let i=0; i<pathLines.length; i++) {\r\n            totalLength += pathLines[i].getLength();\r\n        }\r\n        \r\n        return totalLength;\r\n    };\r\n\r\n    /**\r\n     * @returns {Point}\r\n     */\r\n    this.getMidpoint = function() {\r\n        const totalLength = self.getLength();\r\n        const pathLines = self.getPathLines();\r\n\r\n        let lengthSoFar = 0;\r\n        let curPathLineWithMidpoint = null;\r\n\r\n        for(let i=0; i<pathLines.length; i++) {\r\n            curPathLineWithMidpoint = pathLines[i];\r\n            const pathLineLength = pathLines[i].getLength();\r\n            lengthSoFar += pathLineLength;\r\n\r\n            if(lengthSoFar >= totalLength/2.0) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        const lengthBeforeCur = (lengthSoFar - curPathLineWithMidpoint.getLength());\r\n        const midOnCurPath = (totalLength / 2.0) - lengthBeforeCur; // i.e. distance to midpoint\r\n\r\n        const p = midOnCurPath / curPathLineWithMidpoint.getLength();\r\n\r\n        return new Point(\r\n            curPathLineWithMidpoint.getStartPoint().getX() + (p * (curPathLineWithMidpoint.getEndPoint().getX() - curPathLineWithMidpoint.getStartPoint().getX())),\r\n            curPathLineWithMidpoint.getStartPoint().getY() + (p * (curPathLineWithMidpoint.getEndPoint().getY() - curPathLineWithMidpoint.getStartPoint().getY()))\r\n        );\r\n    };\r\n\r\n    /**\r\n     * @returns {Point}\r\n     */\r\n    this.getMidpointDirection = function() {\r\n        const totalLength = self.getLength();\r\n        const pathLines = self.getPathLines();\r\n\r\n        let lengthSoFar = 0;\r\n        let curPathLineWithMidpoint = null;\r\n\r\n        for(let i=0; i<pathLines.length; i++) {\r\n            curPathLineWithMidpoint = pathLines[i];\r\n            const pathLineLength = pathLines[i].getLength();\r\n            lengthSoFar += pathLineLength;\r\n\r\n            if(lengthSoFar >= totalLength/2.0) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(curPathLineWithMidpoint === null) {\r\n            return pathLines[0].getDirection();\r\n        }\r\n\r\n        return curPathLineWithMidpoint.getDirection();\r\n    };\r\n\r\n\r\n    /**\r\n     * @param {String} _svgPath\r\n     * @param {Point[]} _pathPoints\r\n     */\r\n    this.refresh = function(_svgPath, _pathPoints) {\r\n        pathPoints = _pathPoints;\r\n        pathElem.setAttribute(\"d\", _svgPath);\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getId = function() {\r\n        const anchorIds = [_anchorStart.getId(), _anchorEnd.getId()].sort();\r\n        return anchorIds.join(':');\r\n    };\r\n\r\n    /**\r\n     * @returns {ConnectorAnchor}\r\n     */\r\n    this.getAnchorStart = function() {\r\n        return _anchorStart;\r\n    };\r\n\r\n    /**\r\n     * @returns {ConnectorAnchor}\r\n     */    \r\n    this.getAnchorEnd = function() {\r\n        return _anchorEnd;\r\n    };\r\n\r\n    this.removePathElement = function() {\r\n        pathElem.remove();\r\n    };\r\n\r\n    /**\r\n     * @param {String} _cl\r\n     * @returns {undefined}\r\n     */\r\n    this.addClassToDomElement = function(_cl) {\r\n        pathElem.classList.add(_cl);\r\n    };\r\n\r\n    /**\r\n     * @param {String} _cl\r\n     * @returns {undefined}\r\n     */    \r\n    this.removeClassFromDomElement = function(_cl) {\r\n        pathElem.classList.remove(_cl);\r\n    };\r\n\r\n    /**\r\n     * @returns {Object}\r\n     */\r\n    this.getDescriptor = function() {\r\n        return {\r\n            \"id\": self.getId(),\r\n            \"anchor_start_centroid_arr\": _anchorStart.getCentroid().toArray(),\r\n            \"anchor_end_centroid_arr\": _anchorEnd.getCentroid().toArray(),\r\n            \"marker_start_size\": markerStartSize,\r\n            \"marker_end_size\": markerEndSize,\r\n            \"curvature_px\": _curvaturePx,\r\n            \"routing_algorithm\": _routingAlgorithm\r\n        };\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName \r\n     * @param {*} _handlerFunc \r\n     */\r\n    this.on = function(_eventName, _handlerFunc) {\r\n        const allHandlers = eventNameToHandlerFunc.get(_eventName) || [];\r\n        allHandlers.push(_handlerFunc);\r\n        eventNameToHandlerFunc.set(_eventName, allHandlers);        \r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName \r\n     * @param {*} _callback \r\n     */\r\n    this.off = function(_eventName, _callback) {\r\n        const allCallbacks = eventNameToHandlerFunc.get(_eventName) || [];\r\n\r\n        for(let i=0; i<allCallbacks.length; i++) {\r\n            if(allCallbacks[i] === _callback) {\r\n                allCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        eventNameToHandlerFunc.set(_eventName, allCallbacks);\r\n    };\r\n\r\n    /**\r\n     * @param {String} _eventId\r\n     * @param {Object} _eventData\r\n     */\r\n    this.dispatchEvent = function(_eventId, _eventData) {\r\n        const observers = eventNameToHandlerFunc.get(_eventId) || [];\r\n        observers.forEach(function(handler) {\r\n            handler(_eventData);\r\n        });\r\n    };\r\n};\r\n\r\nexport { Connector };\r\n","const GRID_STYLE = {\r\n    LINE: 'line',\r\n    DOT: 'dot'\r\n};\r\n\r\n/**\r\n * \r\n * @param {Number} _size\r\n * @param {String} _color\r\n * @param {String} _style\r\n */\r\nfunction Grid(_size, _color, _style) {\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getSize = function() {\r\n        return _size;\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getStyle = function() {\r\n        return _style;\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getSvgImageTile = function() {\r\n        if(_style === GRID_STYLE.LINE) {\r\n            return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${_size}\" height=\"${_size}\"><rect width=\"${_size}\" height=\"1\" x=\"0\" y=\"${(_size-1.0)}\" style=\"fill:${_color}\" /><rect width=\"1\" height=\"${_size}\" x=\"${(_size-1.0)}\" y=\"0\" style=\"fill:${_color}\" /></svg>`;\r\n        } else {\r\n            return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${_size}\" height=\"${_size}\"><rect width=\"1\" height=\"1\" x=\"${(_size-1.0)}\" y=\"${(_size-1.0)}\" style=\"fill:${_color}\" /></svg>`;\r\n        }\r\n    };\r\n\r\n};\r\n    \r\nexport { GRID_STYLE, Grid };\r\n","const ConnectorRoutingWorkerJsString = `(function () {\n  'use strict';\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n      return;\n    }\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  function Point(a,b){this.__x=a,this.__y=b;}Point.prototype.getX=function(){return this.__x},Point.prototype.getY=function(){return this.__y},Point.prototype.isEqual=function(a){return !(this.__x!==a.getX()||this.__y!==a.getY())},Point.prototype.getCartesianPoint=function(a,b){return new Point(this.__x-.5*a,-this.__y+.5*b)},Point.prototype.toString=function(){return this.__x+\" \"+this.__y},Point.prototype.toArray=function(){return [this.__x,this.__y]},Point.fromArray=function(a){return new Point(a[0],a[1])};\n\n  var LINE_INTERSECTION_TYPE=Object.freeze({PARALLEL:\"parallel\",COINCIDENT:\"coincident\",LINE:\"line\",LINESEG:\"lineseg\"});function LineIntersection(a,b){this.__type=a,this.__intersectionPoint=b;}LineIntersection.prototype.getType=function(){return this.__type},LineIntersection.prototype.getIntersectionPoint=function(){return this.__intersectionPoint};\n\n  function Line(a,b){if(\"undefined\"==typeof a||null===a)throw \"Line missing _startPoint\";if(\"undefined\"==typeof b||null===b)throw \"Line missing _endPoint\";this.__startPoint=a,this.__endPoint=b;}Line.prototype.getStartPoint=function(){return this.__startPoint},Line.prototype.getEndPoint=function(){return this.__endPoint},Line.prototype.isEqual=function(a){return !!(this.getStartPoint().isEqual(a.getStartPoint())&&this.getEndPoint().isEqual(a.getEndPoint()))},Line.prototype.getLength=function(){return Math.sqrt(Math.pow(this.__endPoint.getX()-this.__startPoint.getX(),2)+Math.pow(this.__endPoint.getY()-this.__startPoint.getY(),2))},Line.prototype.getMinX=function(){return Math.min(this.getStartPoint().getX(),this.getEndPoint().getX())},Line.prototype.getMaxX=function(){return Math.max(this.getStartPoint().getX(),this.getEndPoint().getX())},Line.prototype.getMinY=function(){return Math.min(this.getStartPoint().getY(),this.getEndPoint().getY())},Line.prototype.getMaxY=function(){return Math.max(this.getStartPoint().getY(),this.getEndPoint().getY())},Line.prototype.getDirection=function(){var a=this.__endPoint.getX()-this.__startPoint.getX(),b=this.__endPoint.getY()-this.__startPoint.getY(),c=Math.sqrt(a*a+b*b);return new Point(a/c,b/c)},Line.prototype.createShortenedLine=function(a,b){var c=this.__endPoint.getX()-this.__startPoint.getX(),d=this.__endPoint.getY()-this.__startPoint.getY(),e=this.getDirection();return new Line(new Point(this.__startPoint.getX()+a*e.getX(),this.__startPoint.getY()+a*e.getY()),new Point(this.__startPoint.getX()+c-b*e.getX(),this.__startPoint.getY()+d-b*e.getY()))},Line.prototype.computeIntersectionType=function(a){var b=this.__startPoint.getX(),c=this.__startPoint.getY(),d=this.__endPoint.getX(),e=this.__endPoint.getY(),f=a.getStartPoint().getX(),g=a.getStartPoint().getY(),h=a.getEndPoint().getX(),i=a.getEndPoint().getY(),j=(i-g)*(d-b)-(h-f)*(e-c),k=(h-f)*(c-g)-(i-g)*(b-f),l=(d-b)*(c-g)-(e-c)*(b-f);if(0==j)return 0==j&&0==k&&0==l?LINE_INTERSECTION_TYPE.COINCIDENT:LINE_INTERSECTION_TYPE.PARALLEL;var m=k/j,n=l/j;return 1<m||0>m||1<n||0>n?LINE_INTERSECTION_TYPE.LINE:LINE_INTERSECTION_TYPE.LINESEG},Line.prototype.computeIntersection=function(a){var b=this.__startPoint.getX(),c=this.__startPoint.getY(),d=this.__endPoint.getX(),e=this.__endPoint.getY(),f=a.getStartPoint().getX(),g=a.getStartPoint().getY(),h=a.getEndPoint().getX(),i=a.getEndPoint().getY(),j=(i-g)*(d-b)-(h-f)*(e-c),k=(h-f)*(c-g)-(i-g)*(b-f),l=(d-b)*(c-g)-(e-c)*(b-f);if(0==j)return 0==j&&0==k&&0==l?new LineIntersection(LINE_INTERSECTION_TYPE.COINCIDENT,null):new LineIntersection(LINE_INTERSECTION_TYPE.PARALLEL,null);var m=k/j,n=l/j,o=this.__startPoint.getX()+m*(this.__endPoint.getX()-this.__startPoint.getX()),p=this.__startPoint.getY()+m*(this.__endPoint.getY()-this.__startPoint.getY());return 1<m||0>m||1<n||0>n?new LineIntersection(LINE_INTERSECTION_TYPE.LINE,new Point(o,p)):new LineIntersection(LINE_INTERSECTION_TYPE.LINESEG,new Point(o,p))};\n\n  function PointSet(a){var b=this,c=[];this.push=function(a){for(var b=0;b<c.length;b++)if(a.isEqual(c[b]))return !1;return c.push(a),!0},this.pushPointSet=function(a){for(var c=a.toArray(),d=0;d<c.length;d++)b.push(c[d]);},this.findPointClosestTo=function(a){var b=null,d=Number.MAX_SAFE_INTEGER;return c.forEach(function(c){var e=new Line(a,c);e.getLength()<d&&(b=c,d=e.getLength());}),b},this.findDistanceToPointClosestTo=function(a){var b=Number.MAX_SAFE_INTEGER;return c.forEach(function(c){var d=new Line(a,c);d.getLength()<b&&(b=d.getLength());}),b},this.findPointsCloseTo=function(a,b){var d=new PointSet;return c.forEach(function(c){var e=new Line(a,c);e.getLength()<=b&&d.push(c);}),d},this.toArray=function(){return c},this.toFloat64Array=function(){for(var a=new Float64Array(2*c.length),b=0;b<c.length;b++)a[0+2*b]=c[b].getX(),a[1+2*b]=c[b].getY();return a};var d=function fromFloat64Array(a){c.length=0;for(var b=0;b<a.length;b+=2)c.push(new Point(a[b],a[b+1]));};this.count=function(){return c.length},a&&Array.isArray(a)?a.forEach(b.push):a&&\"[object Float64Array]\"===Object.prototype.toString.call(a)&&d(a);}\n\n  function Rectangle(a,b,c,d){this.__left=a,this.__top=b,this.__right=c,this.__bottom=d;}Rectangle.prototype.getLeft=function(){return this.__left},Rectangle.prototype.getTop=function(){return this.__top},Rectangle.prototype.getRight=function(){return this.__right},Rectangle.prototype.getBottom=function(){return this.__bottom},Rectangle.prototype.getWidth=function(){return this.__right-this.__left},Rectangle.prototype.getHeight=function(){return this.__bottom-this.__top},Rectangle.prototype.getPoints=function(){return [new Point(this.__left,this.__top),new Point(this.__right,this.__top),new Point(this.__right,this.__bottom),new Point(this.__left,this.__bottom)]},Rectangle.prototype.getLines=function(){return [new Line(new Point(this.__left,this.__top),new Point(this.__right,this.__top)),new Line(new Point(this.__right,this.__top),new Point(this.__right,this.__bottom)),new Line(new Point(this.__right,this.__bottom),new Point(this.__left,this.__bottom)),new Line(new Point(this.__left,this.__bottom),new Point(this.__left,this.__top))]},Rectangle.prototype.getUniformlyResizedCopy=function(a){return new Rectangle(this.__left-a,this.__top-a,this.__right+a,this.__bottom+a)},Rectangle.prototype.getPointsScaledToGrid=function(a){var b=new Point(this.__left+.5*(this.__right-this.__left),this.__top+.5*(this.__bottom-this.__top)),c=(this.__right-b.getX()+a)/(this.__right-b.getX()),d=(this.__bottom-b.getY()+a)/(this.__bottom-b.getY()),e=[new Point((this.__left-b.getX())*c+b.getX(),(this.__top-b.getY())*d+b.getY()),new Point((this.__right-b.getX())*c+b.getX(),(this.__top-b.getY())*d+b.getY()),new Point((this.__right-b.getX())*c+b.getX(),(this.__bottom-b.getY())*d+b.getY()),new Point((this.__left-b.getX())*c+b.getX(),(this.__bottom-b.getY())*d+b.getY())];return e},Rectangle.prototype.checkIntersect=function(a){return !(this.__bottom<a.getTop())&&!(this.__top>a.getBottom())&&!(this.__right<a.getLeft())&&!(this.__left>a.getRight())},Rectangle.prototype.checkIsPointWithin=function(a){return !!(a.getX()>=this.__left&&a.getX()<=this.__right&&a.getY()>=this.__top&&a.getY()<=this.__bottom)},Rectangle.prototype.checkIsWithin=function(a){return !!(this.__bottom<=a.getBottom()&&this.__top>=a.getTop()&&this.__right<=a.getRight()&&this.__left>=a.getLeft())};\n\n  var AccessibleRoutingPointsFinder={find:function find(a,b,c){var d=new Map,e=[],f=new PointSet;return a.forEach(function(a){var b=a.connectorAnchors;b.forEach(function(a){{var c=new PointSet(a.routingPointsFloat64Arr).toArray();c.forEach(function(b){e.push({routingPoint:b,parentAnchorId:a.id});}),d.set(a.id,c.length);}});}),e.forEach(function(a){for(var c=!1,e=0;e<b.length;e++){var g=b[e],h=new Rectangle(g.x,g.y,g.x+g.width,g.y+g.height);if(h.checkIsPointWithin(a.routingPoint)){c=!0;var j=d.get(a.parentAnchorId)||0;d.set(a.parentAnchorId,j-1);}}c||f.push(a.routingPoint);}),{connectorAnchorToNumValidRoutingPoints:d,accessibleRoutingPoints:f}}};\n\n  function LineSet(a){var b=this,c=[];this.push=function(a){for(var b=0;b<c.length;b++)if(a.isEqual(c[b]))return !1;return c.push(a),!0},this.toArray=function(){return c},this.count=function(){return c.length},this.toFloat64Array=function(){for(var a=new Float64Array(4*c.length),b=0;b<c.length;b++)a[0+4*b]=c[b].getStartPoint().getX(),a[1+4*b]=c[b].getStartPoint().getY(),a[2+4*b]=c[b].getEndPoint().getX(),a[3+4*b]=c[b].getEndPoint().getY();return a};var d=function fromFloat64Array(a){c.length=0;for(var b=0;b<a.length;b+=4)c.push(new Line(new Point(a[b],a[b+1]),new Point(a[b+2],a[b+3])));};a&&Array.isArray(a)?a.forEach(b.push):a&&\"[object Float64Array]\"===Object.prototype.toString.call(a)&&d(a);}\n\n  var PointVisibilityMapRouteOptimizer={optimize:function optimize(a,b){for(var c=0,d=a.length-1;!(1>=d-c&&(c++,d=a.length-1,c>=a.length-2));)b(a[c],a[d])?(a.splice(c+1,d-c-1),d=a.length-1):d--;}};\n\n  var PointInfo={point:null,visiblePoints:null};function PointVisibilityMap(){var a=this,b=new Map,c=new Map,d=new Map,e=0,f=0,g=function doesLineIntersectAnyBoundaryLines(a){var b=!0,e=!1,f=void 0;try{for(var g,h=c[Symbol.iterator]();!(b=(g=h.next()).done);b=!0){var j=_slicedToArray(g.value,2),k=j[0],l=j[1],m=d.get(k);if(!(a.getMinX()>m.outerBoundingRect.maxX)&&!(a.getMaxX()<m.outerBoundingRect.minX)&&!(a.getMinY()>m.outerBoundingRect.maxY)&&!(a.getMaxY()<m.outerBoundingRect.minY))for(var n,o=l.toArray(),p=0;p<o.length;p++)if(n=o[p].computeIntersectionType(a),n===LINE_INTERSECTION_TYPE.LINESEG)return !0}}catch(a){e=!0,f=a;}finally{try{b||null==h.return||h.return();}finally{if(e)throw f}}return !1},h=function computePointsVisibilityForPoint(a){a.visiblePoints.points.length=0;var c=!0,d=!1,e=void 0;try{for(var f,h=b[Symbol.iterator]();!(c=(f=h.next()).done);c=!0){var i=_slicedToArray(f.value,2),j=i[0],k=i[1],l=!0,m=!1,n=void 0;try{for(var o,p=k[Symbol.iterator]();!(l=(o=p.next()).done);l=!0){var q=_slicedToArray(o.value,2),r=q[0],s=q[1],t=new Line(a.point,r);0<t.getLength()&&!g(t)&&a.visiblePoints.points.push(r);}}catch(a){m=!0,n=a;}finally{try{l||null==p.return||p.return();}finally{if(m)throw n}}}}catch(a){d=!0,e=a;}finally{try{c||null==h.return||h.return();}finally{if(d)throw e}}a.visiblePoints.isValid=!0;},i=function arePointsVisibleToEachOther(a,b){for(var c=o(a),d=j(c),e=0;e<d.length;e++)if(d[e].isEqual(b))return !0;return !1},j=function getVisiblePointsRelativeTo(a){return a.visiblePoints.isValid||h(a),a.visiblePoints.points},k=function isPointInArray(a,b){for(var c=0;c<b.length;c++)if(a.isEqual(b[c]))return !0;return !1},l=function routeToEndpoint(a,b,c,d){for(var e,f=c.point,g=j(c),h=Number.MAX_SAFE_INTEGER,l=null,m=0;m<g.length;m++)if(e=g[m],!k(e,b)){var n=new Line(f,e).getLength()+a,o=new Line(e,d).getLength();n+o<h&&(h=n+o,l=e);}return h===Number.MAX_SAFE_INTEGER?null:{cost:h,point:l}},m=function getBoundaryLinesFromEntityDescriptor(a){var b=new LineSet,c=new Rectangle(a.x,a.y,a.x+a.width,a.y+a.height),d=c.getLines();d.forEach(function(a){b.push(a);});var e=a.connectorAnchors;return e.forEach(function(a){var c=new Rectangle(a.x,a.y,a.x+a.width,a.y+a.height),d=c.getLines();d.forEach(function(a){b.push(a);});}),b},n=function hasEntityMutated(a,b){return !(a.x===b.x&&a.y===b.y&&a.width===b.width&&a.height===b.height)},o=function fetchPointInfoForPoint(a){var c=!0,d=!1,e=void 0;try{for(var f,g=b[Symbol.iterator]();!(c=(f=g.next()).done);c=!0){var h=_slicedToArray(f.value,2),i=h[0],j=h[1],k=!0,l=!1,m=void 0;try{for(var n,o=j[Symbol.iterator]();!(k=(n=o.next()).done);k=!0){var q=_slicedToArray(n.value,2),r=q[0],s=q[1];if(r===a)return p(r,s)}}catch(a){l=!0,m=a;}finally{try{k||null==o.return||o.return();}finally{if(l)throw m}}}}catch(a){d=!0,e=a;}finally{try{c||null==g.return||g.return();}finally{if(d)throw e}}return null},p=function buildPointInfo(a,b){var c=Object.create(PointInfo);return c.point=a,c.visiblePoints=b,c},q=function buildEmptyRoutingPointToVisibleSetMap(a,b,c){for(var d=new Rectangle(a.x,a.y,a.x+a.width,a.y+a.height),e=AccessibleRoutingPointsFinder.find([a],b,c),f=e.accessibleRoutingPoints.toArray(),g=new Map,h=0;h<f.length;h++)g.set(f[h],{isValid:!1,points:[]});var i=d.getPointsScaledToGrid(c);return i.forEach(function(a){g.set(a,{isValid:!1,points:[]});}),g};this.updateRoutingPointsAndBoundaryLinesFromEntityDescriptors=function(a,g){e=0,f=0;for(var h,j=[],k=[],l=[],o=0;o<a.length;o++){h=a[o].id,j.push(h);var p=c.get(h),r=d.get(h);if(p&&!n(r,a[o])){f+=p.count();continue}var C=m(a[o]);c.set(h,C),f+=C.count();}for(var D=0;D<a.length;D++){var s=a[D].id,t=d.get(s);!t||n(t,a[D]);var E=q(a[D],a,g);b.set(s,E),d.set(s,a[D]),k.push(s),e+=E.size;}var u=!0,v=!1,w=void 0;try{for(var x,y=d[Symbol.iterator]();!(u=(x=y.next()).done);u=!0){var z=_slicedToArray(x.value,2),A=z[0],B=z[1];j.includes(A)||(k.push(A),l.push(A));}}catch(a){v=!0,w=a;}finally{try{u||null==y.return||y.return();}finally{if(v)throw w}}return l.forEach(function(a){d.delete(a),c.delete(a),b.delete(a);}),k.length},this.getCurrentNumRoutingPoints=function(){return e},this.getCurrentNumBoundaryLines=function(){return f},this.findVisiblePointInfoClosestTo=function(a){var c=null,d=Number.MAX_SAFE_INTEGER,e=!0,f=!1,h=void 0;try{for(var i,j=b[Symbol.iterator]();!(e=(i=j.next()).done);e=!0){var k=_slicedToArray(i.value,2),l=k[0],m=k[1],n=!0,o=!1,q=void 0;try{for(var r,s=m[Symbol.iterator]();!(n=(r=s.next()).done);n=!0){var t=_slicedToArray(r.value,2),u=t[0],v=t[1],w=new Line(a,u),x=w.getLength();x<d&&!g(w)&&(c=p(u,v),d=x);;}}catch(a){o=!0,q=a;}finally{try{n||null==s.return||s.return();}finally{if(o)throw q}}}}catch(a){f=!0,h=a;}finally{try{e||null==j.return||j.return();}finally{if(f)throw h}}return c},this.computeRoute=function(b,c,d){if(null===b||null===c)return new PointSet;var e=a.findVisiblePointInfoClosestTo(b);if(null===e)return new PointSet;for(var f,h=0,j=[e.point],k=e;!0;){if(f=l(h,j,k,c),null===f){var m=new Line(j[j.length-1],c);if(g(m))return new PointSet;break}if(h+=new Line(k.point,f.point).getLength(),j.push(f.point),k=o(f.point),1>new Line(k.point,c).getLength())break}return d&&PointVisibilityMapRouteOptimizer.optimize(j,i),new PointSet(j)};}\n\n  var SvgPathBuilder={pointToLineTo:function pointToLineTo(a,b){return 0===b?\"M\"+a.getX()+\" \"+a.getY():\"L\"+a.getX()+\" \"+a.getY()},pointTripletToTesselatedCurvePoints:function pointTripletToTesselatedCurvePoints(a,b){if(3!==a.length)throw new Error(\"_points must be array of exactly 3 points\");var c=a[1],d=new Line(a[0],a[1]),e=new Line(a[1],a[2]),f=d.createShortenedLine(0,.5*b),g=e.createShortenedLine(.5*b,0);return [f.getStartPoint(),f.getEndPoint(),g.getStartPoint(),g.getEndPoint()]},pointsToPath:function pointsToPath(a,b){b=b||0;var c=[],d=0;if(0<b){for(;3<=a.length;){var e=a.shift(),f=a.shift(),g=a.shift(),h=SvgPathBuilder.pointTripletToTesselatedCurvePoints([e,f,g],b);a.unshift(h[3]),a.unshift(h[2]);for(var k=0;k<h.length-2;k++)c.push(SvgPathBuilder.pointToLineTo(h[k],d++));}for(;0<a.length;){var j=a.shift();c.push(SvgPathBuilder.pointToLineTo(j,d++));}}else for(var l,m=0;m<a.length;m++)l=a[m],c.push(SvgPathBuilder.pointToLineTo(l,m));return c.join(\" \")}};\n\n  var ConnectorRoutingAlgorithm=Object.freeze({STRAIGHT_LINE:0,STRAIGHT_LINE_BETWEEN_ANCHORS:1,STRAIGHT_LINE_BETWEEN_ANCHORS_AVOID_SELF_INTERSECTION:2,ASTAR:3,ASTAR_WITH_ROUTE_OPTIMIZATION:4});\n\n  var workerData={pointVisibilityMap:new PointVisibilityMap,requestQueue:[]},computeConnectorPath=function computeConnectorPath(a,b,c){var d=Point.fromArray(a.anchor_start_centroid_arr),e=Point.fromArray(a.anchor_end_centroid_arr),f=a.marker_start_size,g=a.marker_end_size,h=a.curvature_px,i=a.routing_algorithm,j=b.findDistanceToPointClosestTo(d),k=b.findPointsCloseTo(d,j).findPointClosestTo(e),l=b.findPointsCloseTo(e,j).findPointClosestTo(d),m=new PointSet;if(i==ConnectorRoutingAlgorithm.STRAIGHT_LINE_BETWEEN_ANCHORS)m=new PointSet([k,l]);else if(i===ConnectorRoutingAlgorithm.ASTAR||i===ConnectorRoutingAlgorithm.ASTAR_WITH_ROUTE_OPTIMIZATION){var r=!(i!==ConnectorRoutingAlgorithm.ASTAR_WITH_ROUTE_OPTIMIZATION);m=c.computeRoute(k,l,r);}else throw \"Invalid routing algorithm\";var n=m.toArray(),o=d,p=e;if(0<f&&1<=n.length){var s=new Line(n[0],d).createShortenedLine(0,f);o=s.getEndPoint();}if(0<g&&1<=n.length){var t=new Line(n[n.length-1],e).createShortenedLine(0,g);p=t.getEndPoint();}var q=[o].concat(_toConsumableArray(n),[p]);return {svgPath:SvgPathBuilder.pointsToPath(q,h),pointsInPath:q}},getConnectorRoutingPointsAroundAnchor=function getConnectorRoutingPointsAroundAnchor(a,b){var c=AccessibleRoutingPointsFinder.find(a,a,b);return c.accessibleRoutingPoints},processRequestQueue=function processRequestQueue(){if(0!==workerData.requestQueue.length){var a=workerData.requestQueue.pop();workerData.requestQueue.length=0;var b={overallTime:null},c=new Date,d=a.gridSize,e=a.connectorDescriptors,f=a.entityDescriptors,g=new Date,h=getConnectorRoutingPointsAroundAnchor(f,d);b.msgDecodeTime=new Date-g;var i=new Date;workerData.pointVisibilityMap.updateRoutingPointsAndBoundaryLinesFromEntityDescriptors(f,d),b.pointVisibilityMapCreationTime=new Date-i;var j=new Date;e.forEach(function(a){var b=computeConnectorPath(a,h,workerData.pointVisibilityMap),c=new PointSet(b.pointsInPath);a.svgPath=b.svgPath,a.pointsInPath=c.toFloat64Array().buffer;}),b.allPathsComputationTime=new Date-j,b.numRoutingPoints=workerData.pointVisibilityMap.getCurrentNumRoutingPoints(),b.numBoundaryLines=workerData.pointVisibilityMap.getCurrentNumBoundaryLines(),b.overallTime=new Date-c,postMessage({connectorDescriptors:e,metrics:b});}};setInterval(processRequestQueue,6),onmessage=function onmessage(a){workerData.requestQueue.push(a.data);};\n\n}());\n`; export { ConnectorRoutingWorkerJsString }","import {MatrixMath} from './MatrixMath';\r\nimport {AccessibleRoutingPointsFinder} from './AccessibleRoutingPointsFinder';\r\nimport {SheetEvent} from './SheetEvent';\r\nimport {Entity} from './Entity';\r\nimport {EntityEvent} from './EntityEvent';\r\nimport {ClosestPairFinder as ConnectorAnchorClosestPairFinder} from './ConnectorAnchorFinder/ClosestPairFinder';\r\nimport {DebugMetricsPanel} from './DebugMetricsPanel/DebugMetricsPanel';\r\nimport {DoubleTapDetector} from './DoubleTapDetector';\r\nimport {Rectangle} from './Rectangle';\r\nimport {Point} from './Point';\r\nimport {Line} from './Line';\r\nimport {PointSet} from './PointSet';\r\nimport {LineSet} from './LineSet';\r\nimport {GroupTransformationContainer} from './GroupTransformationContainer';\r\nimport {Connector} from './Connector';\r\nimport {GRID_STYLE, Grid} from './Grid';\r\nimport {GroupTransformationContainerEvent } from './GroupTransformationContainerEvent';\r\nimport {ConnectorRoutingWorkerJsString} from './Workers/ConnectorRoutingWorker.string';\r\n\r\n/**\r\n * @callback HandleSheetInteractionCallback\r\n * @param {String} interactionType\r\n * @param {Object} interactionData\r\n */ \r\n\r\n /**\r\n * @param {Element} _sheetDomElement \r\n * @param {Window} _window\r\n */\r\nfunction Sheet(_sheetDomElement, _window) {\r\n    const self = this;\r\n\r\n    // Create container for SVG connectors\r\n    const svgElem = _window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svgElem.style.width = \"100%\";\r\n    svgElem.style.height = \"100%\";\r\n    const connectorsContainerDomElement = _sheetDomElement.appendChild(svgElem);\r\n\r\n    // Selection box element\r\n    var selectionBoxElem = null;\r\n\r\n    // GroupTransformationContainers\r\n    const groupTransformationContainers = [];\r\n    var currentGroupTransformationContainerBeingDragged = null;\r\n  \r\n    /**\r\n     * @type {Grid}\r\n     */\r\n    var grid = null;\r\n\r\n    var transitionCss = \"transform 0.55s ease-in-out, transform-origin 0.55s ease-in-out\";\r\n\r\n    var transformOriginX = 0;\r\n    var transformOriginY = 0;\r\n\r\n    var touchMoveLastX = 0.0;\r\n    var touchMoveLastY = 0.0;\r\n\r\n    var translateX = 0;\r\n    var translateY = 0;\r\n    var scaleFactor = 1.0;\r\n    var invScaleFactor = 1.0;    \r\n\r\n    const invTransformationMatrixStack = [];\r\n    var currentInvTransformationMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    var currentTransformationMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    var connectorRefreshBufferTime = 6.94;\r\n    var useTranslate3d = false; // better performance w/o it\r\n    const sheetEntities = [];\r\n\r\n    /**\r\n     * @type {Connector[]}\r\n     */\r\n    const objectConnectors = [];\r\n\r\n    var objectIdBeingDragged = null;\r\n    var objectIdBeingResized = null;\r\n    var objectResizeCursor = \"default\";\r\n    \r\n    var objectDragX = 0.0;\r\n    var objectDragY = 0.0;\r\n    var objectDragStartX = 0.0;\r\n    var objectDragStartY = 0.0;\r\n\r\n    var doubleTapDetector = null;\r\n    const debugMetricsPanel = new DebugMetricsPanel(_window);\r\n\r\n    const metrics = {\r\n        connectorRoutingWorker: {\r\n            executionTime: null,\r\n            numRoutingPoints: null,\r\n            numBoundaryLines: null,\r\n            msgDecodeTime: null,\r\n            pointVisibilityMapCreationTime: null,\r\n            allPathsComputationTime: null\r\n        },\r\n        refreshAllConnectorsInternal: {\r\n            executionTime: null\r\n        },\r\n        connectorsRefreshTime: null\r\n    };\r\n\r\n    var touchHoldDelayTimeMs = 750.0;\r\n    var touchHoldStartInterval = null;\r\n\r\n    var multiObjectSelectionStartX = 0.0;\r\n    var multiObjectSelectionStartY = 0.0;\r\n    var multiObjectSelectionEndX = 0.0;\r\n    var multiObjectSelectionEndY = 0.0;\r\n    var multiObjectSelectionStarted = false;\r\n\r\n    const connectorAnchorsSelected = [];\r\n\r\n    // DOM attribute cache to prevent reflow\r\n    let isDomMetricsLockActive = false;\r\n    let sheetOffsetLeft = null;\r\n    let sheetOffsetTop = null;\r\n    let sheetPageScrollXOffset = null;\r\n    let sheetPageScrollYOffset = null;\r\n\r\n    /**\r\n     * Event name -> Callback map\r\n     */\r\n    const eventHandlers = new Map();\r\n    var connectorRefreshStartTime = null;\r\n    var connectorRefreshTimeout = null;\r\n    let pendingConnectorRefresh = false;\r\n\r\n\r\n    // Setup ConnectorRoutingWorker\r\n    const workerUrl = URL.createObjectURL(new Blob([ ConnectorRoutingWorkerJsString ]));\r\n    \r\n    const connectorRoutingWorker = new Worker(workerUrl);\r\n\r\n    const convertArrayBufferToFloat64Array = function(_ab) {\r\n        return new Float64Array(_ab);\r\n    };\r\n\r\n    connectorRoutingWorker.onmessage = function(_msg) {\r\n        const connectorsRefreshTimeT1 = new Date();\r\n        const connectorDescriptors = _msg.data.connectorDescriptors;\r\n        const refreshCalls = [];\r\n\r\n        const getConnectorDescriptorById = function(_id) {\r\n            for(let i=0; i<connectorDescriptors.length; i++) {\r\n                if(connectorDescriptors[i].id === _id) {\r\n                    return connectorDescriptors[i];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        const renderInternal = function() {\r\n            refreshCalls.forEach((_rc) => {\r\n                _rc();\r\n            });\r\n            pendingConnectorRefresh = false;\r\n        };\r\n\r\n\r\n        objectConnectors.forEach(function(_c) {\r\n            const descriptor = getConnectorDescriptorById(_c.getId());\r\n            if(descriptor) {\r\n                refreshCalls.push(() => {\r\n                    const ps = new PointSet(new Float64Array(descriptor.pointsInPath));\r\n                    _c.refresh(descriptor.svgPath, ps.toArray());\r\n                });\r\n\r\n                emitEvent(SheetEvent.CONNECTOR_UPDATED, { 'connector': _c });\r\n            }\r\n        });\r\n        \r\n        if(pendingConnectorRefresh) {\r\n            //cancelAnimationFrame(renderInternal);\r\n        }\r\n\r\n        pendingConnectorRefresh = true;\r\n        requestAnimationFrame(renderInternal);\r\n\r\n        metrics.connectorsRefreshTime = (new Date()) - connectorsRefreshTimeT1;\r\n\r\n        metrics.connectorRoutingWorker.executionTime = _msg.data.metrics.overallTime;\r\n        metrics.connectorRoutingWorker.numBoundaryLines = _msg.data.metrics.numBoundaryLines;\r\n        metrics.connectorRoutingWorker.numRoutingPoints = _msg.data.metrics.numRoutingPoints;\r\n        metrics.connectorRoutingWorker.msgDecodeTime = _msg.data.metrics.msgDecodeTime;\r\n        metrics.connectorRoutingWorker.pointVisibilityMapCreationTime = _msg.data.metrics.pointVisibilityMapCreationTime;\r\n        metrics.connectorRoutingWorker.allPathsComputationTime = _msg.data.metrics.allPathsComputationTime;\r\n\r\n        debugMetricsPanel.refresh(metrics);\r\n    };    \r\n\r\n    /**\r\n     * @param {Grid} _grid\r\n     */\r\n    this.setGrid = function(_grid) {\r\n        grid = _grid;\r\n        _sheetDomElement.style.backgroundImage = \"url('data:image/svg+xml;base64,\" + _window.btoa(grid.getSvgImageTile()) + \"')\";\r\n        _sheetDomElement.style.backgroundRepeat = \"repeat\";\r\n        _sheetDomElement.style.backgroundColor = \"#fff\";\r\n    };\r\n\r\n    /**\r\n     * @returns {Grid}\r\n     */\r\n    this.getGrid = function() {\r\n        return grid;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getGridSize = function() {\r\n        return grid.getSize();\r\n    };\r\n\r\n    const lockDomMetrics = function() {\r\n        sheetOffsetLeft = _sheetDomElement.offsetLeft;\r\n        sheetOffsetTop = _sheetDomElement.offsetTop;\r\n        sheetPageScrollXOffset = _window.pageXOffset;\r\n        sheetPageScrollYOffset = _window.pageYOffset;\r\n\r\n        isDomMetricsLockActive = true;\r\n    };\r\n\r\n    const unlockDomMetrics = function() {\r\n        isDomMetricsLockActive = false;\r\n    };\r\n\r\n    this.hasDomMetricsLock = function() {\r\n        return isDomMetricsLockActive;\r\n    };\r\n\r\n    /**\r\n     * @returns {PointSet}\r\n     */\r\n    const getEntityExtentRoutingPoints = function() {\r\n        const pointSet = new PointSet();\r\n        sheetEntities.forEach(function(_obj) {\r\n            const scaledPoints = _obj.getBoundingRectange().getPointsScaledToGrid(self.getGridSize());\r\n            scaledPoints.forEach((_sp) => {\r\n                pointSet.push(_sp);\r\n            });\r\n        });\r\n\r\n        return pointSet;\r\n    };\r\n\r\n    /**\r\n     * @returns {PointSet}\r\n     */    \r\n    const getConnectorRoutingPointsAroundAnchor = function() {\r\n        const entityDescriptors = [];\r\n        sheetEntities.forEach((_e) => {\r\n            entityDescriptors.push(_e.getDescriptor(self.getGridSize()));\r\n        });\r\n\r\n        const routingPointsResult = AccessibleRoutingPointsFinder.find(entityDescriptors, entityDescriptors, self.getGridSize());\r\n\r\n        return routingPointsResult.accessibleRoutingPoints;\r\n    };\r\n\r\n    /**\r\n     * @returns {Line[]}\r\n     */    \r\n    const getConnectorBoundaryLines = function() {\r\n        const boundaryLines = new LineSet();\r\n\r\n        sheetEntities.forEach(function(_obj) {\r\n            const lines = _obj.getBoundingRectange().getLines();\r\n            lines.forEach((_l) => {\r\n                boundaryLines.push(_l);\r\n            });\r\n\r\n            const anchors = _obj.getConnectorAnchors();\r\n            anchors.forEach(function(_anchor) {\r\n                const lines = _anchor.getBoundingRectange().getLines();\r\n                lines.forEach((_l) => {\r\n                    boundaryLines.push(_l);\r\n                });                \r\n            });\r\n        });\r\n\r\n        return boundaryLines;\r\n    };\r\n\r\n    const refreshAllConnectorsInternal = function() {\r\n        lockDomMetrics();\r\n\r\n        const executionTimeT1 = new Date();\r\n        const connectorDescriptors = [];\r\n        objectConnectors.forEach(function(_c) {\r\n            connectorDescriptors.push(_c.getDescriptor());\r\n        });\r\n\r\n        const entityDescriptors = [];\r\n        sheetEntities.forEach(function(_e) {\r\n            entityDescriptors.push(_e.getDescriptor(self.getGridSize()));\r\n        });\r\n\r\n        connectorRoutingWorker.postMessage(\r\n            {\r\n                \"gridSize\": self.getGridSize(),\r\n                \"connectorDescriptors\": connectorDescriptors,\r\n                \"entityDescriptors\": entityDescriptors\r\n            },\r\n            [\r\n\r\n            ]\r\n        );\r\n\r\n        metrics.refreshAllConnectorsInternal.executionTime = (new Date()) - executionTimeT1;\r\n        \r\n        unlockDomMetrics();\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _bufferTimeMs\r\n     */\r\n    this.setConnectorRefreshBufferTime = function(_bufferTimeMs) {\r\n        connectorRefreshBufferTime = _bufferTimeMs;\r\n    };\r\n\r\n    this.refreshAllConnectors = function() {\r\n        // We'll try to coalesce refresh calls within refreshBatchBufferTimeMs \r\n        // Default is 6.944ms, for continuous calls, this corresponds to 144Hz, but actual\r\n        // performance is less given web worker overhead, path computation cost, and browser minimum limit on setTimeout\r\n\r\n        if(connectorRefreshStartTime !== null) {\r\n            const tdelta = (new Date()) - connectorRefreshStartTime;\r\n            if(tdelta < connectorRefreshBufferTime) {\r\n                return; // already scheduled\r\n            }\r\n        }\r\n\r\n        connectorRefreshStartTime = new Date();        \r\n        connectorRefreshTimeout = setTimeout(function() {\r\n            connectorRefreshTimeout = null;\r\n            connectorRefreshStartTime = null;\r\n            refreshAllConnectorsInternal();\r\n        }, connectorRefreshBufferTime);\r\n    };\r\n\r\n    var makeNewConnector = function(_anchorStart, _anchorEnd, _containerDomElement) {\r\n        return new Connector(_anchorStart, _anchorEnd, _containerDomElement);\r\n    };\r\n\r\n    /**\r\n     * @callback ConnectorFactory\r\n     * @param {ConnectorAnchor} _anchorStart\r\n     * @param {ConnectorAnchor} _anchorEnd\r\n     * @param {Element} _containerDomElement\r\n     */\r\n\r\n    /**\r\n     * @param {ConnectorFactory} _connectorFactory\r\n     */\r\n    this.setConnectorFactory = function(_newConnectorFactory) {\r\n        makeNewConnector = _newConnectorFactory;\r\n    };    \r\n\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getTransitionCss = function() {\r\n        return transitionCss;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {String} _css \r\n     */\r\n    this.setTransitionCss = function(_css) {\r\n        transitionCss = _css;\r\n        _sheetDomElement.style.transition = transitionCss;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */    \r\n    this.getTransformOriginX = function() {\r\n        return transformOriginX;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */    \r\n    this.getTransformOriginY = function() {\r\n        return transformOriginY;\r\n    };    \r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getScaleFactor = function() {\r\n        return scaleFactor;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getTranslateX = function() {\r\n        return translateX;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */    \r\n    this.getTranslateY = function() {\r\n        return translateY;\r\n    };    \r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     */\r\n    this.setTransformOrigin = function(_x, _y) {\r\n        transformOriginX = _x;\r\n        transformOriginY = _y;\r\n        _sheetDomElement.style.transformOrigin = `${transformOriginX}px ${transformOriginY}px`;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _scaleFactor \r\n     * @param {Boolean} _adjustFactorToPreserveIntegerGrid \r\n     */\r\n    this.scale = function(_scaleFactor, _adjustFactorToPreserveIntegerGrid) {\r\n        _adjustFactorToPreserveIntegerGrid = _adjustFactorToPreserveIntegerGrid || false;\r\n\r\n        if(_adjustFactorToPreserveIntegerGrid) {\r\n            const newGridSize = self.getGridSize() * _scaleFactor;\r\n            const roundedGridSize = Math.round(newGridSize);\r\n            _scaleFactor = roundedGridSize / self.getGridSize();\r\n        }\r\n\r\n        scaleFactor = _scaleFactor;\r\n        invScaleFactor = 1.0 / scaleFactor;        \r\n\r\n        const scaleMat = \r\n            [\r\n                scaleFactor, 0, 0, 0, \r\n                0, scaleFactor, 0, 0, \r\n                0, 0, scaleFactor, 1, \r\n                0, 0, 0, 1\r\n            ];\r\n\r\n        currentTransformationMatrix = MatrixMath.mat4Multiply(\r\n            currentTransformationMatrix, \r\n            scaleMat\r\n        );\r\n\r\n        invTransformationMatrixStack.push(\r\n            [\r\n                invScaleFactor, 0, 0, 0, \r\n                0, invScaleFactor, 0, 0, \r\n                0, 0, invScaleFactor, 1, \r\n                0, 0, 0, 1\r\n            ]\r\n        );\r\n\r\n        return self;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     */\r\n    this.translate = function(_x, _y) {\r\n        translateX = _x;\r\n        translateY = _y;\r\n\r\n        const translateMatrix =             \r\n            [\r\n                1, 0, 0, 0, \r\n                0, 1, 0, 0, \r\n                0, 0, 1, 0, \r\n                translateX, translateY, 0, 1\r\n            ];\r\n\r\n        currentTransformationMatrix = MatrixMath.mat4Multiply(\r\n            currentTransformationMatrix, \r\n            translateMatrix\r\n        ); \r\n\r\n        invTransformationMatrixStack.push(\r\n            [\r\n                1, 0, 0, -translateX, \r\n                0, 1, 0, -translateY, \r\n                0, 0, 1, 0, \r\n                0, 0, 0, 1\r\n            ]\r\n        );\r\n\r\n        return self;\r\n    };\r\n\r\n    this.applyTransform = function() {\r\n        _sheetDomElement.style.transform = self.getTransformMatrixCss();\r\n        currentInvTransformationMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n        for(let i=0; i<invTransformationMatrixStack.length; i++) {\r\n            currentInvTransformationMatrix = MatrixMath.mat4Multiply(currentInvTransformationMatrix, invTransformationMatrixStack[i]);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @returns {Array}\r\n     */\r\n    this.getTransformMatrix = function() {\r\n        return currentTransformationMatrix;\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */    \r\n    this.getTransformMatrixCss = function() {\r\n        const matElems = currentTransformationMatrix.join(\",\");\r\n        return `matrix3d(${matElems})`;\r\n    };\r\n\r\n    /**\r\n     * @param {DOMRect} _domRect\r\n     * @returns {Rectangle}\r\n     */\r\n    this.transformDomRectToPageSpaceRect = function(_domRect) {\r\n        const pageOffset = self.getPageOffset();\r\n        const sheetOffset = self.getSheetOffset();\r\n\r\n        const left = _domRect.left - sheetOffset.getX() + pageOffset.getX();\r\n        const top = _domRect.top - sheetOffset.getY() + pageOffset.getY();\r\n        const right = _domRect.right - sheetOffset.getX() + pageOffset.getX();\r\n        const bottom = _domRect.bottom - sheetOffset.getY() + pageOffset.getY();\r\n\r\n        // inv transform\r\n        const invTransformedPosLeftTop = MatrixMath.vecMat4Multiply(\r\n            [left, top, 0, 1],\r\n            currentInvTransformationMatrix\r\n        );\r\n\r\n        const invTransformedPosRightBottom = MatrixMath.vecMat4Multiply(\r\n            [right, bottom, 0, 1],\r\n            currentInvTransformationMatrix\r\n        );\r\n\r\n        // we have Sheet space coordinates, transform to Page space and return\r\n        return new Rectangle(\r\n            invTransformedPosLeftTop[0] + sheetOffset.getX(), \r\n            invTransformedPosLeftTop[1] + sheetOffset.getY(), \r\n            invTransformedPosRightBottom[0] + sheetOffset.getX(), \r\n            invTransformedPosRightBottom[1] + sheetOffset.getY()\r\n        );\r\n    };\r\n\r\n    this.resetTransform = function() {\r\n        scaleFactor = 1.0;\r\n        invScaleFactor = 1.0;\r\n        translateX = 0.0;\r\n        translateY = 0.0;\r\n        currentTransformationMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n        currentInvTransformationMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n        invTransformationMatrixStack.length = 0;\r\n        _sheetDomElement.style.transform = \"none\";\r\n    };\r\n\r\n    /**\r\n     * @returns {Point}\r\n     */\r\n    this.getPageOffset = function() {\r\n        if(self.hasDomMetricsLock()) {\r\n            return new Point(sheetPageScrollXOffset, sheetPageScrollYOffset);\r\n        }\r\n\r\n        return new Point(_window.pageXOffset, _window.pageYOffset);\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _p \r\n     * @returns {Number}\r\n     */\r\n    this.snapToGrid = function(_p) {\r\n        var ret = Math.round(_p/self.getGridSize()) * self.getGridSize();\r\n        return Math.max(0, ret - 1);\r\n    };\r\n\r\n    /**\r\n     * @returns {Point}\r\n     */\r\n    this.getSheetOffset = function() {\r\n        if(self.hasDomMetricsLock()) {\r\n            return new Point(sheetOffsetLeft, sheetOffsetTop);\r\n        }\r\n        \r\n        return new Point(_sheetDomElement.offsetLeft, _sheetDomElement.offsetTop);\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getOffsetLeft = function() {\r\n        return _sheetDomElement.offsetLeft;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getOffsetTop = function() {\r\n        return _sheetDomElement.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getWidth = function() {\r\n        return _sheetDomElement.offsetWidth;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getHeight = function() {\r\n        return _sheetDomElement.offsetHeight;\r\n    };\r\n\r\n    /**\r\n     * @param {Entity[]} _objs \r\n     * @returns {Rectangle}\r\n     */\r\n    this.calcBoundingRectForEntities = function(_entities) {\r\n        var minTop = null;\r\n        var minLeft = null;\r\n        var maxBottom = null;\r\n        var maxRight = null;\r\n\r\n        _entities.forEach(function(_obj, index, array) {\r\n            const objRect = _obj.getBoundingRectange();\r\n            const left = objRect.getLeft();\r\n            const top = objRect.getTop();  \r\n            const right = objRect.getRight();\r\n            const bottom = objRect.getBottom();\r\n\r\n            if(minLeft === null || left < minLeft) {\r\n                minLeft = left;\r\n            }\r\n\r\n            if(minTop === null || top < minTop) {\r\n                minTop = top;\r\n            }\r\n\r\n            if(maxBottom === null || bottom > maxBottom) {\r\n                maxBottom = bottom;\r\n            }        \r\n\r\n            if(maxRight === null || right > maxRight) {\r\n                maxRight = right;\r\n            }\r\n        });\r\n\r\n        if(minTop === null || minLeft === null || maxBottom === null || maxRight === null) {\r\n            minTop = 0;\r\n            minLeft = 0;\r\n            maxBottom = 0;\r\n            maxRight = 0;            \r\n        }\r\n\r\n        return new Rectangle(minLeft, minTop, maxRight, maxBottom);\r\n    };\r\n\r\n    /**\r\n     * @returns {Rectangle}\r\n     */\r\n    this.calcBoundingBox = function() {\r\n        if(sheetEntities.length === 0) {    \r\n            return new Rectangle(0, 0, self.getWidth(), self.getHeight());     \r\n        }\r\n\r\n        return self.calcBoundingRectForEntities(sheetEntities);\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _x\r\n     * @param {Number} _y\r\n     * @param {Number} _radius\r\n     * @returns {Entity[]}\r\n     */\r\n    this.getEntitiesAroundPoint = function(_x, _y, _radius) {\r\n        _radius = _radius || 1.0;\r\n\r\n        const result = [];\r\n\r\n        const ptRect = new Rectangle(\r\n            _x - _radius, \r\n            _y - _radius, \r\n            _x + _radius, \r\n            _y + _radius\r\n        );\r\n\r\n        sheetEntities.forEach(function(_obj) {\r\n            if(ptRect.checkIntersect(_obj.getBoundingRectange())) {\r\n                result.push(_obj);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * @param {Rectangle} _rect\r\n     * @returns {Entity[]}\r\n     */\r\n    this.getEntitiesWithinRect = function(_rect) {\r\n        const result = [];\r\n\r\n        sheetEntities.forEach(function(_obj) {\r\n            if(_obj.getBoundingRectange().checkIsWithin(_rect)) {\r\n                result.push(_obj);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };    \r\n      \r\n    /**\r\n     * @returns {Entity[]}\r\n     */\r\n    this.getAllEntities = function() {    \r\n        return sheetEntities;\r\n    };\r\n\r\n    /**\r\n     * @deprecated\r\n     * Helper method to publish an object change to all objects\r\n     * \r\n     * @param {String} _eventName\r\n     * @param {*} _eventData\r\n     */\r\n    this.publishSiblingObjectChange = function(_eventName, _eventData) {\r\n        sheetEntities.forEach(function(_obj) {\r\n            _obj.handleSiblingObjectChange(_eventName, _eventData);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @param {String} _id\r\n     * @returns {Entity|null}\r\n     */   \r\n    this.getEntityById = function(_id) {\r\n        var foundEntity = null;\r\n        sheetEntities.forEach(function(obj, index, array) {\r\n            if(foundEntity === null && obj.getId() === _id) {\r\n                foundEntity = obj;\r\n            }            \r\n        });\r\n        \r\n        return foundEntity;\r\n    };\r\n\r\n    /**\r\n     * @param {Entity} _obj\r\n     */\r\n    this.addEntity = function(_obj) {\r\n        _obj.on(EntityEvent.RESIZE_START, handleResizeStart);\r\n\r\n        _obj.on(EntityEvent.RESIZE, function(e) {\r\n            emitEvent(SheetEvent.ENTITY_RESIZED, { 'object': e.obj });\r\n            self.refreshAllConnectors();    \r\n        });\r\n\r\n        _obj.on(EntityEvent.TRANSLATE_START, handleMoveStart);\r\n\r\n        _obj.on(EntityEvent.TRANSLATE, function(e) {\r\n            refreshAllConnectorsInternal();\r\n            emitEvent(SheetEvent.ENTITY_TRANSLATED, { 'object': e.obj });\r\n        });\r\n\r\n        sheetEntities.push(_obj);\r\n        self.refreshAllConnectors();       \r\n\r\n        emitEvent(SheetEvent.ENTITY_ADDED, { \"object\":_obj });\r\n    };    \r\n\r\n    /**\r\n     * Remove object from the sheet\r\n     * Note: as caller is responsible for putting object into the DOM, caller is responsible for removing it from the DOM\r\n     * \r\n     * @param {String} _entityId\r\n     * @returns {Boolean} \r\n     */\r\n    this.removeEntity = function(_entityId) {\r\n        for(let i=0; i<sheetEntities.length; i++) {\r\n            if(sheetEntities[i].getId() === _entityId) {\r\n                sheetEntities.splice(i, 1);\r\n                self.refreshAllConnectors();\r\n                emitEvent(SheetEvent.ENTITY_REMOVED, { \"object\":sheetEntities[i] });\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * @param {String} _id\r\n     * @returns {Connector|null}\r\n     */    \r\n    this.getConnector = function(_id) {\r\n        for(let c=0; c<objectConnectors.length; c++) {\r\n            if(objectConnectors[c].getId() === _id) {\r\n                return objectConnectors[c];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * @returns {Connector[]}\r\n     */\r\n    this.getAllConnectors = function() {\r\n        return objectConnectors;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Entity} _objA \r\n     * @param {Entity} _objB \r\n     * @returns {Connector[]}\r\n     */\r\n    this.getConnectorsBetweenEntities = function(_entityA, _entityB) {\r\n        const foundConnectors = [];\r\n\r\n        objectConnectors.forEach((_conn) => {\r\n            const aS = _conn.getAnchorStart();\r\n            const aE = _conn.getAnchorEnd();\r\n\r\n            if(_entityA.hasConnectorAnchor(aS) && _entityB.hasConnectorAnchor(aE)) {\r\n                foundConnectors.push(_conn);\r\n            }\r\n\r\n            if(_entityA.hasConnectorAnchor(aE) && _entityB.hasConnectorAnchor(aS)) {\r\n                foundConnectors.push(_conn);\r\n            }            \r\n        });\r\n\r\n        return foundConnectors;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Entity[]} _entitySet\r\n     * @returns {Connector[]}\r\n     */\r\n    this.getConnectorsInEntitySet = function(_entitySet) {\r\n        const foundConnectors = [];\r\n\r\n        for(let i=0; i<_entitySet.length; i++) {\r\n            for(let j=i+1; j<_entitySet.length; j++) {\r\n                const connectorsBetween = self.getConnectorsBetweenEntities(_entitySet[i], _entitySet[j]);\r\n                foundConnectors.push(...connectorsBetween);\r\n            }\r\n        }\r\n\r\n        return foundConnectors;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _connectorId\r\n     * @returns {Entity[]} \r\n     */\r\n    this.getEntitiesConnectedViaConnector = function(_connectorId) {\r\n        const foundEntities = [];\r\n        const allEntities = self.getAllEntities();\r\n\r\n        objectConnectors.forEach((_conn) => {\r\n            if(_conn.getId() !== _connectorId) {\r\n                return;\r\n            }\r\n\r\n            const aS = _conn.getAnchorStart();\r\n            const aE = _conn.getAnchorEnd();\r\n\r\n            allEntities.forEach((_o) => {\r\n                if(_o.hasConnectorAnchor(aS) || _o.hasConnectorAnchor(aE)) {\r\n                    foundEntities.push(_o);\r\n                }\r\n            });\r\n        });\r\n\r\n        return foundEntities;        \r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Entity} _obj\r\n     * @returns {Connector[]} \r\n     */\r\n    this.getConnectorsConnectedToEntity = function(_entity) {\r\n        const foundConnectors = [];\r\n\r\n        objectConnectors.forEach((_conn) => {\r\n            const aS = _conn.getAnchorStart();\r\n            const aE = _conn.getAnchorEnd();\r\n\r\n            if(_entity.hasConnectorAnchor(aS) || _entity.hasConnectorAnchor(aE)) {\r\n                foundConnectors.push(_conn);\r\n            }\r\n\r\n        });\r\n\r\n        return foundConnectors;        \r\n    };\r\n\r\n    /**\r\n     * @param {String} _connectorAnchorId\r\n     * @returns {Entity|null} \r\n     */\r\n    this.getEntityWithConnectorAnchor = function(_connectorAnchorId) {\r\n        const allEntities = self.getAllEntities();\r\n        for(let i=0; i<allEntities.length; i++) {                \r\n            const anchors = allEntities[i].getConnectorAnchors();\r\n            for(let j=0; j<anchors.length; j++) {\r\n                if(anchors[j].getId() === _connectorAnchorId) {\r\n                    return allEntities[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };    \r\n\r\n    this.removeAllConnectors = function() {\r\n        objectConnectors.forEach(function(_conn) {\r\n            _conn.removePathElement();\r\n        });\r\n\r\n        objectConnectors.splice(0, objectConnectors.length);\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Connector} _connector\r\n     * @returns {Boolean}\r\n     */\r\n    this.removeConnector = function(_connector) {\r\n        for(let i=0; i<objectConnectors.length; i++) {\r\n            if(objectConnectors[i] === _connector) {\r\n                _connector.removePathElement();\r\n                objectConnectors.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {ConnectorAnchor} _anchorA \r\n     * @param {ConnectorAnchor} _anchorB \r\n     * @returns {Connector}\r\n     */\r\n    this.makeNewConnectorFromAnchors = function(_anchorA, _anchorB) {\r\n        const newConnector = makeNewConnector(_anchorA, _anchorB, connectorsContainerDomElement);\r\n        const foundConnector = self.getConnector(newConnector.getId());\r\n\r\n        if(foundConnector === null) {\r\n            objectConnectors.push(newConnector);\r\n            newConnector.appendPathToContainerDomElement();\r\n            self.refreshAllConnectors();\r\n            return newConnector;\r\n        }\r\n\r\n        return foundConnector;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Entity} _objA \r\n     * @param {Entity} _objB\r\n     */\r\n    this.findBestConnectorAnchorsToConnectEntities = function(_entityA, _entityB, _onFound) {\r\n        const searchFunc = (_searchData) => {\r\n            const accessibleRoutingPointsResult = AccessibleRoutingPointsFinder.find([_entityA.getDescriptor(self.getGridSize()), _entityB.getDescriptor(self.getGridSize())], sheetEntities, self.getGridSize());\r\n            const result = ConnectorAnchorClosestPairFinder.findClosestPairBetweenObjects(\r\n                _searchData.objectA, \r\n                _searchData.objectB, \r\n                accessibleRoutingPointsResult.connectorAnchorToNumValidRoutingPoints\r\n            );\r\n    \r\n            _searchData.cb(result);\r\n        };\r\n\r\n        setTimeout(function() {\r\n            searchFunc(\r\n                {\r\n                    \"objectA\": _entityA, // deprecated\r\n                    \"objectB\": _entityB, // deprecated\r\n                    \"entityA\": _entityA,\r\n                    \"entityB\": _entityB,                    \r\n                    \"cb\": _onFound\r\n                }\r\n            );\r\n        }, connectorRefreshBufferTime);\r\n    };\r\n\r\n    /**\r\n     * @param {ConnectorAnchor} _anchor\r\n     */\r\n    this.addConnectionAnchorToSelectionStack = function(_anchor) {\r\n        connectorAnchorsSelected.push(_anchor);\r\n\r\n        if(connectorAnchorsSelected.length === 2) {\r\n            self.makeNewConnectorFromAnchors(connectorAnchorsSelected[0], connectorAnchorsSelected[1]);\r\n            connectorAnchorsSelected.length = 0;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _posX \r\n     * @param {Number} _posY \r\n     */\r\n    const dblClickTapHandler = function(_posX, _posY) {\r\n        const entitiesAroundPoint = self.getEntitiesAroundPoint(_posX, _posY);\r\n\r\n        const eventData = {\r\n            'targetPoint': new Point(_posX, _posY),\r\n            'objectsAroundPoint': entitiesAroundPoint, // deprecated\r\n            'entitiesAroundPoint': entitiesAroundPoint\r\n        };\r\n\r\n        emitEvent(SheetEvent.DBLCLICK, eventData);\r\n    };\r\n\r\n    this.initDebugMetricsPanel = function() {\r\n        debugMetricsPanel.init();\r\n        debugMetricsPanel.show();\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _dblTapSpeed\r\n     * @param {Number} _dblTapRadius\r\n     */\r\n    this.initInteractionHandlers = function(_dblTapSpeed, _dblTapRadius) {\r\n\r\n        doubleTapDetector = new DoubleTapDetector(_dblTapSpeed, _dblTapRadius);\r\n\r\n        // dblclick on empty area of the sheet\r\n        _sheetDomElement.addEventListener('dblclick', function (e) {\r\n\r\n            const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                [e.pageX - self.getOffsetLeft(), e.pageY - self.getOffsetTop(), 0, 1],\r\n                currentInvTransformationMatrix\r\n            );\r\n\r\n            dblClickTapHandler(invTransformedPos[0], invTransformedPos[1]);\r\n        });\r\n\r\n        // click anywhere on sheet\r\n        _sheetDomElement.addEventListener('click', function (e) {\r\n            let sheetEntityClicked = false;\r\n            if(e.target !== _sheetDomElement) {\r\n                sheetEntityClicked = true;\r\n            }\r\n\r\n            const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                [e.pageX - self.getOffsetLeft(), e.pageY - self.getOffsetTop(), 0, 1],\r\n                currentInvTransformationMatrix\r\n            );\r\n\r\n            const eventData = {\r\n                'targetPoint': new Point(invTransformedPos[0], invTransformedPos[1]),\r\n                'entityClicked': sheetEntityClicked,\r\n                'canvasObjectClicked': sheetEntityClicked // deprecated\r\n            };\r\n    \r\n            emitEvent(SheetEvent.CLICK, eventData);\r\n        });\r\n\r\n        // touchend on sheet, logic to see if there was a double-tap\r\n        _sheetDomElement.addEventListener('touchend', function(e) {\r\n            const detectResult = doubleTapDetector.processTap(\r\n                e,\r\n                new Point(self.getOffsetLeft(), self.getOffsetTop()),\r\n                currentInvTransformationMatrix,\r\n            );\r\n\r\n            if(detectResult.doubleTapDetected) {\r\n                dblClickTapHandler(detectResult.touchX, detectResult.touchY);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @param {GroupTransformationContainer} _groupTransformationContainer\r\n     */\r\n    this.attachGroupTransformationContainer = function(_groupTransformationContainer) {\r\n        _sheetDomElement.appendChild(_groupTransformationContainer.getContainerDomElement());\r\n        groupTransformationContainers.push(_groupTransformationContainer);\r\n\r\n        _groupTransformationContainer.on(GroupTransformationContainerEvent.TRANSLATE_START, function(e) {\r\n            currentGroupTransformationContainerBeingDragged = e.container;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @param {GroupTransformationContainer} _groupTransformationContainer\r\n     * @returns {Boolean}\r\n     */\r\n    this.detachGroupTransformationContainer = function(_groupTransformationContainer) {\r\n        for(let i=0; i<groupTransformationContainers.length; i++) {\r\n            if(groupTransformationContainers[i] === _groupTransformationContainer) {\r\n                _sheetDomElement.removeChild(_groupTransformationContainer.getContainerDomElement());\r\n                groupTransformationContainers.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _dx \r\n     * @param {Number} _dy \r\n     */\r\n    const handleGroupTransformationContainerMove = function(_dx, _dy) {\r\n        const gtc = currentGroupTransformationContainerBeingDragged;        \r\n        gtc.translateByOffset(_dx, _dy);\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Object} _e\r\n     */\r\n    const handleMoveStart = function(_e) {     \r\n        objectIdBeingDragged = _e.obj.getId();\r\n        objectDragX = _e.x;\r\n        objectDragY = _e.y;\r\n        objectDragStartX = _e.x;\r\n        objectDragStartY = _e.y;        \r\n    };    \r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     */\r\n    const handleMove = function(_x, _y) {\r\n        const entity = self.getEntityById(objectIdBeingDragged);\r\n        const translateOffset = entity.getTranslateHandleOffset();\r\n        const mx = self.snapToGrid(_x + translateOffset.getX());\r\n        const my = self.snapToGrid(_y + translateOffset.getY());\r\n        \r\n        objectDragX = mx;\r\n        objectDragY = my;\t\t\r\n\r\n        entity.translate(mx, my);\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     */\r\n    const handleMoveEnd = function(_x, _y) {\r\n        const entity = self.getEntityById(objectIdBeingDragged);\r\n        const translateOffset = entity.getTranslateHandleOffset();\r\n        const mx = self.snapToGrid(_x + translateOffset.getX());\r\n        const my = self.snapToGrid(_y + translateOffset.getY());\r\n        entity.translate(mx, my);       \r\n    };         \r\n\r\n    /**\r\n     * \r\n     * @param {Object} _e \r\n     */\r\n    const handleResizeStart = function(_e) {       \r\n        objectIdBeingResized = _e.obj.getId();\r\n        objectResizeCursor = _e.resizeCursor;\r\n\r\n        _sheetDomElement.style.cursor = objectResizeCursor;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     */    \r\n    const handleResize = function(_x, _y) {\r\n        const entity = self.getEntityById(objectIdBeingResized);\r\n\r\n        const mx = self.snapToGrid(_x);\r\n        const my = self.snapToGrid(_y);\r\n\r\n        const top = entity.getY();\r\n        const left = entity.getX();\r\n        const newWidth = ((mx - left)+1);\r\n        const newHeight = ((my - top)+1);\r\n\r\n        entity.resize(newWidth, newHeight);\r\n    };\r\n\r\n    const handleResizeEnd = function() {\r\n        objectIdBeingResized = null;\r\n        _sheetDomElement.style.cursor = \"\";\r\n    };    \r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     * @param {Element} _targetElem \r\n     * @returns {Boolean}\r\n     */\r\n    const handleMultiEntitySelectionStart = function(_x, _y, _targetElem) {\r\n        if(multiObjectSelectionStarted) {\r\n            return false; // already doing selection\r\n        }\r\n\r\n        if(_targetElem !== svgElem) { // hacky, but b/c of the SVG overlay, events propagate from the overlay\r\n            return false;\r\n        }\r\n\r\n        if(objectIdBeingDragged !== null) {\r\n            return false;\r\n        }\r\n\r\n        if(objectIdBeingResized !== null) {\r\n            return false;\r\n        }        \r\n\r\n        const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n            [_x, _y, 0, 1],\r\n            currentInvTransformationMatrix\r\n        );\r\n\r\n        multiObjectSelectionStartX = invTransformedPos[0];\r\n        multiObjectSelectionStartY = invTransformedPos[1];\r\n        multiObjectSelectionEndX = invTransformedPos[0];\r\n        multiObjectSelectionEndY = invTransformedPos[1];\r\n        multiObjectSelectionStarted = true;\r\n\r\n        selectionBoxElem.style.left = `${multiObjectSelectionStartX}px`;\r\n        selectionBoxElem.style.top = `${multiObjectSelectionStartY}px`;\r\n        selectionBoxElem.style.width = `0px`;\r\n        selectionBoxElem.style.height = `0px`;\r\n        selectionBoxElem.style.display = \"block\";\r\n\r\n        emitEvent(\r\n            SheetEvent.MULTIPLE_ENTITY_SELECTION_STARTED,\r\n            { \r\n                'x': invTransformedPos[0],\r\n                'y': invTransformedPos[1]\r\n            }\r\n        );\r\n\r\n        return true;\r\n    };\r\n\r\n    const handleMultiEntitySelectionEnd = function() {\r\n        multiObjectSelectionStarted = false;\r\n\r\n        const selectionRect = new Rectangle(\r\n            Math.min(multiObjectSelectionStartX, multiObjectSelectionEndX), \r\n            Math.min(multiObjectSelectionStartY, multiObjectSelectionEndY),\r\n            Math.max(multiObjectSelectionStartX, multiObjectSelectionEndX), \r\n            Math.max(multiObjectSelectionStartY, multiObjectSelectionEndY)\r\n        );\r\n\r\n        const selectedEntities = self.getEntitiesWithinRect(selectionRect);\r\n        const boundingRect = self.calcBoundingRectForEntities(selectedEntities);\r\n\r\n        selectionBoxElem.style.left = `${boundingRect.getLeft()}px`;\r\n        selectionBoxElem.style.top = `${boundingRect.getTop()}px`;\r\n        selectionBoxElem.style.width = `${boundingRect.getWidth()}px`;\r\n        selectionBoxElem.style.height = `${boundingRect.getHeight()}px`;\r\n        selectionBoxElem.style.display = \"none\";\r\n\r\n        emitEvent(\r\n            SheetEvent.MULTIPLE_ENTITIES_SELECTED, \r\n            { \r\n                'selectedObjects': selectedEntities, // deprecated\r\n                'selectedEntities': selectedEntities,\r\n                'boundingRect': boundingRect\r\n            }\r\n        );\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _endX \r\n     * @param {Number} _endY \r\n     */\r\n    const updateSelectionBoxEndPoint = function(_endX, _endY) {\r\n\r\n        const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n            [_endX, _endY, 0, 1],\r\n            currentInvTransformationMatrix\r\n        );\r\n\r\n        multiObjectSelectionEndX = invTransformedPos[0];\r\n        multiObjectSelectionEndY = invTransformedPos[1];\r\n        const width = multiObjectSelectionEndX - multiObjectSelectionStartX;\r\n        const height = multiObjectSelectionEndY - multiObjectSelectionStartY;\r\n\r\n        if(width >= 0) {\r\n            selectionBoxElem.style.width = `${width}px`;\r\n        } else {\r\n            selectionBoxElem.style.left = `${invTransformedPos[0]}px`;\r\n            selectionBoxElem.style.width = `${Math.abs(width)}px`;\r\n        }\r\n\r\n        if(height >= 0) {\r\n            selectionBoxElem.style.height = `${height}px`;\r\n        } else {\r\n            selectionBoxElem.style.top = `${invTransformedPos[1]}px`;\r\n            selectionBoxElem.style.height = `${Math.abs(height)}px`;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {String[]} _selectionRectStyleCssClasses\r\n     */\r\n    this.initMultiEntitySelectionHandler = function(_selectionRectStyleCssClasses) {\r\n        // Create selection box DOM element\r\n        const selBox = _window.document.createElement(\"div\");\r\n        selBox.classList.add(\"ia-selection-box\");\r\n        selBox.style.display = \"none\";\r\n        selBox.style.position = \"absolute\";\r\n        selBox.style.left = \"0px\";\r\n        selBox.style.top = \"0px\";\r\n\r\n        if(typeof _selectionRectStyleCssClasses === 'undefined' || _selectionRectStyleCssClasses.length === 0) {\r\n            selBox.style.border = \"1px solid rgb(158, 158, 158)\";\r\n            selBox.style.background = \"rgba(153, 153, 153, 0.5)\";            \r\n        } else {\r\n            // CSS classes will control styling for things GraphPaper doesn't care about\r\n            // (GraphPaper style concerns are handled via inline styles which will always take precedance)\r\n            _selectionRectStyleCssClasses.forEach(function(_class) {\r\n                selBox.classList.add(_class);\r\n            });\r\n        }\r\n\r\n        selectionBoxElem = _sheetDomElement.appendChild(selBox);\r\n\r\n        const handleTouchSelectionStart = function(e) {\r\n            const hasSelectionStarted = handleMultiEntitySelectionStart(e.touches[0].pageX - self.getOffsetLeft(), e.touches[0].pageY - self.getOffsetTop(), e.target);\r\n        };\r\n\r\n        _sheetDomElement.addEventListener('mousedown', function(e) {\r\n            if (e.which !== 1) {\r\n                return;\r\n            }\r\n\r\n            const hasSelectionStarted = handleMultiEntitySelectionStart(e.pageX - self.getOffsetLeft(), e.pageY - self.getOffsetTop(), e.target);\r\n            if(hasSelectionStarted) {\r\n                e.preventDefault(); // prevents text selection from triggering\r\n            }\r\n        });\r\n\r\n        _sheetDomElement.addEventListener('touchstart', function(e) {\r\n            touchHoldStartInterval = setInterval(function() {\r\n                handleTouchSelectionStart(e);\r\n            }, touchHoldDelayTimeMs);\r\n        });\r\n\r\n        _sheetDomElement.addEventListener('touchend', function(e) {\r\n            clearInterval(touchHoldStartInterval);\r\n        });\r\n\r\n        _sheetDomElement.addEventListener('touchmove', function(e) {\r\n            clearInterval(touchHoldStartInterval);\r\n        });        \r\n    };\r\n\r\n    this.initTransformationHandlers = function() {\r\n        _sheetDomElement.addEventListener('touchstart', function(e) {\r\n            touchMoveLastX = e.touches[0].pageX - self.getOffsetLeft();\r\n            touchMoveLastY = e.touches[0].pageY - self.getOffsetTop();\r\n        });\r\n\r\n        _sheetDomElement.addEventListener('touchmove', function (e) {\r\n            if (objectIdBeingDragged !== null) {\r\n                const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                    [e.touches[0].pageX - self.getOffsetLeft(), e.touches[0].pageY - self.getOffsetTop(), 0, 1],\r\n                    currentInvTransformationMatrix\r\n                );                    \r\n\r\n                handleMove(invTransformedPos[0], invTransformedPos[1]);\r\n                // if we're transforming an object, make sure we don't scroll the sheet\r\n                e.preventDefault();\r\n            }\r\n\r\n            if(objectIdBeingResized !== null) {\r\n                const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                    [e.touches[0].pageX - self.getOffsetLeft(), e.touches[0].pageY - self.getOffsetTop(), 0, 1],\r\n                    currentInvTransformationMatrix\r\n                );     \r\n\r\n                handleResize(invTransformedPos[0], invTransformedPos[1]);\r\n                e.preventDefault();\r\n            }\r\n\r\n            if(currentGroupTransformationContainerBeingDragged !== null) {\r\n                const dx = (e.touches[0].pageX - self.getOffsetLeft()) - touchMoveLastX;\r\n                const dy = (e.touches[0].pageY - self.getOffsetTop()) - touchMoveLastY;\r\n\r\n                const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                    [dx, dy, 0, 1],\r\n                    currentInvTransformationMatrix\r\n                );                    \r\n\r\n                handleGroupTransformationContainerMove(invTransformedPos[0], invTransformedPos[1]);        \r\n                e.preventDefault();        \r\n            }\r\n\r\n            if(multiObjectSelectionStarted) {\r\n                updateSelectionBoxEndPoint(e.touches[0].pageX - self.getOffsetLeft(), e.touches[0].pageY - self.getOffsetTop());\r\n                e.preventDefault();\r\n            }\r\n\r\n            touchMoveLastX = e.touches[0].pageX - self.getOffsetLeft();\r\n            touchMoveLastY = e.touches[0].pageY - self.getOffsetTop();\r\n        });\r\n\r\n        _sheetDomElement.addEventListener('mousemove', function (e) {\r\n            if (objectIdBeingDragged !== null) {\t\t\r\n                const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                    [e.pageX - self.getOffsetLeft(), e.pageY - self.getOffsetTop(), 0, 1],\r\n                    currentInvTransformationMatrix\r\n                );                    \r\n\r\n                handleMove(invTransformedPos[0], invTransformedPos[1]);\r\n            }\r\n\r\n            if(objectIdBeingResized !== null) {\r\n                const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                    [e.pageX - self.getOffsetLeft(), e.pageY - self.getOffsetTop(), 0, 1],\r\n                    currentInvTransformationMatrix\r\n                );     \r\n\r\n                handleResize(invTransformedPos[0], invTransformedPos[1]);\r\n            }\r\n\r\n            if(currentGroupTransformationContainerBeingDragged !== null) {\r\n                const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                    [e.movementX, e.movementY, 0, 1],\r\n                    currentInvTransformationMatrix\r\n                );                    \r\n\r\n                handleGroupTransformationContainerMove(invTransformedPos[0], invTransformedPos[1]);                \r\n            }\r\n\r\n            if(multiObjectSelectionStarted) {\r\n                updateSelectionBoxEndPoint(e.pageX - self.getOffsetLeft(), e.pageY - self.getOffsetTop());\r\n            }\r\n        });\r\n\r\n        _sheetDomElement.addEventListener('touchend', function (e) {\r\n\r\n            // e.touches is empty..\r\n            // Need to use e.changedTouches for final x,y ???\r\n\r\n            if(objectIdBeingDragged !== null) {\r\n                objectIdBeingDragged = null;\r\n            }           \r\n            \r\n            if(objectIdBeingResized !== null) {\r\n                handleResizeEnd();\r\n            }\r\n\r\n            if(currentGroupTransformationContainerBeingDragged !== null) {\r\n                currentGroupTransformationContainerBeingDragged.endTranslate();\r\n                currentGroupTransformationContainerBeingDragged = null;\r\n            }            \r\n\r\n            if(multiObjectSelectionStarted) {\r\n                handleMultiEntitySelectionEnd();\r\n            }\r\n        });\r\n\r\n        _sheetDomElement.addEventListener('mouseup', function (e) {\r\n            if (e.which === 1) {\r\n                if(objectIdBeingDragged !== null) {\r\n\r\n                    const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                        [e.pageX - self.getOffsetLeft(), e.pageY - self.getOffsetTop(), 0, 1],\r\n                        currentInvTransformationMatrix\r\n                    );\r\n\r\n                    handleMoveEnd(invTransformedPos[0], invTransformedPos[1]);\r\n                }\r\n\r\n                if(objectIdBeingResized !== null) {\r\n                    handleResizeEnd();\r\n                }\r\n\r\n                if(currentGroupTransformationContainerBeingDragged !== null) {\r\n                    currentGroupTransformationContainerBeingDragged.endTranslate();\r\n                    currentGroupTransformationContainerBeingDragged = null;\r\n                }\r\n\r\n                if(multiObjectSelectionStarted) {\r\n                    handleMultiEntitySelectionEnd();\r\n                }\r\n\r\n                objectIdBeingDragged = null;\r\n                objectIdBeingResized = null;\r\n            }\r\n        });\r\n\r\n        _sheetDomElement.addEventListener('mousedown', function (e) {\r\n            // if we're dragging something, stop propagation\r\n            if(currentGroupTransformationContainerBeingDragged !== null || objectIdBeingDragged !== null || objectIdBeingResized !== null) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n    };\r\n\r\n    const emitEvent = function(_eventName, _eventData) {\r\n        const allCallbacks = eventHandlers.get(_eventName) || [];\r\n\r\n        for(let i=0; i<allCallbacks.length; i++) {\r\n            const cbFunc = allCallbacks[i];\r\n            cbFunc(_eventData);\r\n        }\r\n    };\r\n\r\n    this.off = function(_eventName, _callback) {\r\n        const allCallbacks = eventHandlers.get(_eventName) || [];\r\n\r\n        for(let i=0; i<allCallbacks.length; i++) {\r\n            if(allCallbacks[i] === _callback) {\r\n                allCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        eventHandlers.set(_eventName, allCallbacks);\r\n    };\r\n\r\n    this.on = function(_eventName, _callback) {\r\n        const allCallbacks = eventHandlers.get(_eventName) || [];\r\n        allCallbacks.push(_callback);\r\n        eventHandlers.set(_eventName, allCallbacks);\r\n    };\r\n\r\n    self.setGrid(new Grid(12.0, '#424242', GRID_STYLE.DOT));\r\n    self.resetTransform();\r\n    self.setTransformOrigin(0, 0);\r\n    self.setTransitionCss(transitionCss);\r\n};\r\n\r\nexport { Sheet };\r\n","import {EntityEvent} from './EntityEvent';\r\nimport {Point} from './Point';\r\nimport {Rectangle} from './Rectangle';\r\nimport {Sheet} from './Sheet';\r\nimport {ConnectorAnchor} from './ConnectorAnchor';\r\nimport { PointSet } from './PointSet';\r\n\r\n/**\r\n * \r\n * @param {String} _id\r\n * @param {Number} _x\r\n * @param {Number} _y\r\n * @param {Number} _width\r\n * @param {Number} _height\r\n * @param {Sheet} _sheet\r\n * @param {Element} _domElement\r\n * @param {Element[]} _translateHandleDomElements\r\n * @param {Element[]} _resizeHandleDomElements\r\n */\r\nfunction Entity(_id, _x, _y, _width, _height, _sheet, _domElement, _translateHandleDomElements, _resizeHandleDomElements) {\r\n    const self = this;\r\n\r\n    const MOUSE_MIDDLE_BUTTON = 1;\r\n\r\n    /**\r\n     * @type {ConnectorAnchor[]}\r\n     */\r\n    const connectorAnchors = [];\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    var nextConnectorAnchorIdSuffix = 1000;\r\n\r\n    /**\r\n     * @type {Element}\r\n     */\r\n    var currentTranslateHandleElementActivated = null;\r\n\r\n    /**\r\n     * @type {Element}\r\n     */\r\n    var currentResizeHandleElementActivated = null;\r\n\r\n    const eventNameToHandlerFunc = new Map();\r\n\r\n    let x = null;\r\n    let y = null;\r\n    let width = null;\r\n    let height = null;\r\n    let hasPendingFrame = false;\r\n\r\n    /**\r\n     * @param {Element} _connectorAnchorDomElement\r\n     * @returns {ConnectorAnchor}\r\n     */    \r\n    this.addNonInteractableConnectorAnchor = function(_connectorAnchorDomElement) {\r\n        const newAnchor = new ConnectorAnchor(_id + `-${nextConnectorAnchorIdSuffix}`, _connectorAnchorDomElement, _sheet);\r\n        connectorAnchors.push(newAnchor);\r\n        nextConnectorAnchorIdSuffix++;\r\n        return newAnchor;\r\n    };\r\n\r\n    /**\r\n     * @param {Element} _connectorAnchorDomElement\r\n     * @returns {ConnectorAnchor}\r\n     */    \r\n    this.addInteractableConnectorAnchor = function(_connectorAnchorDomElement) {     \r\n        const anchor = new ConnectorAnchor(_id + `-${nextConnectorAnchorIdSuffix}`, _connectorAnchorDomElement, _sheet);\r\n\r\n        _connectorAnchorDomElement.addEventListener('click', function(e) {\r\n            _sheet.addConnectionAnchorToSelectionStack(anchor);\r\n        });\r\n\r\n        connectorAnchors.push(anchor);\r\n        nextConnectorAnchorIdSuffix++;\r\n        return anchor;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _gridSize \r\n     * @returns {Point[]}\r\n     */\r\n    this.getConnectorAnchorRoutingPoints = function(_gridSize) {\r\n        const allRoutingPoints = [];\r\n        connectorAnchors.forEach(function(_anchor) {\r\n            const anchorPoints = _anchor.getRoutingPoints(_gridSize);\r\n            anchorPoints.forEach(function(_pt) {\r\n                allRoutingPoints.push(_pt);\r\n            });\r\n        });\r\n\r\n        return allRoutingPoints;\r\n    };\r\n\r\n    /**\r\n     * @returns {ConnectorAnchor[]}\r\n     */\r\n    this.getConnectorAnchors = function() {\r\n        return connectorAnchors;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {ConnectorAnchor} _anchor \r\n     * @returns {Boolean}\r\n     */\r\n    this.hasConnectorAnchor = function(_anchor) {\r\n        const anchors = self.getConnectorAnchors();\r\n        for(let i=0; i<anchors.length; i++) {\r\n            if(anchors[i] === _anchor) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * @returns {Point|null}\r\n     */    \r\n    this.getTranslateHandleOffset = function() {\r\n        if(currentTranslateHandleElementActivated) {\r\n            return new Point(\r\n                -(currentTranslateHandleElementActivated.offsetLeft + currentTranslateHandleElementActivated.offsetWidth * 0.5),\r\n                -(currentTranslateHandleElementActivated.offsetTop  + currentTranslateHandleElementActivated.offsetHeight * 0.5)\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getId = function() {\r\n        return _id;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getX = function() {\r\n        return x;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getY = function() {\r\n        return y;\r\n    };\r\n\r\n    /**\r\n     * @returns {Point}\r\n     */\r\n    this.getPositionOnPage = function() {\r\n        const window = _domElement.ownerDocument.defaultView;\r\n        const boundingRect = _domElement.getBoundingClientRect();\r\n        return new Point(boundingRect.left + window.scrollX, boundingRect.top + window.scrollY);\r\n    };\r\n\r\n    const renderInternal = function() {\r\n        _domElement.style.left = x + 'px';\r\n        _domElement.style.top = y + 'px';\r\n        _domElement.style.width = width + 'px';\r\n        _domElement.style.height = height + 'px';        \r\n        hasPendingFrame = false;\r\n    };\r\n\r\n    this.render = function() {\r\n        if(hasPendingFrame) {\r\n            cancelAnimationFrame(renderInternal);\r\n        }\r\n\r\n        hasPendingFrame = true;\r\n        requestAnimationFrame(renderInternal);\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _x\r\n     * @param {Number} _y\r\n     */\r\n    this.translate = function(_x, _y) {\r\n\r\n        if(_x === x && _y === y) {\r\n            return;\r\n        }\r\n\r\n        x = _x;\r\n        y = _y;\r\n\r\n        self.render();       \r\n\r\n        const observers = eventNameToHandlerFunc.get(EntityEvent.TRANSLATE) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\"obj\":self, \"x\": _x, \"y\": _y});\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getWidth = function() {\r\n        return width;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getHeight = function() {\r\n        return height;\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _width\r\n     * @param {Number} _height\r\n     * @param {Function} _domElementStyleUpdateOverrideFunc\r\n     */\r\n    this.resize = function(_width, _height, _domElementStyleUpdateOverrideFunc) {            \r\n        width = _width;\r\n        height = _height;\r\n\r\n        if(_domElementStyleUpdateOverrideFunc) {\r\n            _domElementStyleUpdateOverrideFunc(_domElement);\r\n        } else {\r\n            self.render();\r\n        }\r\n\r\n        const observers = eventNameToHandlerFunc.get(EntityEvent.RESIZE) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\"obj\":self, \"width\": _width, \"height\": _height});\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @returns {Element}\r\n     */\r\n    this.getDomElement = function() {\r\n        return _domElement;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName\r\n     * @param {*} _eventData\r\n     */\r\n    this.handleSiblingObjectChange = function(_eventName, _eventData) { \r\n\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @returns {Rectangle}\r\n     */\r\n    this.getBoundingRectange = function() {\r\n        const left = x;\r\n        const top = y;\r\n        const right = left + width;\r\n        const bottom = top + height;\r\n\r\n        return new Rectangle(left, top, right, bottom);\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @returns {Rectangle}\r\n     */\r\n    this.getBoundingRectangeInPageSpace = function() {\r\n        const pagePos = self.getPositionOnPage();\r\n        const left = pagePos.getX();\r\n        const top = pagePos.getY();\r\n        const right = left + width;\r\n        const bottom = top + height;\r\n        return new Rectangle(left, top, right, bottom);\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Rectangle} _rectInPageSpace\r\n     * @returns {Rectangle}\r\n     */\r\n    this.computePageToEntitySpaceTransformedRectangle = function(_rectInPageSpace) {\r\n        const noteBoundingRect = self.getBoundingRectangeInPageSpace();\r\n        const rectRelativeToNote = new GraphPaper.Rectangle(\r\n            _rectInPageSpace.getLeft() - noteBoundingRect.getLeft(),\r\n            _rectInPageSpace.getTop() - noteBoundingRect.getTop(),\r\n            _rectInPageSpace.getRight() - noteBoundingRect.getRight(),\r\n            _rectInPageSpace.getBottom() - noteBoundingRect.getBottom()\r\n        );\r\n\r\n        return rectRelativeToNote;\r\n    };\r\n\r\n    /**\r\n     * @returns {Point[]}\r\n     */\r\n    this.getBoundingPoints = function() {\r\n        const topLeft = new Point(self.getX(), self.getY());\r\n        const topRight = new Point(self.getX() + self.getWidth(), self.getY());\r\n        const bottomLeft = new Point(self.getX(), self.getY() + self.getWidth());\r\n        const bottomRight = new Point(self.getX() + self.getWidth(), self.getY() + self.getWidth());\r\n\r\n        return [\r\n            topLeft,\r\n            topRight,\r\n            bottomLeft,\r\n            bottomRight\r\n        ];\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _gridSize\r\n     * @returns {Object}\r\n     */\r\n    this.getDescriptor = function(_gridSize) {\r\n        let outerBoundMinX = self.getX();\r\n        let outerBoundMinY = self.getY();\r\n        let outerBoundMaxX = self.getX() + self.getWidth();\r\n        let outerBoundMaxY = self.getY() + self.getHeight();\r\n\r\n        const anchors = [];\r\n        for(let i=0; i<connectorAnchors.length; i++) {\r\n            const boundingRect = connectorAnchors[i].getBoundingRectange();\r\n            let routingPoints = new PointSet(self.getConnectorAnchorRoutingPoints(_gridSize));\r\n            anchors.push(\r\n                {\r\n                    \"id\": connectorAnchors[i].getId(),\r\n                    \"x\": boundingRect.getLeft(),\r\n                    \"y\": boundingRect.getTop(),\r\n                    \"width\": boundingRect.getWidth(),\r\n                    \"height\": boundingRect.getHeight(),\r\n                    \"routingPointsFloat64Arr\": routingPoints.toFloat64Array()\r\n                }\r\n            );\r\n\r\n            if(boundingRect.getLeft() < outerBoundMinX) {\r\n                outerBoundMinX = boundingRect.getLeft();\r\n            }\r\n\r\n            if(boundingRect.getTop() < outerBoundMinY) {\r\n                outerBoundMinY = boundingRect.getTop();\r\n            }\r\n\r\n            if((boundingRect.getLeft() + boundingRect.getWidth()) > outerBoundMaxX) {\r\n                outerBoundMaxX = (boundingRect.getLeft() + boundingRect.getWidth());\r\n            }\r\n\r\n            if((boundingRect.getTop() + boundingRect.getHeight()) > outerBoundMaxY) {\r\n                outerBoundMaxY = (boundingRect.getTop() + boundingRect.getHeight());\r\n            }\r\n        }\r\n\r\n        return {\r\n            \"id\": self.getId(),\r\n            \"x\": self.getX(),\r\n            \"y\": self.getY(),\r\n            \"width\": self.getWidth(),\r\n            \"height\": self.getHeight(),\r\n            \"connectorAnchors\": anchors,\r\n            \"outerBoundingRect\": {\r\n                \"minX\": outerBoundMinX,\r\n                \"minY\": outerBoundMinY,\r\n                \"maxX\": outerBoundMaxX,\r\n                \"maxY\": outerBoundMaxY\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName \r\n     * @param {*} _handlerFunc \r\n     */\r\n    this.on = function(_eventName, _handlerFunc) {\r\n        const allHandlers = eventNameToHandlerFunc.get(_eventName) || [];\r\n        allHandlers.push(_handlerFunc);\r\n        eventNameToHandlerFunc.set(_eventName, allHandlers);    \r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName \r\n     * @param {*} _callback \r\n     */\r\n    this.off = function(_eventName, _callback) {\r\n        const allCallbacks = eventNameToHandlerFunc.get(_eventName) || [];\r\n\r\n        for(let i=0; i<allCallbacks.length; i++) {\r\n            if(allCallbacks[i] === _callback) {\r\n                allCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        eventNameToHandlerFunc.set(_eventName, allCallbacks);\r\n    };\r\n\r\n    this.suspendTranslateInteractions = function() {\r\n        unbindTranslateHandleElements();\r\n    };\r\n\r\n    this.resumeTranslateInteractions = function() {\r\n        bindTranslateHandleElements();\r\n    };\r\n\r\n    const translateTouchStartHandler = function(e) {\r\n        currentTranslateHandleElementActivated = e.target;\r\n\r\n        const observers = eventNameToHandlerFunc.get(EntityEvent.TRANSLATE_START) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\r\n                \"obj\": self,\r\n                \"x\": e.touches[0].pageX, \r\n                \"y\": e.touches[0].pageY,\r\n                \"isTouch\": true\r\n            });\r\n        });        \r\n\r\n    };\r\n\r\n    const translateMouseDownHandler = function(e) {\r\n        currentTranslateHandleElementActivated = e.target;\r\n        \r\n        const observers = eventNameToHandlerFunc.get(EntityEvent.TRANSLATE_START) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\r\n                \"obj\": self,\r\n                \"x\": e.pageX, \r\n                \"y\": e.pageY,\r\n                \"isTouch\": false\r\n            });\r\n        });        \r\n        \r\n    };\r\n\r\n    const unbindTranslateHandleElements = function() {\r\n        _translateHandleDomElements.forEach((_el) => {\r\n            _el.removeEventListener('touchstart', translateTouchStartHandler);        \r\n            _el.removeEventListener('mousedown', translateMouseDownHandler);\r\n        });\r\n    };\r\n\r\n    const bindTranslateHandleElements = function() {\r\n        _translateHandleDomElements.forEach((_el) => {\r\n            _el.addEventListener('touchstart', translateTouchStartHandler);        \r\n            _el.addEventListener('mousedown', translateMouseDownHandler);\r\n        });\r\n    };\r\n\r\n    const resizeMouseDownHandler = function(_e, _triggeredByElement, _resizeCursor) {\r\n        if (_e.which !== MOUSE_MIDDLE_BUTTON) {\r\n            return;\r\n        }\r\n\r\n        currentResizeHandleElementActivated = _triggeredByElement;\r\n        \r\n        const observers = eventNameToHandlerFunc.get(EntityEvent.RESIZE_START) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\r\n                \"obj\": self,\r\n                \"x\": _e.pageX, \r\n                \"y\": _e.pageY,\r\n                \"resizeCursor\": _resizeCursor,\r\n                \"isTouch\": false\r\n            });\r\n        });    \r\n    };\r\n\r\n    const resizeTouchStartHandler = function(_e, _triggeredByElement, _resizeCursor) {\r\n        currentResizeHandleElementActivated =_triggeredByElement;\r\n        \r\n        const observers = eventNameToHandlerFunc.get(EntityEvent.RESIZE_START) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\r\n                \"obj\": self,\r\n                \"x\": _e.touches[0].pageX,  \r\n                \"y\": _e.touches[0].pageY,\r\n                \"resizeCursor\": _resizeCursor,\r\n                \"isTouch\": true\r\n            });\r\n        });\r\n    };\r\n\r\n    const bindResizeHandleElements = function() {\r\n        _resizeHandleDomElements.forEach((_el) => {\r\n            const cursor = window.getComputedStyle(_el)['cursor'];\r\n\r\n            _el.addEventListener('touchstart', (e) => {\r\n                resizeTouchStartHandler(e, _el, cursor);\r\n            });\r\n\r\n            _el.addEventListener('mousedown', (e) => {\r\n                resizeMouseDownHandler(e, _el, cursor);\r\n            });  \r\n        });\r\n    };\r\n\r\n\r\n    bindTranslateHandleElements();\r\n    bindResizeHandleElements();\r\n    self.translate(_x, _y);\r\n    self.resize(_width, _height);\r\n};\r\n\r\nexport { Entity };\r\n","import {Entity} from './Entity';\r\nimport {GroupTransformationContainerEvent} from './GroupTransformationContainerEvent';\r\n\r\n/**\r\n * @param {Sheet} _sheet\r\n * @param {Entity[]} _entities\r\n * @param {String[]} _containerStyleCssClasses\r\n * @param {Number} _sizeAdjustmentPx\r\n */\r\nfunction GroupTransformationContainer(_sheet, _entities, _containerStyleCssClasses, _sizeAdjustmentPx)  {\r\n    const self = this;\r\n    const eventNameToHandlerFunc = new Map();\r\n\r\n    const calculateBoundingRect = function() {\r\n        var r = _sheet.calcBoundingRectForEntities(_entities);\r\n        if(_sizeAdjustmentPx) {\r\n            r = r.getUniformlyResizedCopy(_sizeAdjustmentPx);\r\n        }\r\n\r\n        return r;\r\n    };\r\n\r\n    var boundingRect = calculateBoundingRect();\r\n\r\n    var accTranslateX = 0.0;\r\n    var accTranslateY = 0.0;    \r\n\r\n    var currentLeft = boundingRect.getLeft();\r\n    var currentTop = boundingRect.getTop();\r\n\r\n    const entityPositionRelativeToBoundingRect = [];\r\n\r\n    _entities.forEach(function(_obj) {\r\n        const rp = {\r\n            \"x\": _obj.getX() - currentLeft,\r\n            \"y\": _obj.getY() - currentTop\r\n        };\r\n\r\n        entityPositionRelativeToBoundingRect.push(rp);\r\n    });\r\n\r\n    const selBox = window.document.createElement(\"div\");\r\n    selBox.classList.add('ia-group-transformation-container');\r\n    selBox.style.display = \"none\";\r\n    selBox.style.position = \"absolute\";\r\n    selBox.style.left = `${currentLeft}px`;\r\n    selBox.style.top = `${currentTop}px`;\r\n    selBox.style.width = `${boundingRect.getWidth()}px`;\r\n    selBox.style.height = `${boundingRect.getHeight()}px`;    \r\n\r\n    // only display the container if we have 1+ entity in the group\r\n    if(_entities.length > 0) {\r\n        selBox.style.display = \"block\";\r\n    }\r\n\r\n    if(typeof _containerStyleCssClasses === 'undefined' || _containerStyleCssClasses.length === 0) {\r\n        // default styling if no classes are provided\r\n        selBox.style.border = \"1px solid rgb(158, 158, 158)\";\r\n        selBox.style.backgroundColor = \"rgba(153, 153, 153, 0.5)\";       \r\n    } else {\r\n        // CSS classes will control styling for things GraphPaper doesn't care about\r\n        // (GraphPaper style concerns are handled via inline styles which will always take precedance)\r\n        _containerStyleCssClasses.forEach(function(_class) {\r\n            selBox.classList.add(_class);\r\n        });\r\n    }\r\n\r\n\r\n    this.getContainerDomElement = function() {\r\n        return selBox;\r\n    };\r\n    \r\n    /**\r\n     * @returns {Entity[]}\r\n     */\r\n    this.getEntities = function() {\r\n        return _entities;\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _dx\r\n     * @param {Number} _dy\r\n     */\r\n    this.translateByOffset = function(_dx, _dy) {\r\n        accTranslateX += _dx;\r\n        accTranslateY += _dy;\r\n\r\n        currentLeft = _sheet.snapToGrid(boundingRect.getLeft() + accTranslateX);\r\n        currentTop = _sheet.snapToGrid(boundingRect.getTop() + accTranslateY);\r\n        selBox.style.left = `${currentLeft}px`;\r\n        selBox.style.top = `${currentTop}px`;        \r\n\r\n        for(let i=0; i<_entities.length; i++) {\r\n            const obj = _entities[i];\r\n            const rp = entityPositionRelativeToBoundingRect[i];\r\n\r\n            obj.translate(\r\n                _sheet.snapToGrid(currentLeft + rp.x), \r\n                _sheet.snapToGrid(currentTop + rp.y)\r\n            );\r\n        }\r\n    };\r\n\r\n    this.endTranslate = function() {\r\n        accTranslateX = 0.0;\r\n        accTranslateY = 0.0;\r\n        boundingRect = calculateBoundingRect();\r\n    };\r\n\r\n    this.initTranslateInteractionHandler = function() {\r\n        selBox.addEventListener('touchstart', translateTouchStartHandler);        \r\n        selBox.addEventListener('mousedown', translateMouseDownHandler);\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName \r\n     * @param {*} _handlerFunc \r\n     */\r\n    this.on = function(_eventName, _handlerFunc) {\r\n        const allHandlers = eventNameToHandlerFunc.get(_eventName) || [];\r\n        allHandlers.push(_handlerFunc);\r\n        eventNameToHandlerFunc.set(_eventName, allHandlers);        \r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName \r\n     * @param {*} _callback \r\n     */\r\n    this.off = function(_eventName, _callback) {\r\n        const allCallbacks = eventNameToHandlerFunc.get(_eventName) || [];\r\n\r\n        for(let i=0; i<allCallbacks.length; i++) {\r\n            if(allCallbacks[i] === _callback) {\r\n                allCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        eventNameToHandlerFunc.set(_eventName, allCallbacks);\r\n    };\r\n\r\n    const translateTouchStartHandler = function(e) {\r\n        const observers = eventNameToHandlerFunc.get(GroupTransformationContainerEvent.TRANSLATE_START) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\r\n                \"container\": self,\r\n                \"x\": e.touches[0].pageX, \r\n                \"y\": e.touches[0].pageY,\r\n                \"isTouch\": true\r\n            });\r\n        });        \r\n\r\n    };\r\n\r\n    const translateMouseDownHandler = function(e) {       \r\n        const observers = eventNameToHandlerFunc.get(GroupTransformationContainerEvent.TRANSLATE_START) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\r\n                \"container\": self,\r\n                \"x\": e.pageX, \r\n                \"y\": e.pageY,\r\n                \"isTouch\": false\r\n            });\r\n        });        \r\n        \r\n    };    \r\n};\r\n\r\nexport {GroupTransformationContainer}\r\n","/**\r\n * \r\n * @param {String} _id \r\n */\r\nfunction Cluster(_id) {\r\n\r\n    const self = this;\r\n\r\n    /**\r\n     * @type {Entity[]}\r\n     */\r\n    const entities = [];\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getId = function() {\r\n        return _id;\r\n    };\r\n\r\n    /**\r\n     * @param {Entity} _obj\r\n     * @returns {Number|null}\r\n     */\r\n    this.getEntityIndex = function(_entity) {\r\n        return self.getEntityIndexById(_entity.getId());\r\n    };\r\n\r\n    /**\r\n     * @param {String} _objId\r\n     * @returns {Number|null}\r\n     */\r\n    this.getEntityIndexById = function(_entityId) {\r\n        for(let i=0; i<entities.length; i++) {\r\n            if(entities[i].getId() === _entityId) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * @param {Entity} _o\r\n     * @returns {Boolean}\r\n     */\r\n    this.addEntity = function(_entity) {\r\n        if(self.getEntityIndex(_entity) !== null) {\r\n            return false;\r\n        }\r\n\r\n        entities.push(_entity);\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * @returns {Entity[]}\r\n     */\r\n    this.getEntities = function() {\r\n        return entities;\r\n    };\r\n\r\n    /**\r\n     * @returns {String[]}\r\n     */\r\n    this.getEntityIds = function() {\r\n        const ids = [];\r\n        entities.forEach(function(_o) {\r\n            ids.push(_o.getId());\r\n        });\r\n\r\n        return ids;\r\n    };    \r\n\r\n    /**\r\n     * @param {String} _id\r\n     * @returns {Boolean}\r\n     */\r\n    this.removeEntityById = function(_id) {\r\n        const idx = self.getEntityIndexById(_id);\r\n        if(idx === null) {\r\n            return false;\r\n        }\r\n\r\n        entities.splice(idx, 1);\r\n        return true;\r\n    };\r\n\r\n    this.removeAllEntities = function() {\r\n        entities.length = 0;\r\n    };\r\n};\r\n\r\nexport { Cluster };\r\n","import {Rectangle} from './Rectangle';\r\nimport {Entity} from './Entity';\r\nimport {Cluster} from './Cluster';\r\n\r\nfunction BoxClusterDetector(_boxExtentOffset) {\r\n    const self = this;\r\n\r\n    /**\r\n     * \r\n     * @param {Entity} _entity \r\n     * @param {Entity[]} _sheetEntitiesArray \r\n     * @returns {Number}\r\n     */\r\n    const getEntityIndexFromArray = function(_entity, _sheetEntitiesArray) {\r\n        for(let i=0; i<_sheetEntitiesArray.length; i++) {\r\n            if(_sheetEntitiesArray[i].getId() === _entity.getId()) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Entity[]} _entities \r\n     * @param {Entity[]} _sheetEntitiesArray \r\n     * @returns {Entity[]}\r\n     */\r\n    const removeEntitiesFromArray = function(_entities, _sheetEntitiesArray) {\r\n        for(let i=0; i<_entities.length; i++) {\r\n            const idx = getEntityIndexFromArray(_entities[i], _sheetEntitiesArray);\r\n            if(idx !== -1) {\r\n                _sheetEntitiesArray.splice(idx, 1);\r\n            }\r\n        }\r\n\r\n        return _sheetEntitiesArray;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Map<Cluster, Number>} _clusterToEntityCountMap \r\n     * @returns {Cluster}\r\n     */\r\n    const getClusterWithMostEntitiesFromClusterMap = function(_clusterToEntityCountMap) {\r\n        var curMaxObjs = 0;\r\n        var curClusterWithMax = null;\r\n\r\n        _clusterToEntityCountMap.forEach(function(_numObjs, _cluster, _map) {\r\n            if(_numObjs > curMaxObjs) {\r\n                curMaxObjs = _numObjs;\r\n                curClusterWithMax = _cluster;\r\n            }\r\n        });\r\n\r\n        return curClusterWithMax;\r\n    };\r\n\r\n    /**\r\n     * @param {Map<Cluster, Number>} _clusterToEntityCountMap \r\n     * @returns {Cluster[]}\r\n     */\r\n    const getClusterArrayFromClusterMap = function(_clusterToEntityCountMap) {\r\n        const resultSet = [];\r\n        _clusterToEntityCountMap.keys().forEach(function(_cluster) {\r\n            resultSet.push(_cluster);\r\n        });\r\n\r\n        return resultSet;\r\n    };\r\n\r\n    /**\r\n     * @param {Entity} _objA\r\n     * @param {Entity} _objB\r\n     * @returns {Boolean}\r\n     */\r\n    this.areEntitiesClose = function(_entityA, _entityB) {\r\n        const nA = new Rectangle(\r\n            _entityA.getX() - _boxExtentOffset, \r\n            _entityA.getY() - _boxExtentOffset, \r\n            _entityA.getX() + _entityA.getWidth() + _boxExtentOffset, \r\n            _entityA.getY() + _entityA.getHeight() + _boxExtentOffset\r\n        );\r\n\r\n        const nB = new Rectangle(\r\n            _entityB.getX() - _boxExtentOffset, \r\n            _entityB.getY() - _boxExtentOffset, \r\n            _entityB.getX() + _entityB.getWidth() + _boxExtentOffset, \r\n            _entityB.getY() + _entityB.getHeight() + _boxExtentOffset\r\n        );\r\n        \r\n        return nA.checkIntersect(nB);\r\n    };\r\n   \r\n    /**\r\n     * @param {Entity} _obj\r\n     * @param {Entity[]} _entitiesUnderConsideration\r\n     * @returns {Entity[]}\r\n     */\r\n    this.getAllEntitiesCloseTo = function(_entity, _entitiesUnderConsideration) {\r\n        const resultSet = [];\r\n        for(let i=0; i<_entitiesUnderConsideration.length; i++) {\r\n            if(_entity.getId() === _entitiesUnderConsideration[i].getId()) {\r\n                continue;\r\n            }\r\n\r\n            if(self.areEntitiesClose(_entity, _entitiesUnderConsideration[i])) {\r\n                resultSet.push(_entitiesUnderConsideration[i]);\r\n            }\r\n        }\r\n\r\n        return resultSet;\r\n    };\r\n\r\n    /**\r\n     * @param {Entity} _seedObj\r\n     * @param {Entity[]} _entitiesUnderConsideration\r\n     * @param {Entity[]} _resultSet\r\n     */\r\n    this.getClusterEntitiesFromSeed = function(_seedEntity, _entitiesUnderConsideration, _resultSet) {\r\n        const closeByEntities = self.getAllEntitiesCloseTo(_seedEntity, _entitiesUnderConsideration);\r\n        if(closeByEntities.length === 0) {\r\n            return [];\r\n        } else {\r\n            removeEntitiesFromArray(closeByEntities.concat([_seedEntity]), _entitiesUnderConsideration);\r\n\r\n            closeByEntities.forEach(function(_o) {\r\n                _resultSet.push(_o);\r\n                self.getClusterEntitiesFromSeed(_o, _entitiesUnderConsideration, _resultSet);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {Entity[]} _entities\r\n     * @param {Cluster[]} _clusters\r\n     * @returns {Map<Cluster,Number>}\r\n     */\r\n    this.findIntersectingClustersForEntities = function(_entities, _clusters) {\r\n        // Map of Cluster that is intersecting to number of entities in _objs that is intersecting the given Cluster\r\n        const intersectingClusterToNumEntitiesIntersecting = new Map();\r\n\r\n        _clusters.forEach(function(_cluster) {\r\n            const clusterEntities = _cluster.getEntities();\r\n\r\n            for(let i=0; i<clusterEntities.length; i++) {\r\n                for(let j=0; j<_entities.length; j++) {\r\n\r\n                    if(clusterEntities[i].getId() !== _entities[j].getId()) {\r\n                        continue;\r\n                    }\r\n\r\n                    if(intersectingClusterToNumEntitiesIntersecting.has(_cluster)) {\r\n                        const count = intersectingClusterToNumEntitiesIntersecting.get(_cluster);\r\n                        intersectingClusterToNumEntitiesIntersecting.set(_cluster, count+1);\r\n                    } else {\r\n                        intersectingClusterToNumEntitiesIntersecting.set(_cluster, 1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return intersectingClusterToNumEntitiesIntersecting;\r\n    };\r\n\r\n    /**\r\n     * @param {Entity} _entity\r\n     * @param {Cluster[]} _clusters\r\n     */\r\n    this.removeEntityFromClusters = function(_entity, _clusters) {\r\n        _clusters.forEach(function(_c) {\r\n            _c.removeEntityById(_entity.getId());\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @param {Entity[]} _entities\r\n     * @param {Cluster[]} _knownClusters\r\n     * @param {Function} _getNewIdFunc\r\n     */\r\n    this.computeClusters = function(_entities, _knownClusters, _getNewIdFunc) {\r\n        const clusters = _knownClusters.map(function(_c) {\r\n            return _c;\r\n        });\r\n\r\n        const entitiesUnderConsideration = _entities.map(function(_o) {\r\n            return _o;\r\n        });\r\n\r\n        while(entitiesUnderConsideration.length > 0) {\r\n            const entity = entitiesUnderConsideration.pop();\r\n\r\n            const entitiesForCluster = [entity];\r\n            self.getClusterEntitiesFromSeed(entity, entitiesUnderConsideration, entitiesForCluster);\r\n\r\n            if(entitiesForCluster.length > 1) {\r\n\r\n                const intersectingClusterToNumEntitiesIntersecting = self.findIntersectingClustersForEntities(entitiesForCluster, clusters);\r\n\r\n                if(intersectingClusterToNumEntitiesIntersecting.size === 0) {\r\n                    const newCluster = new Cluster(_getNewIdFunc());\r\n                    entitiesForCluster.forEach(function(_clusterEntity) {\r\n                        newCluster.addEntity(_clusterEntity);\r\n                    });    \r\n\r\n                    clusters.push(newCluster);\r\n                } else {\r\n                    const clusterToModify = getClusterWithMostEntitiesFromClusterMap(intersectingClusterToNumEntitiesIntersecting);\r\n\r\n                    // Clear out entities in cluster\r\n                    clusterToModify.removeAllEntities();\r\n\r\n                    // Remove entity from any cluster it's currently in, add it to clusterToModify\r\n                    entitiesForCluster.forEach(function(_clusterEntity) {\r\n                        self.removeEntityFromClusters(_clusterEntity, clusters);                    \r\n                        clusterToModify.addEntity(_clusterEntity);\r\n                    });\r\n\r\n                }\r\n\r\n                removeEntitiesFromArray(entitiesForCluster, entitiesUnderConsideration);\r\n                \r\n            } else {\r\n                self.removeEntityFromClusters(entity, clusters);\r\n            }\r\n        }\r\n\r\n        // Filter out clusters w/o any entities\r\n        const nonEmptyClusters = clusters.filter(function(_c) {\r\n            if(_c.getEntities().length >= 2) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return nonEmptyClusters;\r\n    };\r\n};\r\n\r\nexport { BoxClusterDetector };\r\n","import {Point} from './Point';\r\n\r\nconst PointVisibilityMapRouteOptimizer = {\r\n\r\n    /**\r\n     * \r\n     * @param {Point[]} _pointsInRoute\r\n     * @param {Function} _arePointsVisibleToEachOther\r\n     */\r\n    optimize: function(_pointsInRoute, _arePointsVisibleToEachOther) {\r\n        let start = 0;\r\n        let end = _pointsInRoute.length - 1;\r\n\r\n        while(true) {\r\n            if((end-start) <= 1) {\r\n                start++;\r\n                end = _pointsInRoute.length - 1;\r\n\r\n                if(start >= _pointsInRoute.length-2) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(_arePointsVisibleToEachOther(_pointsInRoute[start], _pointsInRoute[end])) {\r\n                _pointsInRoute.splice(start + 1, (end-start) - 1);\r\n                end = _pointsInRoute.length - 1;\r\n            } else {\r\n                end--;\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport { PointVisibilityMapRouteOptimizer }\r\n","import {AccessibleRoutingPointsFinder} from './AccessibleRoutingPointsFinder';\r\nimport {Point} from './Point';\r\nimport {Line} from './Line';\r\nimport {PointSet} from './PointSet';\r\nimport {PointVisibilityMapRouteOptimizer} from './PointVisibilityMapRouteOptimizer';\r\nimport {LineSet} from './LineSet';\r\nimport {LINE_INTERSECTION_TYPE, LineIntersection} from './LineIntersection';\r\nimport {Rectangle} from './Rectangle';\r\n\r\nconst VisiblePoints = {\r\n    isValid: false,\r\n    points: []\r\n};\r\n\r\nconst PointInfo = {\r\n    point: null,\r\n    visiblePoints: null\r\n};\r\n\r\nfunction PointVisibilityMap() {\r\n    const self = this;\r\n\r\n    const entityIdToPointVisibility = new Map();\r\n    const entityIdToBoundaryLineSet = new Map();\r\n    const entityIdToDescriptor = new Map();\r\n    let currentNumRoutingPoints = 0;\r\n    let currentNumOfBoundaryLines = 0;\r\n\r\n    /**\r\n     * @param {Line} _theLine\r\n     * @returns {Boolean}\r\n     */\r\n    const doesLineIntersectAnyBoundaryLines = function(_theLine) {\r\n        for (let [_eid, _boundaryLineSet] of entityIdToBoundaryLineSet) {\r\n            const descriptor = entityIdToDescriptor.get(_eid);\r\n\r\n            if(_theLine.getMinX() > descriptor.outerBoundingRect.maxX) {\r\n                continue;\r\n            }\r\n            \r\n            if(_theLine.getMaxX() < descriptor.outerBoundingRect.minX) {\r\n                continue;\r\n            }\r\n\r\n            if(_theLine.getMinY() > descriptor.outerBoundingRect.maxY) {\r\n                continue;\r\n            }\r\n\r\n            if(_theLine.getMaxY() < descriptor.outerBoundingRect.minY) {\r\n                continue;\r\n            }\r\n\r\n            const boundaryLinesArr = _boundaryLineSet.toArray();\r\n            for(let i=0; i<boundaryLinesArr.length; i++) {\r\n                const intersectionType = boundaryLinesArr[i].computeIntersectionType(_theLine);\r\n                if(intersectionType === LINE_INTERSECTION_TYPE.LINESEG) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const computePointsVisibilityForPoint = function(_pointInfo) {\r\n        _pointInfo.visiblePoints.points.length = 0;\r\n\r\n        for (let [_eid, _pvMap] of entityIdToPointVisibility) {\r\n            for (let [_routingPoint, _visiblePoints] of _pvMap) {\r\n\r\n                const ijLine = new Line(_pointInfo.point, _routingPoint);\r\n                // Note: length check is to avoid adding point being tested to visiblePoints array\r\n                if(ijLine.getLength() > 0 && !doesLineIntersectAnyBoundaryLines(ijLine)) {\r\n                    _pointInfo.visiblePoints.points.push(_routingPoint);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        _pointInfo.visiblePoints.isValid = true;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Point} _ptA \r\n     * @param {Point} _ptB\r\n     * @returns {Boolean} \r\n     */\r\n    const arePointsVisibleToEachOther = function(_ptA, _ptB) {\r\n        const ptAInfo = fetchPointInfoForPoint(_ptA);\r\n        const visiblePts = getVisiblePointsRelativeTo(ptAInfo);\r\n\r\n        for(let i=0; i<visiblePts.length; i++) {\r\n            if(visiblePts[i].isEqual(_ptB)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Object} _pointInfo\r\n     * @returns {Point[]}\r\n     */\r\n    const getVisiblePointsRelativeTo = function(_pointInfo) {\r\n        if(!_pointInfo.visiblePoints.isValid) {\r\n            computePointsVisibilityForPoint(_pointInfo);\r\n        }\r\n        \r\n        return _pointInfo.visiblePoints.points;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Point} _needle \r\n     * @param {Point[]} _haystack \r\n     */\r\n    const isPointInArray = function(_needle, _haystack) {\r\n        for(let i=0; i<_haystack.length; i++) {\r\n            if(_needle.isEqual(_haystack[i])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _currentRouteLength \r\n     * @param {Point[]} _pointsInRoute \r\n     * @param {Object} _currentPointIndex \r\n     * @param {Point} _endPoint \r\n     * @returns {Object|null}\r\n     */\r\n    const routeToEndpoint = function(_currentRouteLength, _pointsInRoute, _currentPointInfo, _endPoint) {\r\n        const currentPoint = _currentPointInfo.point;\r\n        const visiblePoints = getVisiblePointsRelativeTo(_currentPointInfo);\r\n        let curMinCost = Number.MAX_SAFE_INTEGER;\r\n        let visiblePointWithMinCost = null;\r\n\r\n        for(let i=0; i<visiblePoints.length; i++) {\r\n            const visiblePt = visiblePoints[i];\r\n\r\n            // ignore point if it's already in the route\r\n            if(isPointInArray(visiblePt, _pointsInRoute)) {\r\n                continue;\r\n            }\r\n\r\n            // g(n) = length/cost of _startPoint to _vp + _currentRouteLength\r\n            const gn = (new Line(currentPoint, visiblePt)).getLength() + _currentRouteLength;\r\n\r\n            // h(n) = length/cost of _vp to _endPoint\r\n            const hn = (new Line(visiblePt, _endPoint)).getLength();\r\n\r\n            // see if this is the new min\r\n            if((gn + hn) < curMinCost) {\r\n                curMinCost = gn + hn;\r\n                visiblePointWithMinCost = visiblePt;\r\n            }\r\n        }\r\n\r\n        if(curMinCost === Number.MAX_SAFE_INTEGER) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            \"cost\": curMinCost,\r\n            \"point\": visiblePointWithMinCost\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @param {Object} _ed\r\n     * @returns {LineSet}\r\n     */    \r\n    const getBoundaryLinesFromEntityDescriptor = function(_ed) {\r\n        const boundaryLines = new LineSet();\r\n\r\n        const entityBoundingRect = new Rectangle(_ed.x, _ed.y, _ed.x + _ed.width, _ed.y + _ed.height);\r\n        const lines = entityBoundingRect.getLines();\r\n        lines.forEach((_l) => {\r\n            boundaryLines.push(_l);\r\n        });\r\n\r\n        const anchors = _ed.connectorAnchors;\r\n        anchors.forEach(function(_anchor) {\r\n            const anchorBoundingRect = new Rectangle(_anchor.x, _anchor.y, _anchor.x + _anchor.width, _anchor.y + _anchor.height);\r\n            const lines = anchorBoundingRect.getLines();\r\n            lines.forEach((_l) => {\r\n                boundaryLines.push(_l);\r\n            });\r\n        });\r\n\r\n        return boundaryLines;\r\n    };    \r\n\r\n    const hasEntityMutated = function(_old, _new) {\r\n        if(_old.x !== _new.x || _old.y !== _new.y || _old.width !== _new.width || _old.height !== _new.height) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Point} _point \r\n     * @returns {PointInfo|null}\r\n     */\r\n    const fetchPointInfoForPoint = function(_point) {\r\n        for (let [_eid, _pvMap] of entityIdToPointVisibility) {\r\n            for (let [_routingPoint, _visiblePoints] of _pvMap) {\r\n                if(_routingPoint === _point) {\r\n                    return buildPointInfo(_routingPoint, _visiblePoints);\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Point} _pt \r\n     * @param {VisiblePoints} _visiblePoints\r\n     * @returns {PointInfo}\r\n     */\r\n    const buildPointInfo = function(_pt, _visiblePoints) {\r\n        const result = Object.create(PointInfo);\r\n        result.point = _pt;\r\n        result.visiblePoints = _visiblePoints;\r\n        return result;\r\n    };\r\n\r\n    const buildEmptyRoutingPointToVisibleSetMap = function(_entityDescriptor, _allSiblingDescriptors, _gridSize) {\r\n        const entityBoundingRect = new Rectangle(_entityDescriptor.x, _entityDescriptor.y, _entityDescriptor.x + _entityDescriptor.width, _entityDescriptor.y + _entityDescriptor.height);\r\n        const foundPoints = AccessibleRoutingPointsFinder.find([_entityDescriptor], _allSiblingDescriptors, _gridSize);\r\n        const routingPoints = foundPoints.accessibleRoutingPoints.toArray();\r\n        const routingPointToVisibleSet = new Map();\r\n\r\n        for(let j=0; j<routingPoints.length; j++) {\r\n            routingPointToVisibleSet.set(routingPoints[j], { isValid:false, points:[] });\r\n        }\r\n\r\n        // bounding extent routing points\r\n        const scaledPoints = entityBoundingRect.getPointsScaledToGrid(_gridSize);\r\n        scaledPoints.forEach((_sp) => {\r\n            routingPointToVisibleSet.set(_sp, { isValid:false, points:[] });\r\n        }); \r\n\r\n        return routingPointToVisibleSet;\r\n    };\r\n\r\n    const invalidateSiblingPointVisibilityForMutatedEntities = function(_mutatedEntityIds, _gridSize) {\r\n        const allEntityDescriptors = [];\r\n        for (const [_eid, _descriptor] of entityIdToDescriptor) {\r\n            allEntityDescriptors.push(_descriptor);\r\n        }\r\n\r\n        for(let m=0; m<_mutatedEntityIds.length; m++) {\r\n            const descriptor = entityIdToDescriptor.get(_mutatedEntityIds[m]);\r\n            const boundingRect = new Rectangle(descriptor.x, descriptor.y, descriptor.x + descriptor.width, descriptor.y + descriptor.height);\r\n\r\n            for(let i=0; i<allEntityDescriptors.length-1; i++) {\r\n                for(let j=i+1; j<allEntityDescriptors.length; j++) {\r\n                    const spanningRect = new Rectangle(\r\n                        Math.min(allEntityDescriptors[i].outerBoundingRect.minX, allEntityDescriptors[j].outerBoundingRect.minX),\r\n                        Math.min(allEntityDescriptors[i].outerBoundingRect.minY, allEntityDescriptors[j].outerBoundingRect.minY),\r\n                        Math.max(allEntityDescriptors[i].outerBoundingRect.maxX, allEntityDescriptors[j].outerBoundingRect.maxX),\r\n                        Math.max(allEntityDescriptors[i].outerBoundingRect.maxY, allEntityDescriptors[j].outerBoundingRect.maxY),\r\n                    );\r\n\r\n                    if(boundingRect.checkIntersect(spanningRect)) {\r\n                        entityIdToPointVisibility.set(allEntityDescriptors[i].id, buildEmptyRoutingPointToVisibleSetMap(allEntityDescriptors[i], allEntityDescriptors, _gridSize));\r\n                        entityIdToPointVisibility.set(allEntityDescriptors[j].id, buildEmptyRoutingPointToVisibleSetMap(allEntityDescriptors[j], allEntityDescriptors, _gridSize));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.updateRoutingPointsAndBoundaryLinesFromEntityDescriptors = function(_entityDescriptors, _gridSize) {\r\n        currentNumRoutingPoints = 0;\r\n        currentNumOfBoundaryLines = 0;\r\n\r\n        const aliveEntityIds = [];\r\n        const mutatedEntityIds = []; // a mutation is considered any addition, removal, or change\r\n        const deletedEntityIds = [];\r\n\r\n        // update boundary lines\r\n        for(let i=0; i<_entityDescriptors.length; i++) {\r\n            const entityId = _entityDescriptors[i].id;\r\n            aliveEntityIds.push(entityId);\r\n\r\n            const existingEntry = entityIdToBoundaryLineSet.get(entityId);\r\n            const existingDescriptor = entityIdToDescriptor.get(entityId);\r\n            if(existingEntry && !hasEntityMutated(existingDescriptor, _entityDescriptors[i])) {\r\n                currentNumOfBoundaryLines += existingEntry.count();\r\n                continue;\r\n            }\r\n\r\n            const boundaryLinesForEntity = getBoundaryLinesFromEntityDescriptor(_entityDescriptors[i]);\r\n            entityIdToBoundaryLineSet.set(entityId, boundaryLinesForEntity);\r\n\r\n            currentNumOfBoundaryLines += boundaryLinesForEntity.count();\r\n        }\r\n\r\n        // update routing points\r\n        for(let i=0; i<_entityDescriptors.length; i++) {\r\n            const entityId = _entityDescriptors[i].id;\r\n            const existingDescriptor = entityIdToDescriptor.get(entityId);\r\n            if(existingDescriptor && !hasEntityMutated(existingDescriptor, _entityDescriptors[i])) {\r\n                // This entity hasn't changed, but other mutated entities may have changed what's visible from this entity\r\n                //continue;\r\n            }\r\n\r\n            // Entity has been mutated, all routing points for the entity are invalid\r\n            // .. also the inverse relationship (sibling routing points that point to this entity) are also invalid\r\n            const routingPointToVisibleSet = buildEmptyRoutingPointToVisibleSetMap(_entityDescriptors[i], _entityDescriptors, _gridSize);\r\n            entityIdToPointVisibility.set(entityId, routingPointToVisibleSet);\r\n\r\n            entityIdToDescriptor.set(entityId, _entityDescriptors[i]); // take advantage of this loop to also, finally, update descriptors as we're done with mutation checks\r\n\r\n            mutatedEntityIds.push(entityId);\r\n            currentNumRoutingPoints += routingPointToVisibleSet.size;\r\n        }\r\n\r\n        // deal with dead entities\r\n        for (let [_eid, _descriptor] of entityIdToDescriptor) {\r\n            if(aliveEntityIds.includes(_eid)) {\r\n                continue;\r\n            }\r\n\r\n            // something has been remove, what gets invalidated?\r\n            // .. if visibility computations are alway nulled/reset, nothing else necessary\r\n            // .. else, need to figure out which computations are to be invalidated (overlapping rects tell if relationship between 2 entities is affected)\r\n            // .... this applies to additions and mutations as well\r\n\r\n            mutatedEntityIds.push(_eid);\r\n            deletedEntityIds.push(_eid);\r\n        }\r\n\r\n        // for future optimization..\r\n        //invalidateSiblingPointVisibilityForMutatedEntities(mutatedEntityIds, _gridSize);\r\n\r\n        deletedEntityIds.forEach((_eid) => {\r\n            entityIdToDescriptor.delete(_eid);\r\n            entityIdToBoundaryLineSet.delete(_eid);\r\n            entityIdToPointVisibility.delete(_eid);\r\n        });\r\n\r\n        return mutatedEntityIds.length;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getCurrentNumRoutingPoints = function() {\r\n        return currentNumRoutingPoints;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */    \r\n    this.getCurrentNumBoundaryLines = function() {\r\n        return currentNumOfBoundaryLines;\r\n    };\r\n\r\n    /**\r\n     * @param {Point} _point\r\n     * @returns {Point|null}\r\n     */\r\n    this.findVisiblePointInfoClosestTo = function(_point) {\r\n        var result = null;\r\n        var currentMaxLength = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let [_eid, _pvMap] of entityIdToPointVisibility) {\r\n            for (let [_routingPoint, _visiblePoints] of _pvMap) {\r\n                const lineOfSight = new Line(_point, _routingPoint);\r\n                const lineOfSightLength = lineOfSight.getLength();\r\n    \r\n                if(lineOfSightLength < currentMaxLength && !doesLineIntersectAnyBoundaryLines(lineOfSight)) {\r\n                    result = buildPointInfo(_routingPoint, _visiblePoints);\r\n                    currentMaxLength = lineOfSightLength;\r\n                };\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * @param {Point} _startPoint\r\n     * @param {Point} _endPoint\r\n     * @param {Boolean} _optimizeRoute\r\n     * \r\n     * @return {PointSet}\r\n     */\r\n    this.computeRoute = function(_startPoint, _endPoint, _optimizeRoute) {\r\n        // if no valid startpoint or endpoint, we can't route\r\n        if(_startPoint === null || _endPoint === null) {\r\n            return new PointSet();\r\n        }\r\n\r\n        // find closest visible point \r\n        const firstPointInfo = self.findVisiblePointInfoClosestTo(_startPoint);\r\n        if(firstPointInfo === null) {\r\n            return new PointSet();\r\n        }\r\n\r\n        let currentRouteLen = 0;\r\n        const pointsInRoute = [firstPointInfo.point];\r\n        let currentPointInfo = firstPointInfo;\r\n        while(true) {\r\n            const routeSegment = routeToEndpoint(currentRouteLen, pointsInRoute, currentPointInfo, _endPoint);\r\n            if(routeSegment === null) {\r\n                // Is there unobstructed line to endpoint? \r\n                // If not, failed to find route\r\n                const lastSegmentToEndpoint = new Line(pointsInRoute[pointsInRoute.length-1], _endPoint);\r\n                if(doesLineIntersectAnyBoundaryLines(lastSegmentToEndpoint)) {\r\n                    return new PointSet();\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            // update cur path length\r\n            currentRouteLen += (new Line(currentPointInfo.point, routeSegment.point)).getLength();\r\n\r\n            // add new point to path\r\n            pointsInRoute.push(routeSegment.point);\r\n\r\n            // update current point index\r\n            currentPointInfo = fetchPointInfoForPoint(routeSegment.point);\r\n\r\n            // check if we're done\r\n            if((new Line(currentPointInfo.point, _endPoint).getLength()) < 1.0) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(_optimizeRoute) {\r\n            PointVisibilityMapRouteOptimizer.optimize(pointsInRoute, arePointsVisibleToEachOther);\r\n        }\r\n\r\n        return new PointSet(pointsInRoute);\r\n    };\r\n};\r\n   \r\nexport { PointVisibilityMap };\r\n"],"names":["MatrixMath","mat4Multiply","_a","_b","result","i","sum","j","k","vecMat4Multiply","_v","_m","vi","Point","_x","_y","__x","__y","prototype","getX","getY","isEqual","_otherPoint","getCartesianPoint","_sheetWidth","_sheetHeight","toString","toArray","fromArray","_arr","LINE_INTERSECTION_TYPE","Object","freeze","PARALLEL","COINCIDENT","LINE","LINESEG","LineIntersection","_type","_intersectionPoint","__type","__intersectionPoint","getType","getIntersectionPoint","Line","_startPoint","_endPoint","__startPoint","__endPoint","getStartPoint","getEndPoint","_otherLine","getLength","Math","sqrt","pow","getMinX","min","getMaxX","max","getMinY","getMaxY","getDirection","dx","dy","len","createShortenedLine","startReduceByPx","endReduceByPx","dir","computeIntersectionType","thisLineStartPointX","thisLineStartPointY","thisLineEndPointX","thisLineEndPointY","otherLineStartPointX","otherLineStartPointY","otherLineEndPointX","otherLineEndPointY","paramDenom","paramANumer","paramBNumer","paramA","paramB","computeIntersection","xIntersect","yIntersect","SvgPathBuilder","pointToLineTo","_pt","_ptIndex","pointTripletToTesselatedCurvePoints","_points","_curvaturePx","length","Error","controlPoint","lineA","lineB","lineAShortened","lineBShortened","pointsToPath","svgPathParts","ptIdx","ptA","shift","ptB","ptC","newPts","unshift","push","pt","p","join","Dimensions","_width","_height","getWidth","getHeight","Rectangle","_left","_top","_right","_bottom","__left","__top","__right","__bottom","getLeft","getTop","getRight","getBottom","getPoints","getLines","getUniformlyResizedCopy","_resizeByPx","getPointsScaledToGrid","_gridSize","centroid","scaleDx","scaleDy","scaledPoints","checkIntersect","_otherRectangle","checkIsPointWithin","_point","checkIsWithin","GroupTransformationContainerEvent","TRANSLATE_START","EntityEvent","TRANSLATE","RESIZE_START","RESIZE","PointSet","_pointsInput","self","points","_newPoint","pushPointSet","_ps","possibleNewPoints","findPointClosestTo","resultPoint","currentMinLength","Number","MAX_SAFE_INTEGER","forEach","lineToPt","findDistanceToPointClosestTo","findPointsCloseTo","_radius","resultSet","toFloat64Array","Float64Array","fromFloat64Array","_float64Array","count","Array","isArray","call","AccessibleRoutingPointsFinder","find","_subjectEntityDescriptors","_occluderEntityDescriptors","connectorAnchorToNumValidRoutingPoints","Map","allRoutingPoints","filteredRoutingPoints","_entityDescriptor","anchors","connectorAnchors","routingPoints","routingPointsFloat64Arr","_rp","id","set","isPointWithinObj","occluder","boundingRect","x","y","width","height","routingPoint","currentNumRoutingPoints","get","parentAnchorId","SheetEvent","DBLCLICK","CLICK","CONNECTOR_UPDATED","ENTITY_ADDED","ENTITY_REMOVED","ENTITY_RESIZED","ENTITY_TRANSLATED","MULTIPLE_ENTITY_SELECTION_STARTED","MULTIPLE_ENTITIES_SELECTED","ConnectorAnchor","_id","_domElement","_sheet","getDimensions","r","transformDomRectToPageSpaceRect","getBoundingClientRect","getId","getCentroid","sheetOffset","getSheetOffset","pageSpaceRect","halfWidth","halfHeight","getRoutingPoints","dimensions","getBoundingRectange","ClosestPairFinder","findClosestPairBetweenObjects","_objA","_objB","_connectorAnchorToNumValidRoutingPoints","objAConnectorAnchors","getConnectorAnchors","objBConnectorAnchors","startAnchorIdxWithMinDist","endAnchorIdxWithMinDist","minDist","MAX_VALUE","aCentroid","objANumValidRoutingPoints","bCentroid","d","objBNumValidRoutingPoints","DebugMetricsPanel","_window","debugPanelElem","isVisible","init","document","createElement","classList","add","style","display","position","right","top","color","padding","backgroundColor","body","appendChild","show","hide","refresh","_metrics","innerHTML","refreshAllConnectorsInternal","executionTime","connectorRoutingWorker","msgDecodeTime","pointVisibilityMapCreationTime","allPathsComputationTime","numRoutingPoints","numBoundaryLines","connectorsRefreshTime","DoubleTapDetector","_dblTapSpeed","_dblTapRadius","dblTapDetectVars","lastTouchX","lastTouchY","lastTouchTime","dblTapSpeed","dblTapRadius","processTap","_touchEndEvent","_sheetPageOffset","_currentInvTransformationMatrix","changedTouches","invTransformedPos","pageX","pageY","dblTapDetected","now","Date","getTime","timeSinceLastTouch","lastX","lastY","distFromLastTouch","LineSet","_linesInput","lines","_newLine","ConnectorEvent","MOUSE_ENTER","MOUSE_LEAVE","ConnectorRoutingAlgorithm","STRAIGHT_LINE","STRAIGHT_LINE_BETWEEN_ANCHORS","STRAIGHT_LINE_BETWEEN_ANCHORS_AVOID_SELF_INTERSECTION","ASTAR","ASTAR_WITH_ROUTE_OPTIMIZATION","Connector","_anchorStart","_anchorEnd","_containerDomElement","_strokeColor","_strokeWidth","_routingAlgorithm","eventNameToHandlerFunc","markerStartSize","markerEndSize","pathPoints","pathElem","window","createElementNS","setAttribute","stroke","strokeWidth","addEventListener","e","dispatchEvent","svgDomElem","appendPathToContainerDomElement","setMarkerStart","_url","_size","unsetMarkerStart","removeAttribute","setMarkerEnd","unsetMarkerEnd","getPathPoints","getPathLines","totalLength","pathLines","getMidpoint","lengthSoFar","curPathLineWithMidpoint","pathLineLength","lengthBeforeCur","midOnCurPath","getMidpointDirection","_svgPath","_pathPoints","anchorIds","sort","getAnchorStart","getAnchorEnd","removePathElement","remove","addClassToDomElement","_cl","removeClassFromDomElement","getDescriptor","on","_eventName","_handlerFunc","allHandlers","off","_callback","allCallbacks","splice","_eventId","_eventData","observers","handler","GRID_STYLE","DOT","Grid","_color","_style","getSize","getStyle","getSvgImageTile","ConnectorRoutingWorkerJsString","Sheet","_sheetDomElement","svgElem","connectorsContainerDomElement","selectionBoxElem","groupTransformationContainers","currentGroupTransformationContainerBeingDragged","grid","transitionCss","transformOriginX","transformOriginY","touchMoveLastX","touchMoveLastY","translateX","translateY","scaleFactor","invScaleFactor","invTransformationMatrixStack","currentInvTransformationMatrix","currentTransformationMatrix","connectorRefreshBufferTime","sheetEntities","objectConnectors","objectIdBeingDragged","objectIdBeingResized","objectResizeCursor","objectDragX","objectDragY","objectDragStartX","objectDragStartY","doubleTapDetector","debugMetricsPanel","metrics","touchHoldDelayTimeMs","touchHoldStartInterval","multiObjectSelectionStartX","multiObjectSelectionStartY","multiObjectSelectionEndX","multiObjectSelectionEndY","multiObjectSelectionStarted","connectorAnchorsSelected","isDomMetricsLockActive","sheetOffsetLeft","sheetOffsetTop","sheetPageScrollXOffset","sheetPageScrollYOffset","eventHandlers","connectorRefreshStartTime","connectorRefreshTimeout","pendingConnectorRefresh","workerUrl","URL","createObjectURL","Blob","Worker","onmessage","_msg","connectorsRefreshTimeT1","connectorDescriptors","data","refreshCalls","getConnectorDescriptorById","renderInternal","_rc","_c","descriptor","ps","pointsInPath","svgPath","emitEvent","requestAnimationFrame","overallTime","setGrid","_grid","backgroundImage","btoa","backgroundRepeat","getGrid","getGridSize","lockDomMetrics","offsetLeft","offsetTop","pageXOffset","pageYOffset","unlockDomMetrics","hasDomMetricsLock","getEntityExtentRoutingPoints","executionTimeT1","entityDescriptors","_e","postMessage","setConnectorRefreshBufferTime","_bufferTimeMs","refreshAllConnectors","tdelta","setTimeout","makeNewConnector","setConnectorFactory","_newConnectorFactory","getTransitionCss","setTransitionCss","_css","transition","getTransformOriginX","getTransformOriginY","getScaleFactor","getTranslateX","getTranslateY","setTransformOrigin","transformOrigin","scale","_scaleFactor","_adjustFactorToPreserveIntegerGrid","newGridSize","roundedGridSize","round","scaleMat","translate","translateMatrix","applyTransform","transform","getTransformMatrixCss","getTransformMatrix","matElems","_domRect","pageOffset","getPageOffset","left","bottom","invTransformedPosLeftTop","invTransformedPosRightBottom","resetTransform","snapToGrid","_p","ret","getOffsetLeft","getOffsetTop","offsetWidth","offsetHeight","calcBoundingRectForEntities","_entities","minTop","minLeft","maxBottom","maxRight","_obj","index","array","objRect","calcBoundingBox","getEntitiesAroundPoint","ptRect","getEntitiesWithinRect","_rect","getAllEntities","publishSiblingObjectChange","handleSiblingObjectChange","getEntityById","foundEntity","obj","addEntity","handleResizeStart","handleMoveStart","removeEntity","_entityId","getConnector","c","getAllConnectors","getConnectorsBetweenEntities","_entityA","_entityB","foundConnectors","_conn","aS","aE","hasConnectorAnchor","getConnectorsInEntitySet","_entitySet","connectorsBetween","getEntitiesConnectedViaConnector","_connectorId","foundEntities","allEntities","_o","getConnectorsConnectedToEntity","_entity","getEntityWithConnectorAnchor","_connectorAnchorId","removeAllConnectors","removeConnector","_connector","makeNewConnectorFromAnchors","_anchorA","_anchorB","newConnector","foundConnector","findBestConnectorAnchorsToConnectEntities","_onFound","searchFunc","_searchData","accessibleRoutingPointsResult","ConnectorAnchorClosestPairFinder","objectA","objectB","cb","addConnectionAnchorToSelectionStack","_anchor","dblClickTapHandler","_posX","_posY","entitiesAroundPoint","eventData","initDebugMetricsPanel","initInteractionHandlers","sheetEntityClicked","target","detectResult","doubleTapDetected","touchX","touchY","attachGroupTransformationContainer","_groupTransformationContainer","getContainerDomElement","container","detachGroupTransformationContainer","removeChild","handleGroupTransformationContainerMove","_dx","_dy","gtc","translateByOffset","handleMove","entity","translateOffset","getTranslateHandleOffset","mx","my","handleMoveEnd","resizeCursor","cursor","handleResize","newWidth","newHeight","resize","handleResizeEnd","handleMultiEntitySelectionStart","_targetElem","handleMultiEntitySelectionEnd","selectionRect","selectedEntities","updateSelectionBoxEndPoint","_endX","_endY","abs","initMultiEntitySelectionHandler","_selectionRectStyleCssClasses","selBox","border","background","_class","handleTouchSelectionStart","hasSelectionStarted","touches","which","preventDefault","setInterval","clearInterval","initTransformationHandlers","movementX","movementY","endTranslate","stopPropagation","cbFunc","Entity","_translateHandleDomElements","_resizeHandleDomElements","MOUSE_MIDDLE_BUTTON","nextConnectorAnchorIdSuffix","currentTranslateHandleElementActivated","hasPendingFrame","addNonInteractableConnectorAnchor","_connectorAnchorDomElement","newAnchor","addInteractableConnectorAnchor","anchor","getConnectorAnchorRoutingPoints","anchorPoints","getPositionOnPage","ownerDocument","defaultView","scrollX","scrollY","render","cancelAnimationFrame","_domElementStyleUpdateOverrideFunc","getDomElement","getBoundingRectangeInPageSpace","pagePos","computePageToEntitySpaceTransformedRectangle","_rectInPageSpace","noteBoundingRect","rectRelativeToNote","GraphPaper","getBoundingPoints","topLeft","topRight","bottomLeft","bottomRight","outerBoundMinX","outerBoundMinY","outerBoundMaxX","outerBoundMaxY","suspendTranslateInteractions","unbindTranslateHandleElements","resumeTranslateInteractions","bindTranslateHandleElements","translateTouchStartHandler","translateMouseDownHandler","_el","removeEventListener","resizeMouseDownHandler","_triggeredByElement","_resizeCursor","resizeTouchStartHandler","bindResizeHandleElements","getComputedStyle","GroupTransformationContainer","_containerStyleCssClasses","_sizeAdjustmentPx","calculateBoundingRect","accTranslateX","accTranslateY","currentLeft","currentTop","entityPositionRelativeToBoundingRect","rp","getEntities","initTranslateInteractionHandler","Cluster","entities","getEntityIndex","getEntityIndexById","getEntityIds","ids","removeEntityById","idx","removeAllEntities","BoxClusterDetector","_boxExtentOffset","getEntityIndexFromArray","_sheetEntitiesArray","removeEntitiesFromArray","getClusterWithMostEntitiesFromClusterMap","_clusterToEntityCountMap","curMaxObjs","curClusterWithMax","_numObjs","_cluster","_map","areEntitiesClose","nA","nB","getAllEntitiesCloseTo","_entitiesUnderConsideration","getClusterEntitiesFromSeed","_seedEntity","_resultSet","closeByEntities","concat","findIntersectingClustersForEntities","_clusters","intersectingClusterToNumEntitiesIntersecting","clusterEntities","has","removeEntityFromClusters","computeClusters","_knownClusters","_getNewIdFunc","clusters","map","entitiesUnderConsideration","pop","entitiesForCluster","size","newCluster","_clusterEntity","clusterToModify","nonEmptyClusters","filter","PointVisibilityMapRouteOptimizer","optimize","_pointsInRoute","_arePointsVisibleToEachOther","start","end","VisiblePoints","PointInfo","point","visiblePoints","PointVisibilityMap","entityIdToPointVisibility","entityIdToBoundaryLineSet","entityIdToDescriptor","currentNumOfBoundaryLines","doesLineIntersectAnyBoundaryLines","_theLine","_eid","_boundaryLineSet","outerBoundingRect","maxX","minX","maxY","minY","intersectionType","boundaryLinesArr","computePointsVisibilityForPoint","_pointInfo","_pvMap","_routingPoint","_visiblePoints","ijLine","isValid","arePointsVisibleToEachOther","_ptA","_ptB","ptAInfo","fetchPointInfoForPoint","visiblePts","getVisiblePointsRelativeTo","isPointInArray","_needle","_haystack","routeToEndpoint","_currentRouteLength","_currentPointInfo","visiblePt","currentPoint","curMinCost","visiblePointWithMinCost","gn","hn","getBoundaryLinesFromEntityDescriptor","_ed","boundaryLines","entityBoundingRect","_l","anchorBoundingRect","hasEntityMutated","_old","_new","buildPointInfo","create","buildEmptyRoutingPointToVisibleSetMap","_allSiblingDescriptors","foundPoints","accessibleRoutingPoints","routingPointToVisibleSet","_sp","updateRoutingPointsAndBoundaryLinesFromEntityDescriptors","_entityDescriptors","entityId","aliveEntityIds","mutatedEntityIds","deletedEntityIds","existingEntry","existingDescriptor","boundaryLinesForEntity","_descriptor","includes","delete","getCurrentNumRoutingPoints","getCurrentNumBoundaryLines","findVisiblePointInfoClosestTo","currentMaxLength","lineOfSight","lineOfSightLength","computeRoute","_optimizeRoute","firstPointInfo","routeSegment","currentRouteLen","pointsInRoute","currentPointInfo","lastSegmentToEndpoint"],"mappings":"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"}