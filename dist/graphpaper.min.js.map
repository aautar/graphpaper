{"version":3,"file":"graphpaper.min.js","sources":["../src/MatrixMath.js","../src/SvgPathBuilder.js","../src/Dimensions.js","../src/Point.js","../src/LineIntersection.js","../src/Line.js","../src/Rectangle.js","../src/CanvasEvent.js","../src/PointSet.js","../src/LineSet.js","../src/ConnectorAnchor.js","../src/ConnectorEvent.js","../src/Connector.js","../src/PointVisibilityMap.js","../src/Grid.js","../src/Canvas.js","../src/CanvasObject.js","../src/Cluster.js","../src/BoxClusterDetector.js"],"sourcesContent":["const MatrixMath = {\r\n\r\n    mat4Multiply: function(_a, _b) {\r\n\r\n        const result = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n        for(let i=0; i<4; i++) {\r\n            for(let j=0; j<4; j++) {\r\n\r\n                var sum = 0;\r\n                for(let k=0; k<4; k++) {\r\n                    sum += _a[k + 4*i] * _b[j + 4*k];\r\n                }\r\n\r\n                result[j + 4*i] = sum;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    vecMat4Multiply: function(_v, _m) {\r\n        const result = [0, 0, 0, 0];\r\n        for(let vi=0; vi<4; vi++) {\r\n            result[vi] = \r\n                (_v[0] * _m[(vi*4) + 0]) + \r\n                (_v[1] * _m[(vi*4) + 1]) + \r\n                (_v[2] * _m[(vi*4) + 2]) + \r\n                (_v[3] * _m[(vi*4) + 3]);\r\n        }\r\n\r\n        return result;\r\n    }\r\n};\r\n\r\nexport { MatrixMath };\r\n","const SvgPathBuilder = {\r\n\r\n    /**\r\n     * \r\n     * @param {Point} _pt \r\n     * @returns {String}\r\n     */\r\n    pointToLineTo: function(_pt) {\r\n        return \"L\" + _pt.getX() + \" \" + _pt.getY();\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {Point[]} _points \r\n     * @returns {String}\r\n     */\r\n    pointsToPath: function(_points) {\r\n        const startPt = _points[0];\r\n\r\n        const lineToString = [];\r\n        for(let i=1; i<_points.length; i++) {\r\n            const p = _points[i];\r\n            lineToString.push(SvgPathBuilder.pointToLineTo(p));\r\n        }\r\n        \r\n        const startCoordString = startPt.getX() + \" \" + startPt.getY();\r\n        const pathString = 'M' + startCoordString + lineToString.join(\" \");\r\n\r\n        return pathString;\r\n    },\r\n\r\n};\r\n\r\nexport { SvgPathBuilder };\r\n","/**\r\n * \r\n * @param {Number} _width\r\n * @param {Number} _height\r\n */\r\nfunction Dimensions(_width, _height) {\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */       \r\n    this.getWidth = function() {\r\n        return _width;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */       \r\n    this.getHeight = function() {\r\n        return _height;\r\n    };\r\n};\r\n\r\nexport { Dimensions };\r\n","/**\r\n * \r\n * @param {Number} _x\r\n * @param {Number} _y\r\n */\r\nfunction Point(_x, _y) {\r\n\r\n    this.__x = _x;\r\n    this.__y = _y;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */     \r\nPoint.prototype.getX = function() {\r\n    return this.__x;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */     \r\nPoint.prototype.getY = function() {\r\n    return this.__y;\r\n};\r\n\r\n/**\r\n * @param {Point} _otherPoint\r\n * @returns {Boolean}\r\n */\r\nPoint.prototype.isEqual = function(_otherPoint) {\r\n    if(this.__x === _otherPoint.getX() && this.__y === _otherPoint.getY()) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * @returns {Point}\r\n */\r\nPoint.prototype.getCartesianPoint = function(_canvasWidth, _canvasHeight) {\r\n    return new Point(\r\n        this.__x - (_canvasWidth * 0.5),\r\n        -this.__y + (_canvasHeight * 0.5)\r\n    );\r\n};\r\n\r\n/**\r\n * @returns {String}\r\n */\r\nPoint.prototype.toString = function() {\r\n    return this.__x + \" \" + this.__y;\r\n};\r\n\r\nexport { Point };\r\n","import  {Point} from './Point';\r\n\r\nconst LINE_INTERSECTION_TYPE = Object.freeze({\r\n\tPARALLEL: \"parallel\",\t\t// no intersection, lines are parallel\r\n    COINCIDENT: \"coincident\",\t// no intersection, lines are coincident\r\n\tLINE: \"line\",\t\t\t\t// the lines intersect, but the intersection point is beyond the bounds of the line segments\r\n\tLINESEG: \"lineseg\",\t\t\t// the lines intersect, and the intersection point is within the bounds of the line segments\r\n});\r\n\r\n/**\r\n * \r\n * @param {LINE_INTERSECTION_TYPE} _type \r\n * @param {Point} _intersectionPoint \r\n */\r\nfunction LineIntersection(_type, _intersectionPoint) {\r\n\r\n    /**\r\n     * @returns {LINE_INTERSECTION_TYPE}\r\n     */\r\n    this.getType = function() {\r\n        return _type;\r\n    };\r\n\r\n    /**\r\n     * @returns {Point|null}\r\n     */\r\n    this.getIntersectionPoint = function() {\r\n        return _intersectionPoint;\r\n    };\r\n};\r\n\r\nexport {LINE_INTERSECTION_TYPE, LineIntersection};\r\n","import  {Point} from './Point';\r\nimport  {LINE_INTERSECTION_TYPE, LineIntersection} from './LineIntersection';\r\n\r\n/**\r\n * \r\n * @param {Point} _startPoint\r\n * @param {Point} _endPoint\r\n */\r\nfunction Line(_startPoint, _endPoint) {   \r\n\r\n    if(typeof _startPoint === 'undefined' || _startPoint === null) {\r\n        throw \"Line missing _startPoint\";\r\n    }\r\n\r\n    if(typeof _endPoint === 'undefined' || _endPoint === null) {\r\n        throw \"Line missing _endPoint\";\r\n    }\r\n\r\n    this.__startPoint = _startPoint;\r\n    this.__endPoint = _endPoint;\r\n};\r\n\r\n\r\n/**\r\n * @returns {Point}\r\n */       \r\nLine.prototype.getStartPoint = function() {\r\n    return this.__startPoint;\r\n};\r\n\r\n/**\r\n * @returns {Point}\r\n */       \r\nLine.prototype.getEndPoint = function() {\r\n    return this.__endPoint;\r\n};\r\n\r\n/**\r\n * @param {Line} _otherLine\r\n * @returns {Boolean}\r\n */\r\nLine.prototype.isEqual = function(_otherLine) {\r\n    if(this.getStartPoint().isEqual(_otherLine.getStartPoint()) && this.getEndPoint().isEqual(_otherLine.getEndPoint())) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * @returns {Number}\r\n */\r\nLine.prototype.getLength = function() {\r\n    return Math.sqrt(\r\n        Math.pow(this.__endPoint.getX() - this.__startPoint.getX(), 2) + Math.pow(this.__endPoint.getY() - this.__startPoint.getY(), 2)\r\n    );\r\n};\r\n\r\n/**\r\n * Calculate unit length direction vector\r\n * \r\n * @returns {Point}\r\n */\r\nLine.prototype.getDirection = function() {\r\n    const dx = this.__endPoint.getX() - this.__startPoint.getX();\r\n    const dy = this.__endPoint.getY() - this.__startPoint.getY();\r\n\r\n    const len = Math.sqrt(dx*dx + dy*dy);\r\n\r\n    return new Point(       \r\n        dx / len,\r\n        dy / len\r\n    );    \r\n};\r\n\r\n/**\r\n * @param {Line} _otherLine\r\n * @returns {LINE_INTERSECTION_TYPE}\r\n */\r\nLine.prototype.computeIntersectionType = function(_otherLine) {\r\n    const thisLineStartPointX = this.__startPoint.getX();\r\n    const thisLineStartPointY = this.__startPoint.getY();\r\n    const thisLineEndPointX = this.__endPoint.getX();\r\n    const thisLineEndPointY = this.__endPoint.getY();        \r\n    const otherLineStartPointX = _otherLine.getStartPoint().getX();\r\n    const otherLineStartPointY = _otherLine.getStartPoint().getY();\r\n    const otherLineEndPointX = _otherLine.getEndPoint().getX();\r\n    const otherLineEndPointY = _otherLine.getEndPoint().getY();\r\n\r\n    const paramDenom = (otherLineEndPointY-otherLineStartPointY)*(thisLineEndPointX-thisLineStartPointX) - (otherLineEndPointX-otherLineStartPointX)*(thisLineEndPointY-thisLineStartPointY);\r\n    const paramANumer = (otherLineEndPointX-otherLineStartPointX)*(thisLineStartPointY-otherLineStartPointY) - (otherLineEndPointY - otherLineStartPointY)*(thisLineStartPointX-otherLineStartPointX);\r\n    const paramBNumer = (thisLineEndPointX-thisLineStartPointX)*(thisLineStartPointY-otherLineStartPointY) - (thisLineEndPointY-thisLineStartPointY)*(thisLineStartPointX-otherLineStartPointX);\r\n\r\n    if(paramDenom == 0) {\r\n        if(paramDenom == 0 && paramANumer == 0 && paramBNumer==0)\r\n            return LINE_INTERSECTION_TYPE.COINCIDENT;\r\n        else\r\n            return LINE_INTERSECTION_TYPE.PARALLEL;\r\n    }\r\n\r\n    const paramA = paramANumer / paramDenom;\r\n    const paramB = paramBNumer / paramDenom;\r\n    \r\n    if(paramA > 1.0 || paramA < 0.0 || paramB > 1.0 || paramB < 0.0) {\r\n        return LINE_INTERSECTION_TYPE.LINE;\r\n    } else {\r\n        return LINE_INTERSECTION_TYPE.LINESEG;\r\n    }\r\n};\r\n    \r\n/**\r\n * @param {Line} _otherLine\r\n * @returns {LINE_INTERSECTION_RESULT}\r\n */\r\nLine.prototype.computeIntersection = function(_otherLine) {\r\n\r\n    const thisLineStartPointX = this.__startPoint.getX();\r\n    const thisLineStartPointY = this.__startPoint.getY();\r\n    const thisLineEndPointX = this.__endPoint.getX();\r\n    const thisLineEndPointY = this.__endPoint.getY();        \r\n    const otherLineStartPointX = _otherLine.getStartPoint().getX();\r\n    const otherLineStartPointY = _otherLine.getStartPoint().getY();\r\n    const otherLineEndPointX = _otherLine.getEndPoint().getX();\r\n    const otherLineEndPointY = _otherLine.getEndPoint().getY();\r\n\r\n    const paramDenom = (otherLineEndPointY-otherLineStartPointY)*(thisLineEndPointX-thisLineStartPointX) - (otherLineEndPointX-otherLineStartPointX)*(thisLineEndPointY-thisLineStartPointY);\r\n    const paramANumer = (otherLineEndPointX-otherLineStartPointX)*(thisLineStartPointY-otherLineStartPointY) - (otherLineEndPointY - otherLineStartPointY)*(thisLineStartPointX-otherLineStartPointX);\r\n    const paramBNumer = (thisLineEndPointX-thisLineStartPointX)*(thisLineStartPointY-otherLineStartPointY) - (thisLineEndPointY-thisLineStartPointY)*(thisLineStartPointX-otherLineStartPointX);\r\n\r\n    if(paramDenom == 0) {\r\n        if(paramDenom == 0 && paramANumer == 0 && paramBNumer==0)\r\n            return new LineIntersection(LINE_INTERSECTION_TYPE.COINCIDENT, null);\r\n        else\r\n            return new LineIntersection(LINE_INTERSECTION_TYPE.PARALLEL, null);\r\n    }\r\n\r\n    const paramA = paramANumer / paramDenom;\r\n    const paramB = paramBNumer / paramDenom;\r\n\r\n    const xIntersect = this.__startPoint.getX() + paramA*(this.__endPoint.getX()-this.__startPoint.getX());\r\n    const yIntersect = this.__startPoint.getY() + paramA*(this.__endPoint.getY()-this.__startPoint.getY());\r\n    \r\n    if(paramA > 1.0 || paramA < 0.0 || paramB > 1.0 || paramB < 0.0) {\r\n        return new LineIntersection(LINE_INTERSECTION_TYPE.LINE, new Point(xIntersect, yIntersect));\r\n    } else {\r\n        return new LineIntersection(LINE_INTERSECTION_TYPE.LINESEG, new Point(xIntersect, yIntersect));\r\n    }\r\n};\r\n\r\nexport { Line };\r\n","import {Point} from './Point';\r\nimport {Line} from './Line';\r\nimport  {LINE_INTERSECTION_TYPE, LineIntersection} from './LineIntersection';\r\n\r\n/**\r\n * \r\n * @param {Number} _left\r\n * @param {Number} _top\r\n * @param {Number} _right\r\n * @param {Number} _bottom\r\n */\r\nfunction Rectangle(_left, _top, _right, _bottom)  {\r\n    \r\n    const self=this;\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getLeft = function() {\r\n        return _left;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getTop = function() {\r\n        return _top;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getRight = function() {\r\n        return _right;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getBottom = function() {\r\n        return _bottom;\r\n    };\r\n\r\n    /**\r\n     * @returns {Point[]}\r\n     */\r\n    this.getPoints = function() {\r\n        return [\r\n            new Point(_left, _top),\r\n            new Point(_right, _top),\r\n            new Point(_right, _bottom),\r\n            new Point(_left, _bottom)\r\n        ];\r\n    };\r\n\r\n    /**\r\n     * @returns {Line[]}\r\n     */\r\n    this.getLines = function() {\r\n        return [\r\n            new Line(new Point(_left, _top), new Point(_right, _top)),\r\n            new Line(new Point(_right, _top), new Point(_right, _bottom)),\r\n            new Line(new Point(_right, _bottom), new Point(_left, _bottom)),\r\n            new Line(new Point(_left, _bottom), new Point(_left, _top))\r\n        ];\r\n    };\r\n\r\n    /**\r\n     * Scale the bounding box by _gridSize, and return the points comprising the box\r\n     * \r\n     * @param {Number} _gridSize\r\n     * @returns {Point[]}\r\n     */\r\n    this.getPointsScaledToGrid = function(_gridSize) {\r\n\r\n        const centroid = new Point(\r\n            _left + ((_right-_left)*0.5),\r\n            _top + ((_bottom-_top)*0.5)\r\n        );\r\n\r\n        const scaleDx = ((_right - centroid.getX()) + _gridSize) / (_right - centroid.getX());\r\n        const scaleDy = ((_bottom - centroid.getY()) + _gridSize) / (_bottom - centroid.getY());        \r\n       \r\n        const scaledPoints = [\r\n            new Point(\r\n                ((_left - centroid.getX())*scaleDx) + centroid.getX(), \r\n                ((_top - centroid.getY())*scaleDy) + centroid.getY()\r\n            ),\r\n\r\n            new Point(\r\n                ((_right - centroid.getX())*scaleDx) + centroid.getX(), \r\n                ((_top - centroid.getY())*scaleDy) + centroid.getY()\r\n            ),\r\n\r\n            new Point(\r\n                ((_right - centroid.getX())*scaleDx) + centroid.getX(), \r\n                ((_bottom - centroid.getY())*scaleDy) + centroid.getY()\r\n            ),\r\n\r\n            new Point(\r\n                ((_left - centroid.getX())*scaleDx) + centroid.getX(), \r\n                ((_bottom - centroid.getY())*scaleDy) + centroid.getY()\r\n            )\r\n        ];\r\n\r\n        return scaledPoints;\r\n    };    \r\n\r\n    /**\r\n     * \r\n     * @param {Rectangle} _otherRectangle\r\n     * @returns {Boolean}\r\n     */\r\n    this.checkIntersect = function(_otherRectangle) {\r\n        if(_bottom < _otherRectangle.getTop()) {\r\n            return false;\r\n        }\r\n\r\n        if(_top > _otherRectangle.getBottom()) {\r\n            return false;\r\n        }\r\n\r\n        if(_right < _otherRectangle.getLeft()) {\r\n            return false;\r\n        }\r\n\r\n        if(_left > _otherRectangle.getRight()) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {Point} _point \r\n     */\r\n    this.checkIsPointWithin = function(_point) {\r\n        if(_point.getX() >= _left && _point.getX() <= _right && _point.getY() >= _top && _point.getY() <= _bottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Rectangle} _otherRectangle\r\n     * @returns {Boolean}\r\n     */\r\n    this.checkIsWithin = function(_otherRectangle) {\r\n        if( _bottom <= _otherRectangle.getBottom() &&\r\n            _top >= _otherRectangle.getTop() &&\r\n            _right <= _otherRectangle.getRight() &&\r\n            _left >= _otherRectangle.getLeft()\r\n        ) {\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n};\r\n\r\nexport { Rectangle }\r\n","const CanvasEvent = Object.freeze({\r\n    DBLCLICK: \"dblclick\",\r\n    CLICK: \"click\",\r\n    CONNECTOR_UPDATED: \"connector-updated\",\r\n    OBJECT_ADDED: \"object-added\",\r\n    OBJECT_REMOVED: \"object-removed\",\r\n    OBJECT_RESIZED: \"object-resized\",\r\n    OBJECT_TRANSLATED: \"object-translated\"\r\n});\r\n\r\n\r\nexport { CanvasEvent };\r\n","import  {Point} from './Point';\r\nimport  {Line} from './Line';\r\n\r\n/**\r\n * Unique collection of Point objects\r\n * \r\n * @param {Point[]|Float64Array|undefined} _pointsInput\r\n */\r\nfunction PointSet(_pointsInput) {\r\n\r\n    const self = this;\r\n\r\n    /**\r\n     * @type {Point[]}\r\n     */\r\n    const points = [];\r\n\r\n    /**\r\n     * @param {Point} _newPoint\r\n     */\r\n    this.push = function(_newPoint) {\r\n        for(let i=0; i<points.length; i++) {\r\n            if(_newPoint.isEqual(points[i])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        points.push(_newPoint);\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * @param {PointSet} _ps\r\n     */\r\n    this.pushPointSet = function(_ps) {\r\n        const possibleNewPoints = _ps.toArray();\r\n        for(let i=0; i<possibleNewPoints.length; i++) {\r\n            self.push(possibleNewPoints[i]);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Point} _point \r\n     * @returns {Point}\r\n     */\r\n    this.findPointClosestTo = function(_point) {\r\n        var resultPoint = null;\r\n        var currentMinLength = Number.MAX_SAFE_INTEGER;\r\n\r\n        points.forEach(function(_pt) {\r\n            const lineToPt = new Line(_point, _pt);\r\n            if(lineToPt.getLength() < currentMinLength) {\r\n                resultPoint = _pt;\r\n                currentMinLength = lineToPt.getLength();\r\n            }\r\n        });\r\n        \r\n        return resultPoint;        \r\n    };\r\n\r\n    this.findDistanceToPointClosestTo = function(_point) {\r\n        var currentMinLength = Number.MAX_SAFE_INTEGER;\r\n\r\n        points.forEach(function(_pt) {\r\n            const lineToPt = new Line(_point, _pt);\r\n            if(lineToPt.getLength() < currentMinLength) {\r\n                currentMinLength = lineToPt.getLength();\r\n            }\r\n        });\r\n        \r\n        return currentMinLength;        \r\n    };    \r\n\r\n    /**\r\n     * \r\n     * @param {Point} _point \r\n     * @returns {PointSet}\r\n     */\r\n    this.findPointsCloseTo = function(_point, _radius) {\r\n        const resultSet = new PointSet();\r\n\r\n        points.forEach(function(_pt) {\r\n            const lineToPt = new Line(_point, _pt);\r\n            if(lineToPt.getLength() <= _radius) {\r\n                resultSet.push(_pt);\r\n            }\r\n        });\r\n        \r\n        return resultSet;        \r\n    };    \r\n\r\n    /**\r\n     * @returns {Point[]}\r\n     */\r\n    this.toArray = function() {\r\n        return points;\r\n    };\r\n\r\n    /**\r\n     * @returns {Float64Array}\r\n     */\r\n    this.toFloat64Array = function() {\r\n\r\n        const result = new Float64Array(points.length * 2);\r\n        for(let i=0; i<points.length; i++) {\r\n            result[0 + (i*2)] = points[i].getX();\r\n            result[1 + (i*2)] = points[i].getY();\r\n        }\r\n\r\n        return result;\r\n    };\r\n    \r\n    /**\r\n     * @param {Float64Array} _float64Array\r\n     */\r\n    const fromFloat64Array = function(_float64Array) {\r\n        points.length = 0;\r\n        for(let i=0; i<_float64Array.length; i+=2) {\r\n            points.push(\r\n                new Point(_float64Array[i], _float64Array[i+1])\r\n            );\r\n        }\r\n    };    \r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.count = function() {\r\n        return points.length;\r\n    };\r\n\r\n    if(_pointsInput && Array.isArray(_pointsInput)) {\r\n        _pointsInput.forEach(self.push);\r\n    } else if(_pointsInput && Object.prototype.toString.call(_pointsInput) === '[object Float64Array]') {\r\n        fromFloat64Array(_pointsInput);\r\n    } else { }    \r\n\r\n};\r\n\r\nexport { PointSet };\r\n","import  {Point} from './Point';\r\nimport  {Line} from './Line';\r\n\r\n/**\r\n * Unique collection of Line objects\r\n * \r\n * @param {Line[]|Float64Array|undefined} _linesInput\r\n */\r\nfunction LineSet(_linesInput) {\r\n\r\n    const self = this;\r\n    \r\n    /**\r\n     * @type {Line[]}\r\n     */\r\n    const lines = [];    \r\n\r\n    /**\r\n     * @param {Line} _newLine\r\n     */\r\n    this.push = function(_newLine) {\r\n        var alreadyInLinesArray = false;\r\n        lines.forEach(function(_existingLine) {\r\n            if(_newLine.isEqual(_existingLine)) {\r\n                alreadyInLinesArray = true;\r\n            }\r\n        });        \r\n\r\n        if(alreadyInLinesArray) {\r\n            return false;\r\n        }\r\n\r\n        lines.push(_newLine);\r\n        return true;\r\n    };\r\n  \r\n    /**\r\n     * @returns {Line[]}\r\n     */\r\n    this.toArray = function() {\r\n        return lines;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.count = function() {\r\n        return lines.length;\r\n    };\r\n\r\n    /**\r\n     * @returns {Float64Array}\r\n     */\r\n    this.toFloat64Array = function() {\r\n        const result = new Float64Array(lines.length * 4);\r\n        for(let i=0; i<lines.length; i++) {\r\n            result[0 + (i*4)] = lines[i].getStartPoint().getX();\r\n            result[1 + (i*4)] = lines[i].getStartPoint().getY();\r\n            result[2 + (i*4)] = lines[i].getEndPoint().getX();\r\n            result[3 + (i*4)] = lines[i].getEndPoint().getY();\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * @param {Float64Array} _float64Array\r\n     */\r\n    const fromFloat64Array = function(_float64Array) {\r\n        lines.length = 0;\r\n        for(let i=0; i<_float64Array.length; i+=4) {\r\n            lines.push(\r\n                new Line(\r\n                    new Point(_float64Array[i], _float64Array[i+1]),\r\n                    new Point(_float64Array[i+2], _float64Array[i+3])\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    if(_linesInput && Array.isArray(_linesInput)) {\r\n        _linesInput.forEach(self.push);\r\n    } else if(_linesInput && Object.prototype.toString.call(_linesInput) === '[object Float64Array]') {\r\n        fromFloat64Array(_linesInput);\r\n    } else { }    \r\n};\r\n\r\nexport { LineSet };\r\n","import  {Point} from './Point';\r\nimport  {Rectangle} from './Rectangle';\r\n\r\n/**\r\n * @param {String} _id\r\n * @param {Element} _domElement\r\n * @param {Canvas} _canvas\r\n */\r\nfunction ConnectorAnchor(_id, _domElement, _canvas) {\r\n    \r\n    const self = this;\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getId = function() {\r\n        return _id;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */     \r\n    this.getX = function() {\r\n        return self.getCentroid().getX();\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */     \r\n    this.getY = function() {\r\n        return self.getCentroid().getY();\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getWidth = function() {\r\n        const r = _domElement.getBoundingClientRect();\r\n        return (r.right - r.left);\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getHeight = function() {\r\n        const r = _domElement.getBoundingClientRect();\r\n        return (r.bottom - r.top);\r\n    };\r\n\r\n    /**\r\n     * @returns {Point}\r\n     */\r\n    this.getCentroid = function() {\r\n        const viewportRelativeRect = _domElement.getBoundingClientRect();\r\n        const pageOffset = _canvas.getPageOffset();        \r\n        return new Point(\r\n            viewportRelativeRect.left + pageOffset.getX() + (self.getWidth() * 0.5), \r\n            viewportRelativeRect.top + pageOffset.getY() + (self.getHeight() * 0.5)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _gridSize \r\n     * @returns {Point[]}\r\n     */\r\n    this.getRoutingPoints = function(_gridSize) {\r\n\r\n        const centroid = self.getCentroid();\r\n        const halfWidth = self.getWidth() * 0.5;\r\n        const halfHeight = self.getHeight() * 0.5;\r\n\r\n        return [\r\n            new Point(centroid.getX() + halfWidth + _gridSize, centroid.getY()),\r\n            new Point(centroid.getX() - halfWidth - _gridSize, centroid.getY()),\r\n            new Point(centroid.getX(), centroid.getY() + halfHeight + _gridSize),\r\n            new Point(centroid.getX(), centroid.getY() - halfHeight - _gridSize),\r\n        ];\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @returns {Rectangle}\r\n     */\r\n    this.getBoundingRectange = function() {\r\n        const centroid = self.getCentroid();\r\n        const halfWidth = self.getWidth() * 0.5;\r\n        const halfHeight = self.getHeight() * 0.5;\r\n\r\n        return new Rectangle(\r\n            centroid.getX() - halfWidth, \r\n            centroid.getY() - halfHeight, \r\n            centroid.getX() + halfWidth, \r\n            centroid.getY() + halfHeight\r\n        );\r\n    };\r\n};\r\n\r\nexport { ConnectorAnchor };\r\n","const ConnectorEvent = Object.freeze({\r\n    CLICK: 'connector-click'\r\n});\r\n\r\nexport { ConnectorEvent };\r\n","import {ConnectorAnchor} from './ConnectorAnchor';\r\nimport {ConnectorEvent} from './ConnectorEvent';\r\nimport {Line} from './Line';\r\nimport {Point} from './Point';\r\n\r\n/**\r\n * \r\n * @param {ConnectorAnchor} _anchorStart \r\n * @param {ConnectorAnchor} _anchorEnd\r\n * @param {Element} _containerDomElement\r\n * @param {String} _strokeColor\r\n * @param {String} _strokeWidth\r\n */\r\nfunction Connector(_anchorStart, _anchorEnd, _containerDomElement, _strokeColor, _strokeWidth) {\r\n    \r\n    const self = this;\r\n\r\n    const eventNameToHandlerFunc = new Map();\r\n\r\n    if(typeof _strokeColor === 'undefined') {\r\n        _strokeColor = '#000';\r\n    }\r\n\r\n    if(typeof _strokeWidth === 'undefined') {\r\n        _strokeWidth = '2px';\r\n    }\r\n\r\n    /**\r\n     * @type {Point[]|null}\r\n     */\r\n    let pathPoints = null;\r\n\r\n    /**\r\n     * @type {Element}\r\n     */\r\n    const pathElem = window.document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\r\n    pathElem.setAttribute(\"d\", 'M0 0 L0 0');\r\n    pathElem.style.stroke = _strokeColor; \r\n    pathElem.style.strokeWidth = _strokeWidth;         \r\n\r\n    pathElem.addEventListener(\"click\", function(e) {\r\n        const observers = eventNameToHandlerFunc.get(ConnectorEvent.CLICK) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\"connector\":self, \"clickedAtX\": e.pageX, \"clickedAtY\": e.pageY});\r\n        });\r\n    });\r\n\r\n    /**\r\n     * @type {Element}\r\n     */\r\n    var svgDomElem = null;\r\n\r\n    this.appendPathToContainerDomElement = function() {\r\n        svgDomElem = _containerDomElement.appendChild(pathElem);\r\n    };\r\n\r\n    /**\r\n     * @param {String} _url\r\n     */    \r\n    this.setMarkerStartUrl = function(_url) {\r\n        pathElem.setAttribute(`marker-start`, `url(${_url})`);\r\n    };\r\n\r\n    /**\r\n     * @param {String} _url\r\n     */\r\n    this.setMarkerEndUrl = function(_url) {\r\n        pathElem.setAttribute(`marker-end`, `url(${_url})`);\r\n    };\r\n\r\n    /**\r\n     * @returns {Point[]|null}\r\n     */\r\n    this.getPathPoints = function() {\r\n        return pathPoints;\r\n    };\r\n\r\n    /**\r\n     * @returns {Line[]}\r\n     */\r\n    this.getPathLines = function() {\r\n        if(pathPoints === null || pathPoints.length < 2) {\r\n            return [];\r\n        }\r\n\r\n        const lines = [];\r\n        for(let i=0; i<pathPoints.length-1; i++) {\r\n            lines.push(new Line(pathPoints[i], pathPoints[i+1]));\r\n        }\r\n\r\n        return lines;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getLength = function() {\r\n        let totalLength = 0;\r\n\r\n        const pathLines = self.getPathLines();\r\n        for(let i=0; i<pathLines.length; i++) {\r\n            totalLength += pathLines[i].getLength();\r\n        }\r\n        \r\n        return totalLength;\r\n    };\r\n\r\n    /**\r\n     * @returns {Point}\r\n     */\r\n    this.getMidpoint = function() {\r\n        const totalLength = self.getLength();\r\n        const pathLines = self.getPathLines();\r\n\r\n        let lengthSoFar = 0;\r\n        let curPathLineWithMidpoint = null;\r\n\r\n        for(let i=0; i<pathLines.length; i++) {\r\n            curPathLineWithMidpoint = pathLines[i];\r\n            const pathLineLength = pathLines[i].getLength();\r\n            lengthSoFar += pathLineLength;\r\n\r\n            if(lengthSoFar >= totalLength/2.0) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        const lengthBeforeCur = (lengthSoFar - curPathLineWithMidpoint.getLength());\r\n        const midOnCurPath = (totalLength / 2.0) - lengthBeforeCur; // i.e. distance to midpoint\r\n\r\n        const p = midOnCurPath / curPathLineWithMidpoint.getLength();\r\n\r\n        return new Point(\r\n            curPathLineWithMidpoint.getStartPoint().getX() + (p * (curPathLineWithMidpoint.getEndPoint().getX() - curPathLineWithMidpoint.getStartPoint().getX())),\r\n            curPathLineWithMidpoint.getStartPoint().getY() + (p * (curPathLineWithMidpoint.getEndPoint().getY() - curPathLineWithMidpoint.getStartPoint().getY()))\r\n        );\r\n    };\r\n\r\n    /**\r\n     * @returns {Point}\r\n     */\r\n    this.getMidpointDirection = function() {\r\n        const totalLength = self.getLength();\r\n        const pathLines = self.getPathLines();\r\n\r\n        let lengthSoFar = 0;\r\n        let curPathLineWithMidpoint = null;\r\n\r\n        for(let i=0; i<pathLines.length; i++) {\r\n            curPathLineWithMidpoint = pathLines[i];\r\n            const pathLineLength = pathLines[i].getLength();\r\n            lengthSoFar += pathLineLength;\r\n\r\n            if(lengthSoFar >= totalLength/2.0) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(curPathLineWithMidpoint === null) {\r\n            return pathLines[0].getDirection();\r\n        }\r\n\r\n        return curPathLineWithMidpoint.getDirection();\r\n    };\r\n\r\n\r\n    /**\r\n     * @param {String} _svgPath\r\n     * @param {Point[]} _pathPoints\r\n     */\r\n    this.refresh = function(_svgPath, _pathPoints) {\r\n        pathPoints = _pathPoints;\r\n        pathElem.setAttribute(\"d\", _svgPath);\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getId = function() {\r\n        const anchorIds = [_anchorStart.getId(), _anchorEnd.getId()].sort();\r\n        return anchorIds.join(':');\r\n    };\r\n\r\n    /**\r\n     * @returns {ConnectorAnchor}\r\n     */\r\n    this.getAnchorStart = function() {\r\n        return _anchorStart;\r\n    };\r\n\r\n    /**\r\n     * @returns {ConnectorAnchor}\r\n     */    \r\n    this.getAnchorEnd = function() {\r\n        return _anchorEnd;\r\n    };\r\n\r\n    this.removePathElement = function() {\r\n        pathElem.remove();\r\n    };\r\n\r\n    /**\r\n     * @param {String} _cl\r\n     * @returns {undefined}\r\n     */\r\n    this.addClassToDomElement = function(_cl) {\r\n        pathElem.classList.add(_cl);\r\n    };\r\n\r\n    /**\r\n     * @param {String} _cl\r\n     * @returns {undefined}\r\n     */    \r\n    this.removeClassFromDomElement = function(_cl) {\r\n        pathElem.classList.remove(_cl);\r\n    };\r\n\r\n    /**\r\n     * @returns {Object}\r\n     */\r\n    this.getDescriptor = function() {\r\n        return {\r\n            \"id\": self.getId(),\r\n            \"anchor_start_centroid\": _anchorStart.getCentroid().toString(),\r\n            \"anchor_end_centroid\": _anchorEnd.getCentroid().toString(),\r\n        };\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName \r\n     * @param {*} _handlerFunc \r\n     */\r\n    this.on = function(_eventName, _handlerFunc) {\r\n        const allHandlers = eventNameToHandlerFunc.get(_eventName) || [];\r\n        allHandlers.push(_handlerFunc);\r\n        eventNameToHandlerFunc.set(_eventName, allHandlers);        \r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName \r\n     * @param {*} _callback \r\n     */\r\n    this.off = function(_eventName, _callback) {\r\n        const allCallbacks = eventHandlers.get(_eventName) || [];\r\n\r\n        for(let i=0; i<allCallbacks.length; i++) {\r\n            if(allCallbacks[i] === _callback) {\r\n                allCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        eventHandlers.set(_eventName, allCallbacks);\r\n    };    \r\n};\r\n\r\nexport { Connector };\r\n","import {Point} from './Point';\r\nimport {Line} from './Line';\r\nimport {PointSet} from './PointSet';\r\nimport {LineSet} from './LineSet';\r\nimport  {LINE_INTERSECTION_TYPE, LineIntersection} from './LineIntersection';\r\n\r\n/**\r\n * \r\n * @param {PointSet} _freePoints\r\n * @param {LineSet} _boundaryLines\r\n */\r\nfunction PointVisibilityMap(_freePoints, _boundaryLines) {\r\n\r\n    const self = this;\r\n\r\n    const boundaryLinesArr = _boundaryLines.toArray();\r\n    const freePointsArr = _freePoints.toArray();\r\n    const pointToVisibleSet = new Array(_freePoints.count()); // index represents entry in freePointsArr\r\n\r\n    /**\r\n     * @param {Line} _theLine\r\n     * @returns {Boolean}\r\n     */\r\n    const doesLineIntersectAnyBoundaryLines = function(_theLine) {\r\n\r\n        for(let b=0; b<boundaryLinesArr.length; b++) {\r\n            const intersectionType = boundaryLinesArr[b].computeIntersectionType(_theLine);\r\n            if(intersectionType === LINE_INTERSECTION_TYPE.LINESEG) {\r\n                return true;\r\n            }\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    const computePointsVisibility = function() {\r\n        for(let i=0; i<freePointsArr.length; i++) {\r\n            pointToVisibleSet[i] = [];   \r\n        }\r\n\r\n        for(let i=0; i<freePointsArr.length; i++) {            \r\n            for(let j=i+1; j<freePointsArr.length; j++) {\r\n\r\n                // line representing line-of-sight between the 2 points\r\n                const ijLine = new Line(freePointsArr[i], freePointsArr[j]);\r\n\r\n                if(!doesLineIntersectAnyBoundaryLines(ijLine)) {\r\n                    pointToVisibleSet[i].push(freePointsArr[j]);\r\n                    pointToVisibleSet[j].push(freePointsArr[i]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const getVisiblePointsFrom = function(_currentPoint) {\r\n        for(let i=0; i<freePointsArr.length; i++) {\r\n\r\n            if(freePointsArr[i].isEqual(_currentPoint)) {\r\n                const visiblePoints = pointToVisibleSet[i];\r\n                return visiblePoints;\r\n            }            \r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _currentRouteLength \r\n     * @param {Point[]} _pointsInRoute \r\n     * @param {Point} _currentPoint \r\n     * @param {Point} _endPoint \r\n     * @returns {Object|null}\r\n     */\r\n    const routeToEndpoint = function(_currentRouteLength, _pointsInRoute, _currentPoint, _endPoint) {\r\n\r\n        var visiblePoints = getVisiblePointsFrom(_currentPoint);       \r\n        var curMinCost = Number.MAX_SAFE_INTEGER;\r\n        var visiblePointWithMinCost = null;\r\n\r\n        visiblePoints.forEach(function(_vp) {\r\n            // ignore point if it's already in the route\r\n            for(let i=0; i<_pointsInRoute.length; i++) {\r\n                if(_vp.isEqual(_pointsInRoute[i])) {\r\n                    return; // point already in route, try another\r\n                }\r\n            }\r\n\r\n            // g(n) = length/cost of _startPoint to _vp + _currentRouteLength\r\n            const gn = (new Line(_currentPoint, _vp)).getLength() + _currentRouteLength;\r\n\r\n            // h(n) = length/cost of _vp to _endPoint\r\n            const hn = (new Line(_vp, _endPoint)).getLength();\r\n\r\n            // see if this is the new min\r\n            if((gn + hn) < curMinCost) {\r\n                curMinCost = gn + hn;\r\n                visiblePointWithMinCost = _vp;\r\n            }\r\n        });\r\n\r\n        if(curMinCost === Number.MAX_SAFE_INTEGER) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            \"cost\": curMinCost,\r\n            \"point\": visiblePointWithMinCost\r\n        };\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Array} _pointsInRoute \r\n     */\r\n    const optimizeRoute = function(_pointsInRoute) {\r\n\r\n        let ptrA = 0;\r\n\r\n        while(true) {\r\n\r\n            if(ptrA+2 >= _pointsInRoute.length) {\r\n                break;\r\n            }            \r\n\r\n            const ln = new Line(_pointsInRoute[ptrA], _pointsInRoute[ptrA + 2]);\r\n\r\n            if(!doesLineIntersectAnyBoundaryLines(ln)) {\r\n                _pointsInRoute.splice(ptrA + 1, 1);\r\n            } else {\r\n                ptrA++;\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @param {Point} _point\r\n     * @returns {Point|null}\r\n     */\r\n    this.findPointClosestTo = function(_point) {\r\n        var resultPoint = null;\r\n        var currentMaxLength = Number.MAX_SAFE_INTEGER;\r\n\r\n        freePointsArr.forEach(function(_ptKey) {\r\n            const lineOfSight = new Line(_point, _ptKey);\r\n            if(lineOfSight.getLength() < currentMaxLength) {\r\n                resultPoint = _ptKey;\r\n                currentMaxLength = lineOfSight.getLength();\r\n            }\r\n        });\r\n        \r\n        return resultPoint;\r\n    };\r\n\r\n    /**\r\n     * @param {Point} _point\r\n     * @returns {Point|null}\r\n     */\r\n    this.findVisiblePointClosestTo = function(_point) {\r\n\r\n        var resultPoint = null;\r\n        var currentMaxLength = Number.MAX_SAFE_INTEGER;\r\n\r\n        freePointsArr.forEach(function(_freePt) {\r\n\r\n            const lineOfSight = new Line(_point, _freePt);\r\n            const lineOfSightLength = lineOfSight.getLength();\r\n\r\n            if(lineOfSightLength < currentMaxLength && !doesLineIntersectAnyBoundaryLines(lineOfSight)) {\r\n                resultPoint = _freePt;\r\n                currentMaxLength = lineOfSightLength;\r\n            };\r\n\r\n        });\r\n        \r\n        return resultPoint;\r\n    };\r\n\r\n    /**\r\n     * @param {Point} _startPoint\r\n     * @param {Point} _endPoint\r\n     * \r\n     * @return {PointSet}\r\n     */\r\n    this.computeRoute = function(_startPoint, _endPoint) {\r\n\r\n        // if no valid startpoint or endpoint, we can't route\r\n        if(_startPoint === null || _endPoint === null) {\r\n            return new PointSet();\r\n        }\r\n\r\n        // find closest visible point \r\n        const firstRoutingPoint = self.findVisiblePointClosestTo(_startPoint);\r\n        if(firstRoutingPoint === null) {\r\n            return new PointSet();\r\n        }\r\n\r\n        var currentRouteLen = 0;\r\n        const pointsInRoute = [firstRoutingPoint];\r\n        var currentPoint = firstRoutingPoint;\r\n        while(true) {\r\n            const routeSegment = routeToEndpoint(currentRouteLen, pointsInRoute, currentPoint, _endPoint);\r\n            if(routeSegment === null) {\r\n\r\n                // Is there unobstructed line to endpoint? \r\n                // If not, failed to find route\r\n                const lastSegmentToEndpoint = new Line(pointsInRoute[pointsInRoute.length-1], _endPoint);\r\n                if(doesLineIntersectAnyBoundaryLines(lastSegmentToEndpoint)) {\r\n                    return new PointSet();\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            currentRouteLen += (new Line(currentPoint, routeSegment.point)).getLength();\r\n            pointsInRoute.push(routeSegment.point);\r\n            currentPoint = routeSegment.point;\r\n\r\n            if((new Line(currentPoint, _endPoint).getLength()) < 1.0) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        optimizeRoute(pointsInRoute);\r\n\r\n        return new PointSet(pointsInRoute);\r\n\r\n    };\r\n\r\n    computePointsVisibility();\r\n};\r\n    \r\nexport { PointVisibilityMap };\r\n","const GRID_STYLE = {\r\n    LINE: 'line',\r\n    DOT: 'dot'\r\n};\r\n\r\n/**\r\n * \r\n * @param {Number} _size\r\n * @param {String} _color\r\n * @param {String} _style\r\n */\r\nfunction Grid(_size, _color, _style) {\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getSize = function() {\r\n        return _size;\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getStyle = function() {\r\n        return _style;\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getSvgImageTile = function() {\r\n        if(_style === GRID_STYLE.LINE) {\r\n            return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + _size + '\" height=\"' + _size + '\"><rect width=\"' + _size + '\" height=\"1\" x=\"0\" y=\"' + (_size-1.0) + '\" style=\"fill:' + _color + '\" /><rect width=\"1\" height=\"' + _size + '\" x=\"' + (_size-1.0) + '\" y=\"0\" style=\"fill:' + _color + '\" /></svg>';\r\n        } else {\r\n            return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + _size + '\" height=\"' + _size + '\"><rect width=\"1\" height=\"1\" x=\"' + (_size-1.0) + '\" y=\"' + (_size-1.0) + '\" style=\"fill:' + _color + '\" /></svg>';\r\n        }\r\n    };\r\n\r\n};\r\n    \r\nexport { GRID_STYLE, Grid };\r\n","import {MatrixMath} from './MatrixMath';\r\nimport {CanvasEvent} from './CanvasEvent';\r\nimport {CanvasObject} from './CanvasObject';\r\nimport {Rectangle} from './Rectangle';\r\nimport {Point} from './Point';\r\nimport {Line} from './Line';\r\nimport {PointSet} from './PointSet';\r\nimport {LineSet} from './LineSet';\r\nimport {Connector} from './Connector';\r\nimport {PointVisibilityMap} from './PointVisibilityMap';\r\nimport {GRID_STYLE, Grid} from './Grid';\r\n\r\n/**\r\n * @callback HandleCanvasInteractionCallback\r\n * @param {String} interactionType\r\n * @param {Object} interactionData\r\n */ \r\n\r\n /**\r\n * @param {Element} _canvasDomElement \r\n * @param {Window} _window\r\n * @param {Worker} _connectorRoutingWorker\r\n */\r\nfunction Canvas(_canvasDomElement, _window, _connectorRoutingWorker) {\r\n\r\n    const self = this;\r\n\r\n    // Create container for SVG connectors\r\n    const svgElem = _window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svgElem.style.width = \"100%\";\r\n    svgElem.style.height = \"100%\";\r\n    const connectorsContainerDomElement = _canvasDomElement.appendChild(svgElem);\r\n   \r\n    /**\r\n     * @type {Grid}\r\n     */\r\n    var grid = null;\r\n\r\n    var transitionCss = \"transform 0.55s ease-in-out, transform-origin 0.55s ease-in-out\";\r\n\r\n    var transformOriginX = 0;\r\n    var transformOriginY = 0;\r\n\r\n    var translateX = 0;\r\n    var translateY = 0;\r\n    var scaleFactor = 1.0;\r\n    var invScaleFactor = 1.0;    \r\n\r\n    const invTransformationMatrixStack = [];\r\n    var currentInvTransformationMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    var currentTransformationMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    var currentPointVisiblityMap = null;\r\n\r\n    var useTranslate3d = false; // better performance w/o it\r\n    const canvasObjects = [];\r\n\r\n    /**\r\n     * @type {Connector[]}\r\n     */\r\n    const objectConnectors = [];\r\n\r\n    var objectIdBeingDragged = null;\r\n    var objectIdBeingResized = null;\r\n    \r\n    var objectDragX = 0.0;\r\n    var objectDragY = 0.0;\r\n    var objectDragStartX = 0.0;\r\n    var objectDragStartY = 0.0;\r\n\r\n    var dblTapDetectVars = {\r\n        lastTouchX: null,\r\n        lastTouchY: null,\r\n        lastTouchTime: null\r\n    };\r\n\r\n    const connectorAnchorsSelected = [];\r\n\r\n    /**\r\n     * Event name -> Callback map\r\n     */\r\n    const eventHandlers = new Map();\r\n\r\n    /**\r\n     * ConnectorAnchor -> Number map\r\n     */\r\n    const connectorAnchorToNumValidRoutingPoints = new Map();\r\n\r\n    /**\r\n     * @returns {PointVisibilityMap}\r\n     */\r\n    this.getCurrentPointVisibilityMap = function() {\r\n        return currentPointVisiblityMap;\r\n    };\r\n\r\n    /**\r\n     * @param {Grid} _grid\r\n     */\r\n    this.setGrid = function(_grid) {\r\n        grid = _grid;\r\n        _canvasDomElement.style.backgroundImage = \"url('data:image/svg+xml;base64,\" + _window.btoa(grid.getSvgImageTile()) + \"')\";\r\n        _canvasDomElement.style.backgroundRepeat = \"repeat\";\r\n        _canvasDomElement.style.backgroundColor = \"#fff\";\r\n    };\r\n\r\n    /**\r\n     * @returns {Grid}\r\n     */\r\n    this.getGrid = function() {\r\n        return grid;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getGridSize = function() {\r\n        return grid.getSize();\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {CanvasObject[]} _objs \r\n     * @returns {Point[]}\r\n     */\r\n    const getAccessibleRoutingPointsFromObjectAnchors = function(_objs) {\r\n\r\n        connectorAnchorToNumValidRoutingPoints.clear();\r\n\r\n        const allRoutingPoints = [];\r\n        const filteredRoutingPoints = [];\r\n\r\n        _objs.forEach((_o) => {\r\n            const anchors = _o.getConnectorAnchors();\r\n\r\n            anchors.forEach((_a) => {\r\n                const routingPoints = _a.getRoutingPoints(self.getGridSize());\r\n                routingPoints.forEach((_rp) => {\r\n                    allRoutingPoints.push(\r\n                        {\r\n                            \"routingPoint\": _rp,\r\n                            \"parentAnchor\": _a\r\n                        }\r\n                    );\r\n                });      \r\n\r\n                connectorAnchorToNumValidRoutingPoints.set(_a.getId(), routingPoints.length);\r\n            });\r\n\r\n        });\r\n\r\n\r\n        allRoutingPoints.forEach((_rp) => {\r\n\r\n            let isPointWithinObj = false;\r\n\r\n            for(let i=0; i<_objs.length; i++) {\r\n                const obj = _objs[i];\r\n                const boundingRect = obj.getBoundingRectange();\r\n                if(boundingRect.checkIsPointWithin(_rp.routingPoint)) {\r\n                    isPointWithinObj = true;\r\n\r\n                    const currentNumRoutingPoints = connectorAnchorToNumValidRoutingPoints.get(_rp.parentAnchor.getId()) || 0;\r\n                    connectorAnchorToNumValidRoutingPoints.set(_rp.parentAnchor.getId(), currentNumRoutingPoints - 1);\r\n                }\r\n            }\r\n\r\n            if(!isPointWithinObj) {\r\n                filteredRoutingPoints.push(_rp.routingPoint);\r\n            }\r\n            \r\n        });\r\n\r\n        return filteredRoutingPoints;\r\n    };\r\n\r\n    /**\r\n     * @returns {PointSet}\r\n     */\r\n    const getObjectExtentRoutingPoints = function() {\r\n        const pointSet = new PointSet();\r\n        canvasObjects.forEach(function(_obj) {\r\n            const scaledPoints = _obj.getBoundingRectange().getPointsScaledToGrid(self.getGridSize());\r\n            scaledPoints.forEach((_sp) => {\r\n                pointSet.push(_sp);\r\n            });\r\n        });\r\n\r\n        return pointSet;\r\n    };\r\n\r\n    /**\r\n     * @returns {PointSet}\r\n     */    \r\n    const getConnectorRoutingPointsAroundAnchor = function() {\r\n        const pointSet = new PointSet();\r\n        \r\n        const routingPoints = getAccessibleRoutingPointsFromObjectAnchors(canvasObjects);\r\n        routingPoints.forEach((_rp) => {\r\n            pointSet.push(_rp);\r\n        });\r\n\r\n        return pointSet;\r\n    };\r\n\r\n    /**\r\n     * @returns {Line[]}\r\n     */    \r\n    const getConnectorBoundaryLines = function() {\r\n        const boundaryLines = [];\r\n        canvasObjects.forEach(function(_obj) {\r\n            const lines = _obj.getBoundingRectange().getLines();\r\n            lines.forEach((_l) => {\r\n                boundaryLines.push(_l);\r\n            });\r\n\r\n            const anchors = _obj.getConnectorAnchors();\r\n            anchors.forEach(function(_anchor) {\r\n                const lines = _anchor.getBoundingRectange().getLines();\r\n                lines.forEach((_l) => {\r\n                    boundaryLines.push(_l);\r\n                });                \r\n            });\r\n        });\r\n\r\n        return new LineSet(boundaryLines);\r\n    };    \r\n\r\n    const refreshAllConnectors = function() {\r\n        const connectorDescriptors = [];\r\n        objectConnectors.forEach(function(_c) {\r\n            connectorDescriptors.push(_c.getDescriptor());\r\n        });\r\n\r\n        const routingPointsAroundAnchor = getConnectorRoutingPointsAroundAnchor();\r\n        const objectExtentRoutingPoints = getObjectExtentRoutingPoints();\r\n\r\n        const allRoutingPoints = new PointSet();        \r\n        allRoutingPoints.pushPointSet(routingPointsAroundAnchor);\r\n        allRoutingPoints.pushPointSet(objectExtentRoutingPoints);\r\n\r\n        const routingPointsAroundAnchorFloat64Array = routingPointsAroundAnchor.toFloat64Array();\r\n        const routingPointsFloat64Array = allRoutingPoints.toFloat64Array();\r\n        const boundaryLinesFloat64Array = (getConnectorBoundaryLines()).toFloat64Array();\r\n        _connectorRoutingWorker.postMessage(\r\n            {\r\n                \"gridSize\": self.getGridSize(),\r\n                \"connectorDescriptors\": connectorDescriptors,\r\n                \"routingPoints\": routingPointsFloat64Array.buffer,\r\n                \"boundaryLines\": boundaryLinesFloat64Array.buffer,\r\n                \"routingPointsAroundAnchor\": routingPointsAroundAnchorFloat64Array.buffer\r\n            },\r\n            [\r\n                routingPointsFloat64Array.buffer,\r\n                boundaryLinesFloat64Array.buffer,\r\n                routingPointsAroundAnchorFloat64Array.buffer\r\n            ]\r\n        );\r\n    };\r\n\r\n    _connectorRoutingWorker.onmessage = function(_msg) {\r\n        const connectorDescriptors = _msg.data.connectorDescriptors;\r\n        const getConnectorDescriptorById = function(_id) {\r\n            for(let i=0; i<connectorDescriptors.length; i++) {\r\n                if(connectorDescriptors[i].id === _id) {\r\n                    return connectorDescriptors[i];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        objectConnectors.forEach(function(_c) {\r\n            const descriptor = getConnectorDescriptorById(_c.getId());\r\n            if(descriptor) {\r\n                const ps = new PointSet(new Float64Array(descriptor.pointsInPath));\r\n                _c.refresh(descriptor.svgPath, ps.toArray());\r\n                emitEvent(CanvasEvent.CONNECTOR_UPDATED, { 'connector': _c });\r\n            }\r\n        });        \r\n    };\r\n\r\n    var makeNewConnector = function(_anchorStart, _anchorEnd, _containerDomElement) {\r\n        return new Connector(_anchorStart, _anchorEnd, _containerDomElement);\r\n    };\r\n\r\n    /**\r\n     * @callback ConnectorFactory\r\n     * @param {ConnectorAnchor} _anchorStart\r\n     * @param {ConnectorAnchor} _anchorEnd\r\n     * @param {Element} _containerDomElement\r\n     */\r\n\r\n    /**\r\n     * @param {ConnectorFactory} _connectorFactory\r\n     */\r\n    this.setConnectorFactory = function(_newConnectorFactory) {\r\n        makeNewConnector = _newConnectorFactory;\r\n    };    \r\n\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getTransitionCss = function() {\r\n        return transitionCss;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {String} _css \r\n     */\r\n    this.setTransitionCss = function(_css) {\r\n        transitionCss = _css;\r\n        _canvasDomElement.style.transition = transitionCss;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */    \r\n    this.getTransformOriginX = function() {\r\n        return transformOriginX;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */    \r\n    this.getTransformOriginY = function() {\r\n        return transformOriginY;\r\n    };    \r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getScaleFactor = function() {\r\n        return scaleFactor;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getTranslateX = function() {\r\n        return translateX;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */    \r\n    this.getTranslateY = function() {\r\n        return translateY;\r\n    };    \r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     */\r\n    this.setTransformOrigin = function(_x, _y) {\r\n        transformOriginX = _x;\r\n        transformOriginY = _y;\r\n        _canvasDomElement.style.transformOrigin = `${transformOriginX}px ${transformOriginY}px`;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _scaleFactor \r\n     * @param {Boolean} _adjustFactorToPreserveIntegerGrid \r\n     */\r\n    this.scale = function(_scaleFactor, _adjustFactorToPreserveIntegerGrid) {\r\n        _adjustFactorToPreserveIntegerGrid = _adjustFactorToPreserveIntegerGrid || false;\r\n\r\n        if(_adjustFactorToPreserveIntegerGrid) {\r\n            const newGridSize = self.getGridSize() * _scaleFactor;\r\n            const roundedGridSize = Math.round(newGridSize);\r\n            _scaleFactor = roundedGridSize / self.getGridSize();\r\n        }\r\n\r\n        scaleFactor = _scaleFactor;\r\n        invScaleFactor = 1.0 / scaleFactor;        \r\n\r\n        const scaleMat = \r\n            [\r\n                scaleFactor, 0, 0, 0, \r\n                0, scaleFactor, 0, 0, \r\n                0, 0, scaleFactor, 1, \r\n                0, 0, 0, 1\r\n            ];\r\n\r\n        currentTransformationMatrix = MatrixMath.mat4Multiply(\r\n            currentTransformationMatrix, \r\n            scaleMat\r\n        );\r\n\r\n        invTransformationMatrixStack.push(\r\n            [\r\n                invScaleFactor, 0, 0, 0, \r\n                0, invScaleFactor, 0, 0, \r\n                0, 0, invScaleFactor, 1, \r\n                0, 0, 0, 1\r\n            ]\r\n        );\r\n\r\n        return self;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     */\r\n    this.translate = function(_x, _y) {\r\n        translateX = _x;\r\n        translateY = _y;\r\n\r\n        const translateMatrix =             \r\n            [\r\n                1, 0, 0, 0, \r\n                0, 1, 0, 0, \r\n                0, 0, 1, 0, \r\n                translateX, translateY, 0, 1\r\n            ];\r\n\r\n        currentTransformationMatrix = MatrixMath.mat4Multiply(\r\n            currentTransformationMatrix, \r\n            translateMatrix\r\n        ); \r\n\r\n        invTransformationMatrixStack.push(\r\n            [\r\n                1, 0, 0, -translateX, \r\n                0, 1, 0, -translateY, \r\n                0, 0, 1, 0, \r\n                0, 0, 0, 1\r\n            ]\r\n        );\r\n\r\n        return self;\r\n    };\r\n\r\n    this.applyTransform = function() {\r\n        _canvasDomElement.style.transform = self.getTranformMatrixCss();\r\n        currentInvTransformationMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n        for(let i=0; i<invTransformationMatrixStack.length; i++) {\r\n            currentInvTransformationMatrix = MatrixMath.mat4Multiply(currentInvTransformationMatrix, invTransformationMatrixStack[i]);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @returns {Array}\r\n     */\r\n    this.getTransformMatrix = function() {\r\n        return currentTransformationMatrix;\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */    \r\n    this.getTranformMatrixCss = function() {\r\n        const matElems = currentTransformationMatrix.join(\",\");\r\n        return `matrix3d(${matElems})`;\r\n    };\r\n\r\n    this.resetTransform = function() {\r\n        scaleFactor = 1.0;\r\n        invScaleFactor = 1.0;\r\n        translateX = 0.0;\r\n        translateY = 0.0;\r\n        currentTransformationMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n        currentInvTransformationMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n        invTransformationMatrixStack.length = 0;\r\n        _canvasDomElement.style.transform = \"none\";\r\n    };\r\n\r\n    /**\r\n     * @returns {Point}\r\n     */\r\n    this.getPageOffset = function() {\r\n        return new Point(window.pageXOffset, window.pageYOffset);\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _p \r\n     * @returns {Number}\r\n     */\r\n    this.snapToGrid = function(_p) {\r\n        var ret = Math.round(_p/self.getGridSize()) * self.getGridSize();\r\n        return Math.max(0, ret - 1);\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getOffsetLeft = function() {\r\n        return _canvasDomElement.offsetLeft;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getOffsetTop = function() {\r\n        return _canvasDomElement.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getWidth = function() {\r\n        return _canvasDomElement.offsetWidth;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getHeight = function() {\r\n        return _canvasDomElement.offsetHeight;\r\n    };    \r\n\r\n    /**\r\n     * @returns {Rectangle}\r\n     */\r\n    this.calcBoundingBox = function() {\r\n\r\n        var minTop = null;\r\n        var minLeft = null;\r\n        var maxBottom = null;\r\n        var maxRight = null;\r\n\r\n        canvasObjects.forEach(function(element, index, array) {\r\n\r\n            const left = element.getX();\r\n            const top = element.getY();  \r\n            const right = left + element.getWidth();\r\n            const bottom = top + element.getHeight();\r\n\r\n            if(minLeft === null || left < minLeft) {\r\n                minLeft = left;\r\n            }\r\n\r\n            if(minTop === null || top < minTop) {\r\n                minTop = top;\r\n            }\r\n\r\n            if(maxBottom === null || bottom > maxBottom) {\r\n                maxBottom = bottom;\r\n            }        \r\n\r\n            if(maxRight === null || right > maxRight) {\r\n                maxRight = right;\r\n            }\r\n\r\n        }); \r\n\r\n        if(minTop === null || minLeft === null || maxBottom === null || maxRight === null) {\r\n            minTop = 0;\r\n            minLeft = 0;\r\n            maxBottom = self.getHeight();\r\n            maxRight = self.getWidth();            \r\n        }\r\n\r\n        return new Rectangle(minLeft, minTop, maxRight, maxBottom);\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _x\r\n     * @param {Number} _y\r\n     * @param {Number} _radius\r\n     * @returns {CanvasObject[]}\r\n     */\r\n    this.getObjectsAroundPoint = function(_x, _y, _radius) {\r\n\r\n        _radius = _radius || 1.0;\r\n\r\n        const result = [];\r\n\r\n        const ptRect = new Rectangle(\r\n            _x - _radius, \r\n            _y - _radius, \r\n            _x + _radius, \r\n            _y + _radius\r\n        );\r\n\r\n        canvasObjects.forEach(function(_obj) {\r\n            if(ptRect.checkIntersect(_obj.getBoundingRectange())) {\r\n                result.push(_obj);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n      \r\n    /**\r\n     * @returns {CanvasObject[]}\r\n     */\r\n    this.getAllObjects = function() {    \r\n        return canvasObjects;\r\n    };\r\n\r\n    /**\r\n     * Helper method to publish an object change to all objects\r\n     * \r\n     * @param {String} _eventName\r\n     * @param {*} _eventData\r\n     */\r\n    this.publishSiblingObjectChange = function(_eventName, _eventData) {\r\n        canvasObjects.forEach(function(_obj) {\r\n            _obj.handleSiblingObjectChange(_eventName, _eventData);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @param {String} _id\r\n     * @returns {CanvasObject|null}\r\n     */   \r\n    this.getObjectById = function(_id) {\r\n        var foundObject = null;\r\n        canvasObjects.forEach(function(obj, index, array) {\r\n            if(foundObject === null && obj.getId() === _id) {\r\n                foundObject = obj;\r\n            }            \r\n        });\r\n        \r\n        return foundObject;\r\n    };\r\n\r\n    /**\r\n     * @param {CanvasObject} _obj\r\n     */\r\n    this.addObject = function(_obj) {\r\n        _obj.on('obj-resize-start', handleResizeStart);\r\n        _obj.on('obj-resize', function(e) {\r\n            emitEvent(CanvasEvent.OBJECT_RESIZED, { 'object': e.obj });\r\n            refreshAllConnectors();    \r\n        });\r\n\r\n        _obj.on('obj-translate-start', handleMoveStart);\r\n        _obj.on('obj-translate', function(e) {\r\n            emitEvent(CanvasEvent.OBJECT_TRANSLATED, { 'object': e.obj });\r\n            refreshAllConnectors();    \r\n        });\r\n\r\n        canvasObjects.push(_obj);\r\n        refreshAllConnectors();       \r\n\r\n        emitEvent(CanvasEvent.OBJECT_ADDED, { \"object\":_obj });\r\n    };\r\n\r\n    /**\r\n     * Remove object from the canvas\r\n     * Note: as caller is responsible for putting object into the DOM, caller is responsible for removing it from the DOM\r\n     * \r\n     * @param {String} _objId\r\n     * @returns {Boolean} \r\n     */\r\n    this.removeObject = function(_objId) {\r\n        for(let i=0; i<canvasObjects.length; i++) {\r\n            if(canvasObjects[i].getId() === _objId) {\r\n                canvasObjects.splice(i, 1);\r\n                refreshAllConnectors();\r\n                emitEvent(CanvasEvent.OBJECT_REMOVED, { \"object\":canvasObjects[i] });\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * @param {String} _id\r\n     * @returns {Connector|null}\r\n     */    \r\n    this.getConnector = function(_id) {\r\n        for(let c=0; c<objectConnectors.length; c++) {\r\n            if(objectConnectors[c].getId() === _id) {\r\n                return objectConnectors[c];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * @returns {Connector[]}\r\n     */\r\n    this.getAllConnectors = function() {\r\n        return objectConnectors;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {CanvasObject} _objA \r\n     * @param {CanvasObject} _objB \r\n     * @returns {Connector[]}\r\n     */\r\n    this.getConnectorsBetweenObjects = function(_objA, _objB) {\r\n\r\n        const foundConnectors = [];\r\n\r\n        objectConnectors.forEach((_conn) => {\r\n            const aS = _conn.getAnchorStart();\r\n            const aE = _conn.getAnchorEnd();\r\n\r\n            if(_objA.hasConnectorAnchor(aS) && _objB.hasConnectorAnchor(aE)) {\r\n                foundConnectors.push(_conn);\r\n            }\r\n\r\n            if(_objA.hasConnectorAnchor(aE) && _objB.hasConnectorAnchor(aS)) {\r\n                foundConnectors.push(_conn);\r\n            }            \r\n        });\r\n\r\n        return foundConnectors;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _connectorId\r\n     * @returns {Array} \r\n     */\r\n    this.getObjectsConnectedViaConnector = function(_connectorId) {\r\n        const foundObjects = [];\r\n\r\n        const allObjs = self.getAllObjects();\r\n\r\n        objectConnectors.forEach((_conn) => {\r\n\r\n            if(_conn.getId() !== _connectorId) {\r\n                return;\r\n            }\r\n\r\n            const aS = _conn.getAnchorStart();\r\n            const aE = _conn.getAnchorEnd();\r\n\r\n            allObjs.forEach((_o) => {\r\n                if(_o.hasConnectorAnchor(aS) || _o.hasConnectorAnchor(aE)) {\r\n                    foundObjects.push(_o);\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        return foundObjects;        \r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {CanvasObject} _obj\r\n     * @returns {Connector[]} \r\n     */\r\n    this.getConnectorsConnectedToObject = function(_obj) {\r\n        const foundConnectors = [];\r\n\r\n        objectConnectors.forEach((_conn) => {\r\n            const aS = _conn.getAnchorStart();\r\n            const aE = _conn.getAnchorEnd();\r\n\r\n            if(_obj.hasConnectorAnchor(aS) || _obj.hasConnectorAnchor(aE)) {\r\n                foundConnectors.push(_conn);\r\n            }\r\n\r\n        });\r\n\r\n        return foundConnectors;        \r\n    };\r\n\r\n    /**\r\n     * @param {String} _connectorAnchorId\r\n     * @returns {Object|null} \r\n     */\r\n    this.getObjectWithConnectorAnchor = function(_connectorAnchorId) {\r\n        const allObjects = self.getAllObjects();\r\n        for(let i=0; i<allObjects.length; i++) {                \r\n            const anchors = allObjects[i].getConnectorAnchors();\r\n            for(let j=0; j<anchors.length; j++) {\r\n                if(anchors[j].getId() === _connectorAnchorId) {\r\n                    return allObjects[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };    \r\n\r\n    this.removeAllConnectors = function() {\r\n        objectConnectors.forEach(function(_conn) {\r\n            _conn.removePathElement();\r\n        });\r\n\r\n        objectConnectors.splice(0, objectConnectors.length);\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Connector} _connector\r\n     * @returns {Boolean}\r\n     */\r\n    this.removeConnector = function(_connector) {\r\n        for(let i=0; i<objectConnectors.length; i++) {\r\n            if(objectConnectors[i] === _connector) {\r\n                _connector.removePathElement();\r\n                objectConnectors.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {ConnectorAnchor} _anchorA \r\n     * @param {ConnectorAnchor} _anchorB \r\n     * @returns {Connector}\r\n     */\r\n    this.makeNewConnectorFromAnchors = function(_anchorA, _anchorB) {\r\n        const newConnector = makeNewConnector(_anchorA, _anchorB, connectorsContainerDomElement);\r\n        const foundConnector = self.getConnector(newConnector.getId());\r\n\r\n        if(foundConnector === null) {\r\n            objectConnectors.push(newConnector);\r\n            newConnector.appendPathToContainerDomElement();\r\n            refreshAllConnectors();\r\n            return newConnector;\r\n        }\r\n\r\n        return foundConnector;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Object} _objA \r\n     * @param {Object} _objB\r\n     * @returns {Object} \r\n     */\r\n    this.findBestConnectorAnchorsToConnectObjects = function(_objA, _objB, _onFound) {\r\n\r\n        const searchFunc = (_searchData) => {\r\n            const objAConnectorAnchors = _searchData.objectA.getConnectorAnchors();\r\n            const objBConnectorAnchors = _searchData.objectB.getConnectorAnchors();\r\n    \r\n            var startAnchorIdxWithMinDist = 0;\r\n            var endAnchorIdxWithMinDist = 0;\r\n            var minDist = Number.MAX_VALUE;\r\n            \r\n            // Find best anchor element to connect startNote and endNote            \r\n            // Find anchors that produce shortest straight line distance\r\n            for(let x=0; x<objAConnectorAnchors.length; x++) {\r\n\r\n                const objANumValidRoutingPoints = connectorAnchorToNumValidRoutingPoints.get(objAConnectorAnchors[x].getId()) || 0;\r\n                if(objANumValidRoutingPoints === 0) {\r\n                    continue;\r\n                }\r\n\r\n                for(let y=0; y<objBConnectorAnchors.length; y++) {\r\n                    const aCentroid = objAConnectorAnchors[x].getCentroid();\r\n                    const bCentroid = objBConnectorAnchors[y].getCentroid();\r\n                    \r\n                    const d = Math.sqrt(Math.pow(bCentroid.getX()-aCentroid.getX(),2) + Math.pow(bCentroid.getY()-aCentroid.getY(),2));\r\n                    const objBNumValidRoutingPoints = connectorAnchorToNumValidRoutingPoints.get(objBConnectorAnchors[y].getId()) || 0;\r\n                    \r\n                    if(d < minDist && objBNumValidRoutingPoints > 0) {\r\n                        startAnchorIdxWithMinDist = x;\r\n                        endAnchorIdxWithMinDist = y;\r\n                        minDist = d;\r\n                    }\r\n                }\r\n            }\r\n    \r\n            _searchData.cb(\r\n                {\r\n                    \"objectAAnchorIndex\": startAnchorIdxWithMinDist,\r\n                    \"objectAAnchor\": objAConnectorAnchors[startAnchorIdxWithMinDist],\r\n                    \"objectBAnchorIndex\": endAnchorIdxWithMinDist,\r\n                    \"objectBAnchor\": objBConnectorAnchors[endAnchorIdxWithMinDist],\r\n                }\r\n            );\r\n        };\r\n\r\n\r\n        setTimeout(function() {\r\n            searchFunc(\r\n                {\r\n                    \"objectA\": _objA,\r\n                    \"objectB\": _objB,\r\n                    \"cb\": _onFound\r\n                }\r\n            );\r\n        }, 10);\r\n    };\r\n\r\n    /**\r\n     * @param {ConnectorAnchor} _anchor\r\n     */\r\n    this.addConnectionAnchorToSelectionStack = function(_anchor) {\r\n        connectorAnchorsSelected.push(_anchor);\r\n\r\n        if(connectorAnchorsSelected.length === 2) {\r\n            self.makeNewConnectorFromAnchors(connectorAnchorsSelected[0], connectorAnchorsSelected[1]);\r\n            connectorAnchorsSelected.length = 0;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _posX \r\n     * @param {Number} _posY \r\n     */\r\n    const dblClickTapHandler = function(_posX, _posY) {\r\n        const objectsAroundPoint = self.getObjectsAroundPoint(_posX, _posY);\r\n\r\n        const eventData = {\r\n            'targetPoint': new Point(_posX, _posY),\r\n            'objectsAroundPoint': objectsAroundPoint\r\n        };\r\n\r\n        emitEvent(CanvasEvent.DBLCLICK, eventData);\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _dblTapSpeed\r\n     * @param {Number} _dblTapRadius\r\n     */\r\n    this.initInteractionHandlers = function(_dblTapSpeed, _dblTapRadius) {\r\n\r\n        // dblclick on empty area of canvas\r\n        _canvasDomElement.addEventListener('dblclick', function (e) {\r\n\r\n            const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                [e.pageX, e.pageY, 0, 1],\r\n                currentInvTransformationMatrix\r\n            );\r\n\r\n            dblClickTapHandler(invTransformedPos[0], invTransformedPos[1]);\r\n        });\r\n\r\n        // click anywhere on canvas\r\n        _canvasDomElement.addEventListener('click', function (e) {\r\n            let canvasObjectClicked = false;\r\n            if(e.target !== _canvasDomElement) {\r\n                canvasObjectClicked = true;\r\n            }\r\n\r\n            const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                [e.pageX, e.pageY, 0, 1],\r\n                currentInvTransformationMatrix\r\n            );\r\n\r\n            const eventData = {\r\n                'targetPoint': new Point(invTransformedPos[0], invTransformedPos[1]),\r\n                'canvasObjectClicked': canvasObjectClicked\r\n            };\r\n    \r\n            emitEvent(CanvasEvent.CLICK, eventData);\r\n        });\r\n\r\n        // touchend on canvas, logic to see if there was a double-tap\r\n        _canvasDomElement.addEventListener('touchend', function(e) {\r\n            if(e.changedTouches.length <= 0) {\r\n                return false; // we have nothing to work with\r\n            }\r\n\r\n            var dblTapDetected = false;  // flag specifying if we detected a double-tap\r\n\r\n            // Position of the touch\r\n            const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                [e.changedTouches[0].pageX, e.changedTouches[0].pageY, 0, 1],\r\n                currentInvTransformationMatrix\r\n            );            \r\n\r\n            var x = invTransformedPos[0];\r\n            var y = invTransformedPos[1];            \r\n\r\n            var now = new Date().getTime();\r\n\r\n            // Check if we have stored data for a previous touch (indicating we should test for a double-tap)\r\n            if(dblTapDetectVars.lastTouchTime !== null) {\r\n\r\n                var lastTouchTime = dblTapDetectVars.lastTouchTime;\r\n\r\n                // Compute time since the previous touch\r\n                var timeSinceLastTouch = now - lastTouchTime;\r\n\r\n                // Get the position of the last touch on the element\r\n                var lastX = dblTapDetectVars.lastTouchX;\r\n                var lastY = dblTapDetectVars.lastTouchY;\r\n\r\n                // Compute the distance from the last touch on the element\r\n                var distFromLastTouch = Math.sqrt( Math.pow(x-lastX,2) + Math.pow(y-lastY,2) );\r\n\r\n                if(timeSinceLastTouch <= _dblTapSpeed && distFromLastTouch <= _dblTapRadius) {\r\n                    // Flag that we detected a double tap\r\n                    dblTapDetected = true;\r\n\r\n                    // Call handler\r\n                    dblClickTapHandler(x, y);\r\n\r\n                    // Remove last touch info from element\r\n                    dblTapDetectVars.lastTouchTime = null;\r\n                    dblTapDetectVars.lastTouchX = null;\r\n                    dblTapDetectVars.lastTouchY = null;\r\n                }\r\n            }\r\n\r\n            if(!dblTapDetected) {\r\n                dblTapDetectVars.lastTouchTime = now;\r\n                dblTapDetectVars.lastTouchX = x;\r\n                dblTapDetectVars.lastTouchY = y;\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Object} _e \r\n     */\r\n    const handleResizeStart = function(_e) {       \r\n        objectIdBeingResized = _e.obj.getId();\r\n    };    \r\n\r\n    /**\r\n     * \r\n     * @param {Object} _e\r\n     */\r\n    const handleMoveStart = function(_e) {     \r\n        objectIdBeingDragged = _e.obj.getId();\r\n        objectDragX = _e.x;\r\n        objectDragY = _e.y;\r\n        objectDragStartX = _e.x;\r\n        objectDragStartY = _e.y;        \r\n    };    \r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     */\r\n    const handleMove = function(_x, _y) {\r\n        const obj = self.getObjectById(objectIdBeingDragged);\r\n        const translateOffset = obj.getTranslateHandleOffset();\r\n        const mx = self.snapToGrid(_x + translateOffset.getX());\r\n        const my = self.snapToGrid(_y + translateOffset.getY());\r\n        \r\n        objectDragX = mx;\r\n        objectDragY = my;\t\t\r\n\r\n        obj.translate(mx, my);\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     */\r\n    const handleMoveEnd = function(_x, _y) {\r\n        const obj = self.getObjectById(objectIdBeingDragged);\r\n        const translateOffset = obj.getTranslateHandleOffset();\r\n        const mx = self.snapToGrid(_x + translateOffset.getX());\r\n        const my = self.snapToGrid(_y + translateOffset.getY());\r\n\r\n        const mxStart = objectDragStartX;\r\n        const myStart = objectDragStartY;\r\n\r\n        if(mxStart == mx && myStart == my) {\r\n            // we didn't drag it anywhere\r\n        } else {\r\n            obj.translate(mx, my);       \r\n        }\r\n    };         \r\n\r\n    /**\r\n     * \r\n     * @param {Number} _x \r\n     * @param {Number} _y \r\n     */    \r\n    const handleResize = function(_x, _y) {\r\n        const obj = self.getObjectById(objectIdBeingResized);\r\n\r\n        const mx = self.snapToGrid(_x);\r\n        const my = self.snapToGrid(_y);\r\n\r\n        const top = obj.getY();\r\n        const left = obj.getX();\r\n        const newWidth = ((mx - left)+1);\r\n        const newHeight = ((my - top)+1);\r\n\r\n        obj.resize(newWidth, newHeight);\r\n    };\r\n\r\n    this.initTransformationHandlers = function() {\r\n        \r\n        _canvasDomElement.addEventListener('touchmove', function (e) {\r\n            if (objectIdBeingDragged !== null) {\r\n\r\n                const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                    [e.touches[0].pageX, e.touches[0].pageY, 0, 1],\r\n                    currentInvTransformationMatrix\r\n                );                    \r\n\r\n                handleMove(invTransformedPos[0], invTransformedPos[1]);       \r\n\r\n                // if we're transforming an object, make sure we don't scroll the canvas\r\n                e.preventDefault();\r\n            }\r\n\r\n\r\n            if(objectIdBeingResized !== null) {\r\n\r\n                const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                    [e.touches[0].pageX, e.touches[0].pageY, 0, 1],\r\n                    currentInvTransformationMatrix\r\n                );     \r\n\r\n                handleResize(invTransformedPos[0], invTransformedPos[1]);\r\n\r\n                e.preventDefault();\r\n            }            \r\n\r\n        });\r\n\r\n        _canvasDomElement.addEventListener('mousemove', function (e) {\r\n            if (objectIdBeingDragged !== null) {\t\t\r\n                \r\n                const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                    [e.pageX, e.pageY, 0, 1],\r\n                    currentInvTransformationMatrix\r\n                );                    \r\n\r\n                handleMove(invTransformedPos[0], invTransformedPos[1]);\r\n            }\r\n\r\n            if(objectIdBeingResized !== null) {\r\n\r\n                const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                    [e.pageX, e.pageY, 0, 1],\r\n                    currentInvTransformationMatrix\r\n                );     \r\n\r\n                handleResize(invTransformedPos[0], invTransformedPos[1]);\r\n            }\r\n        });\r\n\r\n        _canvasDomElement.addEventListener('touchend', function (e) {\r\n\r\n            // e.touches is empty..\r\n            // Need to use e.changedTouches for final x,y ???\r\n\r\n            if(objectIdBeingDragged !== null) {\r\n                objectIdBeingDragged = null;\r\n            }           \r\n            \r\n            if(objectIdBeingResized !== null) {\r\n                objectIdBeingResized = null;  \r\n            }\r\n        });\r\n\r\n        _canvasDomElement.addEventListener('mouseup', function (e) {\r\n            if (e.which === 1) {\r\n                if(objectIdBeingDragged !== null) {\r\n\r\n                    const invTransformedPos = MatrixMath.vecMat4Multiply(\r\n                        [e.pageX, e.pageY, 0, 1],\r\n                        currentInvTransformationMatrix\r\n                    );                      \r\n\r\n                    handleMoveEnd(invTransformedPos[0], invTransformedPos[1]);\r\n                }            \r\n\r\n                if(objectIdBeingResized !== null) {\r\n                }\r\n\r\n                objectIdBeingDragged = null;\r\n                objectIdBeingResized = null;\r\n            }\r\n        });  \r\n\r\n        _canvasDomElement.addEventListener('mousedown', function (e) {\r\n            if(objectIdBeingDragged !== null || objectIdBeingResized !== null) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n    };\r\n\r\n    const emitEvent = function(_eventName, _eventData) {\r\n        const allCallbacks = eventHandlers.get(_eventName) || [];\r\n\r\n        for(let i=0; i<allCallbacks.length; i++) {\r\n            const cbFunc = allCallbacks[i];\r\n            cbFunc(_eventData);\r\n        }\r\n    };\r\n\r\n    this.off = function(_eventName, _callback) {\r\n        const allCallbacks = eventHandlers.get(_eventName) || [];\r\n\r\n        for(let i=0; i<allCallbacks.length; i++) {\r\n            if(allCallbacks[i] === _callback) {\r\n                allCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        eventHandlers.set(_eventName, allCallbacks);\r\n    };\r\n\r\n    this.on = function(_eventName, _callback) {\r\n        const allCallbacks = eventHandlers.get(_eventName) || [];\r\n        allCallbacks.push(_callback);\r\n        eventHandlers.set(_eventName, allCallbacks);\r\n    };\r\n\r\n    self.setGrid(new Grid(12.0, '#424242', GRID_STYLE.DOT));\r\n    self.resetTransform();\r\n    self.setTransformOrigin(0, 0);\r\n    self.setTransitionCss(transitionCss);\r\n};\r\n\r\nexport { Canvas };\r\n","import {Point} from './Point';\r\nimport {Rectangle} from './Rectangle';\r\nimport {Canvas} from './Canvas';\r\nimport {ConnectorAnchor} from './ConnectorAnchor';\r\n\r\n/**\r\n * \r\n * @param {String} _id\r\n * @param {Number} _x\r\n * @param {Number} _y\r\n * @param {Number} _width\r\n * @param {Number} _height\r\n * @param {Canvas} _canvas\r\n * @param {Element} _domElement\r\n * @param {Element[]} _translateHandleDomElements\r\n * @param {Element[]} _resizeHandleDomElements\r\n */\r\nfunction CanvasObject(_id, _x, _y, _width, _height, _canvas, _domElement, _translateHandleDomElements, _resizeHandleDomElements) {\r\n\r\n    const self = this;\r\n\r\n    const MOUSE_MIDDLE_BUTTON = 1;\r\n\r\n    /**\r\n     * @type {ConnectorAnchor[]}\r\n     */\r\n    const connectorAnchors = [];\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    var nextConnectorAnchorIdSuffix = 1000;\r\n\r\n    /**\r\n     * @type {Element}\r\n     */\r\n    var currentTranslateHandleElementActivated = null;\r\n\r\n    /**\r\n     * @type {Element}\r\n     */\r\n    var currentResizeHandleElementActivated = null;\r\n\r\n    const Event = {\r\n        TRANSLATE_START: 'obj-translate-start',\r\n        TRANSLATE: 'obj-translate',\r\n        RESIZE_START: 'obj-resize-start',\r\n        RESIZE: 'obj-resize'\r\n    };\r\n\r\n    const eventNameToHandlerFunc = new Map();\r\n\r\n    let x = _x;\r\n    let y = _y;\r\n    let width = _width;\r\n    let height = _height;\r\n\r\n    /**\r\n     * @param {Element} _connectorAnchorDomElement\r\n     * @returns {ConnectorAnchor}\r\n     */    \r\n    this.addNonInteractableConnectorAnchor = function(_connectorAnchorDomElement) {\r\n        const newAnchor = new ConnectorAnchor(_id + `-${nextConnectorAnchorIdSuffix}`, _connectorAnchorDomElement, _canvas);\r\n        connectorAnchors.push(newAnchor);\r\n        nextConnectorAnchorIdSuffix++;\r\n        return newAnchor;\r\n    };\r\n\r\n    /**\r\n     * @param {Element} _connectorAnchorDomElement\r\n     * @returns {ConnectorAnchor}\r\n     */    \r\n    this.addInteractableConnectorAnchor = function(_connectorAnchorDomElement) {     \r\n        const anchor = new ConnectorAnchor(_id + `-${nextConnectorAnchorIdSuffix}`, _connectorAnchorDomElement, _canvas);\r\n\r\n        _connectorAnchorDomElement.addEventListener('click', function(e) {\r\n            _canvas.addConnectionAnchorToSelectionStack(anchor);\r\n        });\r\n\r\n        connectorAnchors.push(anchor);\r\n        nextConnectorAnchorIdSuffix++;\r\n        return anchor;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Number} _gridSize \r\n     * @returns {Point[]}\r\n     */\r\n    this.getConnectorAnchorRoutingPoints = function(_gridSize) {\r\n        const allRoutingPoints = [];\r\n        connectorAnchors.forEach(function(_anchor) {\r\n            const anchorPoints = _anchor.getRoutingPoints(_gridSize);\r\n            anchorPoints.forEach(function(_pt) {\r\n                allRoutingPoints.push(_pt);\r\n            });\r\n        });\r\n\r\n        return allRoutingPoints;\r\n    };\r\n\r\n    /**\r\n     * @returns {ConnectorAnchor[]}\r\n     */\r\n    this.getConnectorAnchors = function() {\r\n        return connectorAnchors;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {ConnectorAnchor} _anchor \r\n     * @returns {Boolean}\r\n     */\r\n    this.hasConnectorAnchor = function(_anchor) {\r\n        const anchors = self.getConnectorAnchors();\r\n        for(let i=0; i<anchors.length; i++) {\r\n            if(anchors[i] === _anchor) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * @returns {Point|null}\r\n     */    \r\n    this.getTranslateHandleOffset = function() {\r\n        if(currentTranslateHandleElementActivated) {\r\n            return new Point(\r\n                -(currentTranslateHandleElementActivated.offsetLeft + currentTranslateHandleElementActivated.offsetWidth * 0.5),\r\n                -(currentTranslateHandleElementActivated.offsetTop  + currentTranslateHandleElementActivated.offsetHeight * 0.5)\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getId = function() {\r\n        return _id;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getX = function() {\r\n        return x;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getY = function() {\r\n        return y;\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _x\r\n     * @param {Number} _y\r\n     */\r\n    this.translate = function(_x, _y) {\r\n        x = _x;\r\n        y = _y;\r\n\r\n        _domElement.style.left = x + 'px';\r\n        _domElement.style.top = y + 'px';\r\n\r\n        const observers = eventNameToHandlerFunc.get(Event.TRANSLATE) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\"obj\":self, \"x\": _x, \"y\": _y});\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getWidth = function() {\r\n        return width;\r\n    };\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    this.getHeight = function() {\r\n        return height;\r\n    };\r\n\r\n    /**\r\n     * @param {Number} _width\r\n     * @param {Number} _height\r\n     * @param {Function} _domElementStyleUpdateOverrideFunc\r\n     */\r\n    this.resize = function(_width, _height, _domElementStyleUpdateOverrideFunc) {            \r\n        width = _width;\r\n        height = _height;\r\n\r\n        if(_domElementStyleUpdateOverrideFunc) {\r\n            _domElementStyleUpdateOverrideFunc(_domElement);\r\n        } else {\r\n            _domElement.style.width = width + 'px';\r\n            _domElement.style.height = height + 'px';\r\n        }\r\n\r\n        const observers = eventNameToHandlerFunc.get(Event.RESIZE) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\"obj\":self, \"width\": _width, \"height\": _height});\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @returns {Element}\r\n     */\r\n    this.getDomElement = function() {\r\n        return _domElement;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName\r\n     * @param {*} _eventData\r\n     */\r\n    this.handleSiblingObjectChange = function(_eventName, _eventData) { \r\n\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @returns {Rectangle}\r\n     */\r\n    this.getBoundingRectange = function() {\r\n        const left = x;\r\n        const top = y;\r\n        const right = left + width;\r\n        const bottom = top + height;\r\n\r\n        return new Rectangle(left, top, right, bottom);\r\n    };\r\n\r\n    /**\r\n     * @returns {Point[]}\r\n     */\r\n    this.getBoundingPoints = function() {\r\n        const topLeft = new Point(self.getX(), self.getY());\r\n        const topRight = new Point(self.getX() + self.getWidth(), self.getY());\r\n        const bottomLeft = new Point(self.getX(), self.getY() + self.getWidth());\r\n        const bottomRight = new Point(self.getX() + self.getWidth(), self.getY() + self.getWidth());\r\n\r\n        return [\r\n            topLeft,\r\n            topRight,\r\n            bottomLeft,\r\n            bottomRight\r\n        ];\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName \r\n     * @param {*} _handlerFunc \r\n     */\r\n    this.on = function(_eventName, _handlerFunc) {\r\n        const allHandlers = eventNameToHandlerFunc.get(_eventName) || [];\r\n        allHandlers.push(_handlerFunc);\r\n        eventNameToHandlerFunc.set(_eventName, allHandlers);        \r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {String} _eventName \r\n     * @param {*} _callback \r\n     */\r\n    this.off = function(_eventName, _callback) {\r\n        const allCallbacks = eventHandlers.get(_eventName) || [];\r\n\r\n        for(let i=0; i<allCallbacks.length; i++) {\r\n            if(allCallbacks[i] === _callback) {\r\n                allCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        eventHandlers.set(_eventName, allCallbacks);\r\n    };\r\n\r\n    this.suspendTranslateInteractions = function() {\r\n        unbindTranslateHandleElements();\r\n    };\r\n\r\n    this.resumeTranslateInteractions = function() {\r\n        bindTranslateHandleElements();\r\n    };\r\n\r\n    const translateTouchStartHandler = function(e) {\r\n        currentTranslateHandleElementActivated = e.target;\r\n\r\n        const observers = eventNameToHandlerFunc.get(Event.TRANSLATE_START) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\r\n                \"obj\": self,\r\n                \"x\": e.touches[0].pageX, \r\n                \"y\": e.touches[0].pageY,\r\n                \"isTouch\": true\r\n            });\r\n        });        \r\n\r\n    };\r\n\r\n    const translateMouseDownHandler = function(e) {\r\n        currentTranslateHandleElementActivated = e.target;\r\n        \r\n        const observers = eventNameToHandlerFunc.get(Event.TRANSLATE_START) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\r\n                \"obj\": self,\r\n                \"x\": e.pageX, \r\n                \"y\": e.pageY,\r\n                \"isTouch\": false\r\n            });\r\n        });        \r\n        \r\n    };\r\n\r\n    const unbindTranslateHandleElements = function() {\r\n        _translateHandleDomElements.forEach((_el) => {\r\n            _el.removeEventListener('touchstart', translateTouchStartHandler);        \r\n            _el.removeEventListener('mousedown', translateMouseDownHandler);\r\n        });\r\n    };\r\n\r\n    const bindTranslateHandleElements = function() {\r\n        _translateHandleDomElements.forEach((_el) => {\r\n            _el.addEventListener('touchstart', translateTouchStartHandler);        \r\n            _el.addEventListener('mousedown', translateMouseDownHandler);\r\n        });\r\n    };\r\n\r\n    const resizeMouseDownHandler = function(e) {\r\n        if (e.which !== MOUSE_MIDDLE_BUTTON) {\r\n            return;\r\n        }\r\n\r\n        currentResizeHandleElementActivated = e.target;\r\n        \r\n        const observers = eventNameToHandlerFunc.get(Event.RESIZE_START) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\r\n                \"obj\": self,\r\n                \"x\": e.pageX, \r\n                \"y\": e.pageY,\r\n                \"isTouch\": false\r\n            });\r\n        });    \r\n    };\r\n\r\n    const resizeTouchStartHandler = function(e) {\r\n        currentResizeHandleElementActivated = e.target;\r\n        \r\n        const observers = eventNameToHandlerFunc.get(Event.RESIZE_START) || [];\r\n        observers.forEach(function(handler) {\r\n            handler({\r\n                \"obj\": self,\r\n                \"x\": e.touches[0].pageX,  \r\n                \"y\": e.touches[0].pageY, \r\n                \"isTouch\": true\r\n            });\r\n        });    \r\n    };    \r\n\r\n    const bindResizeHandleElements = function() {\r\n        _resizeHandleDomElements.forEach((_el) => {\r\n            _el.addEventListener('touchstart', resizeTouchStartHandler);  \r\n            _el.addEventListener('mousedown', resizeMouseDownHandler);  \r\n        });\r\n    };\r\n\r\n\r\n    bindTranslateHandleElements();\r\n    bindResizeHandleElements();\r\n};\r\n\r\nexport { CanvasObject };\r\n","/**\r\n * \r\n * @param {String} _id \r\n */\r\nfunction Cluster(_id) {\r\n\r\n    const self = this;\r\n\r\n    /**\r\n     * @type {CanvasObjects[]}\r\n     */\r\n    const canvasObjects = [];\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    this.getId = function() {\r\n        return _id;\r\n    };\r\n\r\n    /**\r\n     * @param {CanvasObject} _obj\r\n     * @returns {Number|null}\r\n     */\r\n    this.getObjectIndex = function(_obj) {\r\n        return self.getObjectIndexById(_obj.getId());\r\n    };\r\n\r\n    /**\r\n     * @param {String} _objId\r\n     * @returns {Number|null}\r\n     */\r\n    this.getObjectIndexById = function(_objId) {\r\n        for(let i=0; i<canvasObjects.length; i++) {\r\n            if(canvasObjects[i].getId() === _objId) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * @param {CanvasObject} _o\r\n     * @returns {Boolean}\r\n     */\r\n    this.addObject = function(_o) {\r\n\r\n        if(self.getObjectIndex(_o) !== null) {\r\n            return false;\r\n        }\r\n\r\n        canvasObjects.push(_o);\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * @returns {CanvasObjects[]}\r\n     */\r\n    this.getObjects = function() {\r\n        return canvasObjects;\r\n    };\r\n\r\n    /**\r\n     * @returns {String[]}\r\n     */\r\n    this.getObjectIds = function() {\r\n        const ids = [];\r\n        canvasObjects.forEach(function(_o) {\r\n            ids.push(_o.getId());\r\n        });\r\n\r\n        return ids;\r\n    };    \r\n\r\n    /**\r\n     * @param {String} _id\r\n     * @returns {Boolean}\r\n     */\r\n    this.removeObjectById = function(_id) {\r\n        const idx = self.getObjectIndexById(_id);\r\n        if(idx === null) {\r\n            return false;\r\n        }\r\n\r\n        canvasObjects.splice(idx, 1);\r\n        return true;\r\n    };\r\n\r\n    this.removeAllObjects = function() {\r\n        canvasObjects.length = 0;\r\n    };\r\n};\r\n\r\nexport { Cluster };\r\n","import {Rectangle} from './Rectangle';\r\nimport  {CanvasObject} from './CanvasObject';\r\nimport  {Cluster} from './Cluster';\r\n\r\nfunction BoxClusterDetector(_boxExtentOffset) {\r\n\r\n    const self = this;\r\n\r\n    /**\r\n     * \r\n     * @param {CanvasObject} _obj \r\n     * @param {CanvasObject[]} _canvasObjectsArray \r\n     * @returns {Number}\r\n     */\r\n    const getObjectIndexFromArray = function(_obj, _canvasObjectsArray) {\r\n        for(let i=0; i<_canvasObjectsArray.length; i++) {\r\n            if(_canvasObjectsArray[i].getId() === _obj.getId()) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {CanvasObject[]} _objects \r\n     * @param {CanvasObject[]} _canvasObjectsArray \r\n     * @returns {CanvasObject[]}\r\n     */\r\n    const removeObjectsFromArray = function(_objects, _canvasObjectsArray) {\r\n        for(let i=0; i<_objects.length; i++) {\r\n            const idx = getObjectIndexFromArray(_objects[i], _canvasObjectsArray);\r\n            if(idx !== -1) {\r\n                _canvasObjectsArray.splice(idx, 1);\r\n            }\r\n        }\r\n\r\n        return _canvasObjectsArray;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param {Map<Cluster, Number>} _clusterToObjectCountMap \r\n     * @returns {Cluster}\r\n     */\r\n    const getClusterWithMostObjectsFromClusterMap = function(_clusterToObjectCountMap)\r\n    {\r\n        var curMaxObjs = 0;\r\n        var curClusterWithMax = null;\r\n\r\n        _clusterToObjectCountMap.forEach(function(_numObjs, _cluster, _map) {\r\n            if(_numObjs > curMaxObjs) {\r\n                curMaxObjs = _numObjs;\r\n                curClusterWithMax = _cluster;\r\n            }\r\n        });\r\n\r\n        return curClusterWithMax;\r\n    };\r\n\r\n    /**\r\n     * @param {Map<Cluster, Number>} _clusterToObjectCountMap \r\n     * @returns {Cluster[]}\r\n     */\r\n    const getClusterArrayFromClusterMap = function(_clusterToObjectCountMap) {\r\n        const resultSet = [];\r\n        _clusterToObjectCountMap.keys().forEach(function(_cluster) {\r\n            resultSet.push(_cluster);\r\n        });\r\n\r\n        return resultSet;\r\n    };\r\n\r\n    /**\r\n     * @param {CanvasObject} _objA\r\n     * @param {CanvasObject} _objB\r\n     * @returns {Boolean}\r\n     */\r\n    this.areObjectsClose = function(_objA, _objB) {\r\n\r\n        const nA = new Rectangle(\r\n            _objA.getX() - _boxExtentOffset, \r\n            _objA.getY() - _boxExtentOffset, \r\n            _objA.getX() + _objA.getWidth() + _boxExtentOffset, \r\n            _objA.getY() + _objA.getHeight() + _boxExtentOffset\r\n        );\r\n\r\n        const nB = new Rectangle(\r\n            _objB.getX() - _boxExtentOffset, \r\n            _objB.getY() - _boxExtentOffset, \r\n            _objB.getX() + _objB.getWidth() + _boxExtentOffset, \r\n            _objB.getY() + _objB.getHeight() + _boxExtentOffset\r\n        );\r\n        \r\n        return nA.checkIntersect(nB);\r\n    };\r\n   \r\n    /**\r\n     * @param {CanvasObject} _obj\r\n     * @param {CanvasObject[]} _objectsUnderConsideration\r\n     * @returns {CanvasObject[]}\r\n     */\r\n    this.getAllObjectsCloseTo = function(_obj, _objectsUnderConsideration) {\r\n        const resultSet = [];\r\n        for(let i=0; i<_objectsUnderConsideration.length; i++) {\r\n            if(_obj.getId() === _objectsUnderConsideration[i].getId()) {\r\n                continue;\r\n            }\r\n\r\n            if(self.areObjectsClose(_obj, _objectsUnderConsideration[i])) {\r\n                resultSet.push(_objectsUnderConsideration[i]);\r\n            }\r\n        }\r\n\r\n        return resultSet;\r\n    };\r\n\r\n    /**\r\n     * @param {CanvasObject} _seedObj\r\n     * @param {CanvasObject[]} _objectsUnderConsideration\r\n     * @param {CanvasObject[]} _resultSet\r\n     */\r\n    this.getClusterObjectsFromSeed = function(_seedObj, _objectsUnderConsideration, _resultSet) {\r\n        const closeByObjects = self.getAllObjectsCloseTo(_seedObj, _objectsUnderConsideration);\r\n        if(closeByObjects.length === 0) {\r\n            return [];\r\n        } else {\r\n            removeObjectsFromArray(closeByObjects.concat([_seedObj]), _objectsUnderConsideration);\r\n\r\n            closeByObjects.forEach(function(_o) {\r\n                _resultSet.push(_o);\r\n                self.getClusterObjectsFromSeed(_o, _objectsUnderConsideration, _resultSet);\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * @param {CanvasObject[]} _objs\r\n     * @param {Cluster[]} _clusters\r\n     * @returns {Map<Cluster,Number>}\r\n     */\r\n    this.findIntersectingClustersForObjects = function(_objs, _clusters) {\r\n\r\n        // Map of Cluster that is intersecting to number of objects in _objs that is intersecting the given Cluster\r\n        const intersectingClusterToNumObjectsIntersecting = new Map();\r\n\r\n        _clusters.forEach(function(_cluster) {\r\n\r\n            const clusterObjs = _cluster.getObjects();\r\n\r\n            for(let i=0; i<clusterObjs.length; i++) {\r\n                for(let j=0; j<_objs.length; j++) {\r\n\r\n                    if(clusterObjs[i].getId() !== _objs[j].getId()) {\r\n                        continue;\r\n                    }\r\n\r\n                    if(intersectingClusterToNumObjectsIntersecting.has(_cluster)) {\r\n                        const count = intersectingClusterToNumObjectsIntersecting.get(_cluster);\r\n                        intersectingClusterToNumObjectsIntersecting.set(_cluster, count+1);\r\n                    } else {\r\n                        intersectingClusterToNumObjectsIntersecting.set(_cluster, 1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return intersectingClusterToNumObjectsIntersecting;\r\n    };\r\n\r\n    /**\r\n     * @param {CanvasObject} _obj\r\n     * @param {Cluster[]} _clusters\r\n     */\r\n    this.removeObjectFromClusters = function(_obj, _clusters) {\r\n        _clusters.forEach(function(_c) {\r\n            _c.removeObjectById(_obj.getId());\r\n        });\r\n    };    \r\n\r\n    this.computeClusters = function(_objects, _knownClusters, _getNewIdFunc) {\r\n        const clusters = _knownClusters.map(function(_c) {\r\n            return _c;\r\n        });\r\n\r\n        const objectsUnderConsideration = _objects.map(function(_o) {\r\n            return _o;\r\n        });\r\n\r\n        while(objectsUnderConsideration.length > 0) {\r\n            const obj = objectsUnderConsideration.pop();\r\n\r\n            const objsForCluster = [obj];\r\n            self.getClusterObjectsFromSeed(obj, objectsUnderConsideration, objsForCluster);\r\n\r\n            if(objsForCluster.length > 1) {\r\n\r\n                const intersectingClusterToNumObjectsIntersecting = self.findIntersectingClustersForObjects(objsForCluster, clusters);\r\n\r\n                if(intersectingClusterToNumObjectsIntersecting.size === 0) {\r\n                    const newCluster = new Cluster(_getNewIdFunc());\r\n                    objsForCluster.forEach(function(_clusterObject) {\r\n                        newCluster.addObject(_clusterObject);\r\n                    });    \r\n\r\n                    clusters.push(newCluster);\r\n                } else {\r\n                    const clusterToModify = getClusterWithMostObjectsFromClusterMap(intersectingClusterToNumObjectsIntersecting);\r\n\r\n                    // Clear out objects in cluster\r\n                    clusterToModify.removeAllObjects();\r\n\r\n                    // Remove object from any cluster it's currently in, add it to clusterToModify\r\n                    objsForCluster.forEach(function(_clusterObject) {\r\n                        self.removeObjectFromClusters(_clusterObject, clusters);                    \r\n                        clusterToModify.addObject(_clusterObject);\r\n                    });\r\n\r\n                }\r\n\r\n                removeObjectsFromArray(objsForCluster, objectsUnderConsideration);\r\n\r\n            } else {\r\n                self.removeObjectFromClusters(obj, clusters);\r\n            }\r\n\r\n        }\r\n\r\n        // Filter out clusters w/o any objects\r\n        const nonEmptyClusters = clusters.filter(function(_c) {\r\n            if(_c.getObjects().length >= 2) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return nonEmptyClusters;\r\n    };\r\n    \r\n};\r\n\r\nexport { BoxClusterDetector };\r\n"],"names":["MatrixMath","mat4Multiply","_a","_b","result","i","sum","j","k","vecMat4Multiply","_v","_m","vi","SvgPathBuilder","pointToLineTo","_pt","getX","getY","pointsToPath","_points","p","startPt","lineToString","length","push","startCoordString","pathString","join","Dimensions","_width","_height","getWidth","getHeight","Point","_x","_y","__x","__y","prototype","isEqual","_otherPoint","getCartesianPoint","_canvasWidth","_canvasHeight","toString","LINE_INTERSECTION_TYPE","Object","freeze","PARALLEL","COINCIDENT","LINE","LINESEG","LineIntersection","_type","_intersectionPoint","getType","getIntersectionPoint","Line","_startPoint","_endPoint","__startPoint","__endPoint","getStartPoint","getEndPoint","_otherLine","getLength","Math","sqrt","pow","getDirection","dx","dy","len","computeIntersectionType","thisLineStartPointX","thisLineStartPointY","thisLineEndPointX","thisLineEndPointY","otherLineStartPointX","otherLineStartPointY","otherLineEndPointX","otherLineEndPointY","paramDenom","paramANumer","paramBNumer","paramA","paramB","computeIntersection","xIntersect","yIntersect","Rectangle","_left","_top","_right","_bottom","getLeft","getTop","getRight","getBottom","getPoints","getLines","getPointsScaledToGrid","_gridSize","centroid","scaleDx","scaleDy","scaledPoints","checkIntersect","_otherRectangle","checkIsPointWithin","_point","checkIsWithin","CanvasEvent","DBLCLICK","CLICK","CONNECTOR_UPDATED","OBJECT_ADDED","OBJECT_REMOVED","OBJECT_RESIZED","OBJECT_TRANSLATED","PointSet","_pointsInput","self","points","_newPoint","pushPointSet","_ps","possibleNewPoints","toArray","findPointClosestTo","resultPoint","currentMinLength","Number","MAX_SAFE_INTEGER","forEach","lineToPt","findDistanceToPointClosestTo","findPointsCloseTo","_radius","resultSet","toFloat64Array","Float64Array","fromFloat64Array","_float64Array","count","Array","isArray","call","LineSet","_linesInput","lines","_newLine","alreadyInLinesArray","_existingLine","ConnectorAnchor","_id","_domElement","_canvas","getId","getCentroid","r","getBoundingClientRect","right","left","bottom","top","viewportRelativeRect","pageOffset","getPageOffset","getRoutingPoints","halfWidth","halfHeight","getBoundingRectange","ConnectorEvent","Connector","_anchorStart","_anchorEnd","_containerDomElement","_strokeColor","_strokeWidth","eventNameToHandlerFunc","Map","pathPoints","pathElem","window","document","createElementNS","setAttribute","style","stroke","strokeWidth","addEventListener","e","observers","get","handler","pageX","pageY","svgDomElem","appendPathToContainerDomElement","appendChild","setMarkerStartUrl","_url","setMarkerEndUrl","getPathPoints","getPathLines","totalLength","pathLines","getMidpoint","lengthSoFar","curPathLineWithMidpoint","pathLineLength","lengthBeforeCur","midOnCurPath","getMidpointDirection","refresh","_svgPath","_pathPoints","anchorIds","sort","getAnchorStart","getAnchorEnd","removePathElement","remove","addClassToDomElement","_cl","classList","add","removeClassFromDomElement","getDescriptor","on","_eventName","_handlerFunc","allHandlers","set","off","_callback","allCallbacks","eventHandlers","splice","PointVisibilityMap","_freePoints","_boundaryLines","boundaryLinesArr","freePointsArr","pointToVisibleSet","doesLineIntersectAnyBoundaryLines","_theLine","intersectionType","b","computePointsVisibility","ijLine","getVisiblePointsFrom","_currentPoint","visiblePoints","routeToEndpoint","_currentRouteLength","_pointsInRoute","curMinCost","visiblePointWithMinCost","_vp","gn","hn","optimizeRoute","ptrA","ln","currentMaxLength","_ptKey","lineOfSight","findVisiblePointClosestTo","_freePt","lineOfSightLength","computeRoute","firstRoutingPoint","routeSegment","currentRouteLen","pointsInRoute","currentPoint","lastSegmentToEndpoint","point","GRID_STYLE","DOT","Grid","_size","_color","_style","getSize","getStyle","getSvgImageTile","Canvas","_canvasDomElement","_window","_connectorRoutingWorker","svgElem","width","height","connectorsContainerDomElement","grid","transitionCss","transformOriginX","transformOriginY","translateX","translateY","scaleFactor","invScaleFactor","invTransformationMatrixStack","currentInvTransformationMatrix","currentTransformationMatrix","currentPointVisiblityMap","useTranslate3d","canvasObjects","objectConnectors","objectIdBeingDragged","objectIdBeingResized","objectDragX","objectDragY","objectDragStartX","objectDragStartY","dblTapDetectVars","lastTouchX","lastTouchY","lastTouchTime","connectorAnchorsSelected","connectorAnchorToNumValidRoutingPoints","getCurrentPointVisibilityMap","setGrid","_grid","backgroundImage","btoa","backgroundRepeat","backgroundColor","getGrid","getGridSize","getAccessibleRoutingPointsFromObjectAnchors","_objs","clear","allRoutingPoints","filteredRoutingPoints","_o","anchors","getConnectorAnchors","routingPoints","_rp","isPointWithinObj","obj","boundingRect","routingPoint","currentNumRoutingPoints","parentAnchor","getObjectExtentRoutingPoints","pointSet","_obj","_sp","getConnectorRoutingPointsAroundAnchor","getConnectorBoundaryLines","boundaryLines","_l","_anchor","refreshAllConnectors","connectorDescriptors","_c","routingPointsAroundAnchor","objectExtentRoutingPoints","routingPointsAroundAnchorFloat64Array","routingPointsFloat64Array","boundaryLinesFloat64Array","postMessage","buffer","onmessage","_msg","data","getConnectorDescriptorById","id","descriptor","ps","pointsInPath","svgPath","emitEvent","makeNewConnector","setConnectorFactory","_newConnectorFactory","getTransitionCss","setTransitionCss","_css","transition","getTransformOriginX","getTransformOriginY","getScaleFactor","getTranslateX","getTranslateY","setTransformOrigin","transformOrigin","scale","_scaleFactor","_adjustFactorToPreserveIntegerGrid","newGridSize","roundedGridSize","round","scaleMat","translate","translateMatrix","applyTransform","transform","getTranformMatrixCss","getTransformMatrix","matElems","resetTransform","pageXOffset","pageYOffset","snapToGrid","_p","ret","max","getOffsetLeft","offsetLeft","getOffsetTop","offsetTop","offsetWidth","offsetHeight","calcBoundingBox","minTop","minLeft","maxBottom","maxRight","element","index","array","getObjectsAroundPoint","ptRect","getAllObjects","publishSiblingObjectChange","_eventData","handleSiblingObjectChange","getObjectById","foundObject","addObject","handleResizeStart","handleMoveStart","removeObject","_objId","getConnector","c","getAllConnectors","getConnectorsBetweenObjects","_objA","_objB","foundConnectors","_conn","aS","aE","hasConnectorAnchor","getObjectsConnectedViaConnector","_connectorId","foundObjects","allObjs","getConnectorsConnectedToObject","getObjectWithConnectorAnchor","_connectorAnchorId","allObjects","removeAllConnectors","removeConnector","_connector","makeNewConnectorFromAnchors","_anchorA","_anchorB","newConnector","foundConnector","findBestConnectorAnchorsToConnectObjects","_onFound","searchFunc","_searchData","objANumValidRoutingPoints","objAConnectorAnchors","objectA","objBConnectorAnchors","objectB","startAnchorIdxWithMinDist","endAnchorIdxWithMinDist","minDist","MAX_VALUE","x","y","aCentroid","bCentroid","d","objBNumValidRoutingPoints","cb","setTimeout","addConnectionAnchorToSelectionStack","dblClickTapHandler","_posX","_posY","objectsAroundPoint","eventData","initInteractionHandlers","_dblTapSpeed","_dblTapRadius","invTransformedPos","canvasObjectClicked","target","changedTouches","dblTapDetected","now","Date","getTime","timeSinceLastTouch","lastX","lastY","distFromLastTouch","_e","handleMove","translateOffset","getTranslateHandleOffset","mx","my","handleMoveEnd","mxStart","myStart","handleResize","newWidth","newHeight","resize","initTransformationHandlers","touches","preventDefault","which","stopPropagation","cbFunc","CanvasObject","_translateHandleDomElements","_resizeHandleDomElements","MOUSE_MIDDLE_BUTTON","connectorAnchors","nextConnectorAnchorIdSuffix","currentTranslateHandleElementActivated","currentResizeHandleElementActivated","Event","TRANSLATE_START","TRANSLATE","RESIZE_START","RESIZE","addNonInteractableConnectorAnchor","_connectorAnchorDomElement","newAnchor","addInteractableConnectorAnchor","anchor","getConnectorAnchorRoutingPoints","anchorPoints","_domElementStyleUpdateOverrideFunc","getDomElement","getBoundingPoints","topLeft","topRight","bottomLeft","bottomRight","suspendTranslateInteractions","unbindTranslateHandleElements","resumeTranslateInteractions","bindTranslateHandleElements","translateTouchStartHandler","translateMouseDownHandler","_el","removeEventListener","resizeMouseDownHandler","resizeTouchStartHandler","bindResizeHandleElements","Cluster","getObjectIndex","getObjectIndexById","getObjects","getObjectIds","ids","removeObjectById","idx","removeAllObjects","BoxClusterDetector","_boxExtentOffset","getObjectIndexFromArray","_canvasObjectsArray","removeObjectsFromArray","_objects","getClusterWithMostObjectsFromClusterMap","_clusterToObjectCountMap","curMaxObjs","curClusterWithMax","_numObjs","_cluster","_map","areObjectsClose","nA","nB","getAllObjectsCloseTo","_objectsUnderConsideration","getClusterObjectsFromSeed","_seedObj","_resultSet","closeByObjects","concat","findIntersectingClustersForObjects","_clusters","intersectingClusterToNumObjectsIntersecting","clusterObjs","has","removeObjectFromClusters","computeClusters","_knownClusters","_getNewIdFunc","clusters","map","objectsUnderConsideration","pop","objsForCluster","size","newCluster","_clusterObject","clusterToModify","nonEmptyClusters","filter"],"mappings":"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"}